<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Drzone</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-02T14:33:43.309Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Dreamin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络</title>
    <link href="http://example.com/2022/10/10/network/"/>
    <id>http://example.com/2022/10/10/network/</id>
    <published>2022-10-10T03:11:10.000Z</published>
    <updated>2022-11-02T14:33:43.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Internet"><a href="#什么是Internet" class="headerlink" title="什么是Internet"></a>什么是Internet</h2><p><strong>网络协议</strong></p><p>协议 (protocol) 定义了在两个或多个通信实体之间交换的报文的格式和顺 序，以及报文发送和或接收一条报文或其他事件所采取的动作</p><p>掌握计算机网络领域知识的过程就是理解网络协议的构成原理和工作方式的过程。</p><p><strong>网络边缘</strong></p><p>处于互联网的边缘，与因特网相连的计算机和其他设备称为端系统。包括了桌面计算机、服务器、和移动计算机。</p><p>网络核心&lt;——&gt;主机 互相连接</p><p>端系统（主机）</p><ul><li>运行应用程序</li><li>如Web、email</li></ul><p>C&#x2F;S模式</p><ul><li>客户端向服务器请求、接收服务</li></ul><p>对等(peer-peer)模式（迅雷P2P</p><ul><li>没有专门的服务器</li></ul><h3 id="网络核心：电路交换"><a href="#网络核心：电路交换" class="headerlink" title="网络核心：电路交换"></a><strong>网络核心：电路交换</strong></h3><p> 端到端的资源被分配给从源端 到目标端的呼叫 “call”</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006205931503.png" alt="image-20221006205931503"></p><p>图中，每段链路有4条线路： </p><ul><li><p>该呼叫采用了上面链路的第2 个线路，右边链路的第1个线路（piece） </p></li><li><p>独享资源：不同享 </p><p>每个呼叫一旦建立起来就能够 保证性能 </p><p>如果呼叫没有数据发送，被分配 的资源就会被浪费 (no sharing) </p><p>通常被传统电话网络采用k</p></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006195008733.png" style="zoom:33%;" /><p>为呼叫预留端-端资源 </p><ul><li>链路带宽、交换能力 </li><li>专用资源：不共享 </li><li>保证性能 </li><li>要求建立呼叫连</li></ul><p><strong>电路交换不适合计算机之间的通信</strong></p><ul><li>连接建立时间长</li><li>计算机之间的通信有突发性，如果使用线路交 换，则浪费的片较多  <ul><li>即使这个呼叫没有数据传递，其所占据的片也不能 够被别的呼叫使用</li></ul></li></ul><h3 id="网络核心：分组交换"><a href="#网络核心：分组交换" class="headerlink" title="网络核心：分组交换"></a><strong>网络核心：分组交换</strong></h3><ul><li>以分组为单位储存<ul><li>网络带宽资源不再分分为一个个片，传输时使用全部带宽</li><li>主机之间传输的数据被分为一 个个分组</li></ul></li><li>资源共享，按需使用<ul><li>存储-转发：分组每次移 动一跳<ul><li>在转发之前，节点必须收到 整个分组</li><li>延迟比线路交换要大</li><li>排队时间</li></ul></li></ul></li></ul><p><strong>分组交换 vs. 电路交换</strong></p><p>分组交换是“突发数据的胜利者？”</p><ul><li>适合于对突发式数据传输<ul><li>资源共享</li><li>简单，不必建立呼叫</li></ul></li><li>过度使用会造成网络拥塞：分组延时和丢失<ul><li>对可靠地数据传输需要协议来约束：拥塞控制</li></ul></li></ul><p><strong>分组交换网络：存储-转发</strong></p><ul><li>分组交换: 分组的存储转发一段一段从源端传到目标端 ，按照有无网络层的连接，分为<ol><li>数据报网络<ul><li>分组的目标地址决定下一跳</li><li>在不同的阶段，路由可以改变</li></ul></li><li>虚电路网络：<ul><li>每个分组都带标签（虚电路标识 VC ID），标签决定下一跳</li><li>在呼叫建立时决定路径，在整个呼叫中路径保持不变</li><li>路由器维持每个呼叫的状态信息</li></ul></li></ol></li></ul><h3 id="数据报的工作原理"><a href="#数据报的工作原理" class="headerlink" title="数据报的工作原理"></a><strong>数据报的工作原理</strong></h3><ul><li>在通信之前,无须建立起一个连接,有数据就传输</li><li>每一个分组都独立路由(路径不一样,可能会失序)</li><li>路由器根据分组的目标地址进行路由</li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007102959687.png" alt="image-20221007102959687"></p><p><strong>接入网和物理媒体</strong></p><ul><li><p>住宅接入：modem</p></li><li><p>接入网: digital subscriber line (DSL)</p></li><li><p>物理媒体：同轴电缆、光纤</p></li></ul><h3 id="网络结构和ISP"><a href="#网络结构和ISP" class="headerlink" title="网络结构和ISP"></a><strong>网络结构和ISP</strong></h3><ul><li><p>ISPs (Internet Service Providers)：因特网服务提供商</p></li><li><p>中心：第一层ISP（如UUNet, BBN&#x2F;Genuity, Sprint,  AT&amp;T）国家&#x2F;国际覆盖，速率极高</p><ul><li>直接与其他第一层ISP相吃连</li><li>与大量的第二层ISP和其他客户网络相连</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007114949144.png" alt="image-20221007114949144" style="zoom:50%;" /><ul><li>第二层ISP: 更小些的 (通常是区域性的) ISP<ul><li>与一个或多个第一层ISPs，也可能与其他第二层ISP</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007115043389.png" alt="image-20221007115043389" style="zoom:50%;" /><ul><li>第三层ISP与其他本地ISP<ul><li>接入网 (与端系统最近)</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007115135198.png" alt="image-20221007115135198" style="zoom: 50%;" /><ul><li>ISP之间的连接<ul><li>POP：高层ISP面向客户网络的接入点，涉及费用结算<ul><li>如一个低层ISP接入多个高层ISP，多宿（multi home）</li></ul></li><li>对等接入：2个ISP对等互接，不涉及费用结算</li><li>IXP：多个对等ISP互联互通之处，通常不涉及费用结算</li><li>ICP：自己部署专用网络，同时和各级ISP连接</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007115555904.png" alt="image-20221007115555904" style="zoom:67%;" /><h3 id="分组延时"><a href="#分组延时" class="headerlink" title="分组延时"></a><strong>分组延时</strong></h3><p>节点处理延时：nodal processing</p><ul><li>通常是微秒数量级或更</li></ul><p>排队延时：queueing</p><ul><li>取决于拥塞程度</li></ul><p>传输延时：transmission </p><ul><li>&#x3D; L&#x2F;R, 对低速率的链路而言很大（如拨号），通常为微秒级 到毫秒级</li></ul><p>传播延时：propagation</p><ul><li>几微秒到几百毫秒</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210091652256.png" alt="image-20221009165208210" style="zoom:50%;" /><p><strong>分组丢失</strong></p><ul><li>链路的队列缓冲区容量有限</li><li>当分组到达一个满的队列时，该分组将会丢失 </li><li>丢失的分组可能会被前一个节点或源端系统重传，或根本不重传</li></ul><p> Ps: TTL的概念:ICMP包的转发次数（跳数）,最大值是255,每经过一个路由器，路由器都会修改这个TTL字段值，具体的做法是把该TTL的值减1，然后再将IP包转发出去。如果在IP包到达目的IP之前，TTL减少为0，路由器将会丢弃收到的TTL&#x3D;0的IP包并向IP包的发送者发送 ICMP time exceeded消息</p><p><strong>吞吐量</strong></p><p>在源端和目标端之间传输的速率（数据量&#x2F;单位时间）</p><ul><li><p><em>瞬间吞吐量:</em> 在一个时间点的速率</p></li><li><p><em>平均吞吐量:</em> 在一个长时间内平均</p></li><li><p>瓶颈链路：端到端路径上，限制端到端吞吐的链路</p></li></ul><h3 id="协议层次"><a href="#协议层次" class="headerlink" title="协议层次"></a>协议层次</h3><p><strong>服务和服务访问点</strong></p><ul><li><p>服务：低层实体向上层实体提供它们之间的通信的能力</p></li><li><p>原语（API）：上层使用下层服务的形式，高层使用低层提供的服务，以及低层向高层提供服务都是通过服务访问原语来进行交互的—形式</p></li><li><p>服务访问点 SAP (Services Access Point) ：上层使用下层提供的服务通过层间的接口—地点 Ps : 传输层端口SAP</p></li></ul><p><strong>服务与协议</strong></p><ul><li><p>服务(Service)：低层实体向上层实体提供它们之间的通信的能力，是通过原语(primitive)来操作的，垂直</p></li><li><p>协议(protocol) ：对等层实体(peer entity)之间在相互通信的过程中，需要遵循的规则的集合，水平</p></li></ul><p>关系</p><ul><li>本层协议的实现要靠下层提供的服务来实现 </li><li>本层实体通过协议为上层提供更高级</li></ul><p><strong>数据单元</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210100948378.png" alt="image-20221010094835303" style="zoom:33%;" />$$关系：一对多、一对一、多对多$$**Internet 协议栈**<ul><li><p>应用层: 网络应用 </p><ul><li>为人类用户或者其他应用进程提供网络应用服务 </li><li>FTP, SMTP, HTTP,DNS</li></ul></li><li><p>传输层: 主机之间的数据传输 </p><ul><li>在网络层提供的端到端通信基础上，细分为进程到进程，将不可靠的通信变成可靠地通信 </li><li>TCP, UDP</li></ul></li><li><p>网络层: 为数据报从源到目的选择路由 </p><ul><li>主机主机之间的通信，端到端通信，不可靠 </li><li>IP, 路由协议</li></ul></li><li><p>链路层: 相邻网络节点间的数据传输 </p><ul><li>2个相邻2点的通信，点到点通信，可靠或不可靠 </li><li>点对对协议PPP, 802.11(Wi-Fi), Ethernet</li></ul></li><li><p>物理层: 在线路上传送bit</p></li></ul><p><strong>参考模型</strong></p><ul><li><p>表示层: 允许应用解释传输的 数据  eg. 加密，压缩，机 器相关的表示转换</p></li><li><p>会话层: 数据交换的同步，检查点，恢复</p></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210101330723.png" alt="image-20221010133003673" style="zoom:33%;" /><p><strong>协议数据单元</strong></p><ul><li>应用层：报文(message) </li><li>传输层：报文段(segment)：TCP段，UDP数据报 </li><li>网络层：分组packet（如果无连接方式：数据报 datagram） </li><li>数据链路层：帧(frame) </li><li>物理层：位(bit)</li></ul><h3 id="Internet历史"><a href="#Internet历史" class="headerlink" title="Internet历史"></a>Internet历史</h3><ul><li><p><strong>早期（1960年以前的）网络</strong></p><ul><li>线路交换网络 </li><li>线路交换的特性使得其不适合计算机之间的通信 <ul><li>线路建立时间过长 </li><li>独享方式占用通信资源，不适合突发性很强的计算机之间的通信 </li><li>可靠性不高：非常不适合军事通信</li></ul></li><li>三个小组独立地开展分组交换的研究</li></ul></li><li><p><strong>1961-1972: 早期的分组交换概念</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210111533731.png" alt="image-20221011153340655" style="zoom:50%;" /></li><li><p><strong>1972-1980: 专用网络和网络互联</strong></p></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210111534382.png" alt="image-20221011153431328" style="zoom:50%;" /><ul><li><strong>1980-1990: 体系结构变化, 网络数量激增，应用丰富</strong></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210111535086.png" alt="image-20221011153514037" style="zoom:50%;" /><ul><li><strong>1990, 2000’s: 商业化, Web, 新的应用</strong></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210111537020.png" alt="image-20221011153738964" style="zoom:50%;" /><ul><li><strong>2005-现在</strong></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210111556676.png" alt="image-20221011155618628" style="zoom:50%;" /><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>组成角度看什么是互联网 </p><ul><li><p>边缘：端系统（包括应用）+接入网 </p></li><li><p>核心：网络交换设备+通信链路 </p></li><li><p>协议：对等层实体通信过程中遵守的规则的集合 </p><ul><li>语法，语义，时序</li></ul></li></ul><p>为了实现复杂的网络功能，采用分层方式设计、实现和调试 </p><ul><li>应用层，传输层，网络层，数据链路层，物理层 </li><li>协议数据单位：  报文，报文段，分组，帧，位</li></ul><p>从 服务角度看互联网 </p><ul><li><p>通信服务基础设施 </p><ul><li>提供的通信服务：面向连接 无连接</li></ul></li><li><p>应用</p></li></ul><p>应用之间的交互 </p><ul><li>C&#x2F;S模式 </li><li>P2P模式</li></ul><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p>网络应用的原理：网络应用协议的概念和实现方面</p><ul><li>传输层的服务模型</li><li>客户-服务器模式</li><li>对等模式(peer-to-peer)</li><li>内容分发网络</li></ul><p>网络应用的实例：互联网流行的应用层协议</p><ul><li>HTTP</li><li>FTP</li><li>SMTP &#x2F; POP3 &#x2F; IMAP</li><li>DNS</li></ul><p>编程：网络应用程序</p><ul><li>Socket API</li></ul><h3 id="应用架构"><a href="#应用架构" class="headerlink" title="应用架构"></a><strong>应用架构</strong></h3><ul><li>客户-服务器模式（C&#x2F;S:client&#x2F;server）</li><li>对等模式(P2P:Peer To Peer)</li><li>混合体：客户-服务器和对等体系</li></ul><p><strong>客户-服务器（C&#x2F;S）体系结构</strong></p><ul><li><p>服务器:<br>一直运行<br>固定的IP地址和周知的端口号（约定）</p><p>扩展性：服务器场</p><ul><li>数据中心进行扩展 </li><li>扩展性差</li></ul></li><li><p>客户端:<br> 主动与服务器通信<br> 与互联网有间歇性的连接<br> 可能是动态IP 地址<br> 不直接与其它客户</p></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210212145666.png" alt="image-20221021214513597" style="zoom: 50%;" /><p><strong>对等体（P2P）体系结构</strong></p><ul><li>（几乎）没有一直运行的服务器</li><li>任意端系统之间可以进行通信</li><li>每一个节点既是客户端又是服务器<ul><li>自扩展性-新peer节点带来新的服务能力，当然也带来新的服务请求</li></ul></li><li>参与的主机间歇性连接且可以改变IP 地址 <ul><li>难以管理</li><li>例子: Gnutella，迅雷</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210212146714.png" alt="image-20221021214616664" style="zoom:50%;" /><p><strong>C&#x2F;S和P2P体系结构的混合体</strong></p><p>Napster<br>文件搜索：集中 </p><ul><li>主机在中心服务器上注册其资源 </li><li>主机向中心服务器查询资源位置<br>文件传输：P2P</li><li>任意Peer节点之间<br>即时通信<br>在线检测：集中</li><li>当用户上线时，向中心服务器注册其IP地址</li><li>用户与中心服务器联系，以找到其在线好友的位置<br>两个用户之间聊天：P2P</li></ul><p><strong>进程通信</strong></p><p>进程：在主机上运行的应用程序</p><ul><li>在同一个主机内，使用进程间通信机制通信（操作系统定义）</li><li>不同主机，通过交换报文（Message）来通信<ul><li>使用OS提供的通信服务</li><li>按照应用协议交换报文 <ul><li>借助传输层提供的服务</li></ul></li></ul></li></ul><table><thead><tr><th>客户端进程</th><th>服务端进程</th></tr></thead><tbody><tr><td>发起通信的进程</td><td>等待连接的进程</td></tr></tbody></table><p><strong>分布式进程通信需要解决的问题</strong></p><blockquote><p>进程标示和寻址问题（服务用户）</p></blockquote><ul><li>对进程进行编址（addressing）</li><li>进程为了接收报文，必须有一个标识即：SAP（发送也需要标示）<ul><li>主机：唯一的 32位IP地址 <ul><li>仅仅有IP地址不能够唯一标示一个进程；在一台端系统上有很多应用进程在运行</li></ul></li><li>所采用的传输层协议：TCP or UDP</li><li>端口号（Port Numbers）</li></ul></li><li>一些知名端口号的例子：<ul><li>HTTP: TCP 80 Mail: TCP25 ftp:TCP 2</li></ul></li><li>一个进程：用IP+port标示 端节点</li><li>本质上，一对主机进程之间的通信由2个端节点构成</li></ul><blockquote><p>传输层提供的服务-需要穿过层间的信息</p></blockquote><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221041373.png" alt="image-20221022104125324" style="zoom:50%;" /><p>层间接口必须要携带的信息 </p><ul><li>要传输的报文（对于本层来说：SDU） </li><li>谁传的：对方的应用进程的标示：IP+TCP(UDP) 端口 </li><li>传给谁：对方的应用进程的标示：对方的IP+TCP(UDP)端口号<br>传输层实体（tcp或者udp实体）根据这些信息进行TCP报文段（UDP数据报）的封装</li><li>源端口号，目标端口号，数据等 </li><li>将IP地址往下交IP实体，用于封装IP数据报：源IP,目标IP</li></ul><blockquote><p>传输层提供的服务-层间信息的代表</p></blockquote><p>如果Socket API 每次传输报文，都携带如此多的信息，太繁琐易错，不便于管理</p><ul><li>用个代号标示通信的双方或者单方：socket</li><li>就像OS打开文件返回的句柄一样<ul><li>对句柄的操作，就是对文件的操作</li></ul></li><li>TCP socket： <ul><li>TCP服务，两个进程之间的通信需要之前要建立连接 <ul><li>两个进程通信会持续一段时间，通信关系稳定</li></ul></li><li>可以用一个整数表示两个应用实体之间的通信关系，本地标示</li><li>穿过层间接口的信息量最小</li><li>TCP socket：源IP,源端口，目标IP，目标IP,目标端口</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221051745.png" alt="image-20221022105129685" style="zoom:50%;" /><blockquote><p>传输层提供的服务-层间信息代码</p></blockquote><p>UDP socket： </p><ul><li>UDP服务，两个进程之间的通信需要之前无需建立连接 <ul><li>每个报文都是独立传输的 </li><li>前后报文可能给不同的分布式进程</li></ul></li><li>因此，只能用一个整数表示本应用实体的标示 <ul><li>因为这个报文可能传给另外一个分布式进程 ·1</li></ul></li><li>穿过层间接口的信息大小最小</li><li>UDP socket：本IP,本端口</li><li>但是传输 报文时：必须要提供对方IP，port <ul><li>接收报文时： 传输层需要上传对方的IP，port</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221056915.png" alt="image-20221022105628862" style="zoom:50%;" /><p><em>套接字（Socket）</em></p><ul><li><p>进程向套接字发送报文或从套接字接收报文</p></li><li><p>套接字 &lt;-&gt; 门户 </p><ul><li>发送进程将报文推出门户，发送进程依赖于传输层设施在另外一侧的门将报文交付给接受进程   </li><li>接收进程从另外一端的门户收到报文（依赖于传输层设施)</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221058709.png" alt="image-20221022105821666" style="zoom:50%;" /></li></ul><blockquote><p>如何使用传输层提供的服务实现应用</p></blockquote><ul><li>定义应用层协议：报文格式，解释，时序等</li><li>编制程序，通过API调用网络基础设施提供通信服务传报文，解析报文，实现应用时序等</li></ul><h3 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h3><ul><li><p>定义了：运行在不同端系统上的应用进程如何相互交换报文</p><ul><li>交换的报文类型：请求和应答报文</li><li>各种报文类型的语法：报文中的各个字段及其描述 </li><li>字段的语义：即字段取值的含义 </li><li>进程何时、如何发送报文及对报文进行响应的规则</li></ul></li><li><p>应用协议仅仅是应用的一个组成部分 </p><ul><li>Web应用：HTTP协议，web客户端，web服务器，HTML</li></ul></li></ul><p><em>公开协议：</em>由RFC文档定义允许互操作</p><ul><li>如HTTP, SMTP</li></ul><p><em>专用（私有）协议：</em>协议不公开</p><ul><li>如：Skype</li></ul><p><strong>Internet 传输层提供的服务</strong></p><p>TCP 服务：</p><ul><li>可靠的传输服务</li><li>流量控制：发送方不会淹没接受方</li><li>拥塞控制：当网络出现拥塞时，能抑制发送方</li><li>不能提供的服务：时间保证、最小吞吐保证和安全</li><li>面向连接：要求在客户端进程和服务器进程之间建立连接</li></ul><p>UDP 服务：</p><ul><li>不可靠数据传输</li><li>不提供的服务：可靠，流量控制、拥塞控制、时间、带宽保证、建立连接</li></ul><blockquote><p> UDP存在的必要性</p></blockquote><ul><li>能够区分不同的进程，而IP服务不能 <ul><li>在IP提供的主机到主机端到端功能的基础上，区分了主机的应用进程</li></ul></li><li>无需建立连接，省去了建立连接时间，适合事务性的应用</li><li>不做可靠性的工作，例如检错重发，适合那些对实时性要求比较高而对正确性要求不高的应用 <ul><li>因为为了实现可靠性（准确性、保序等），必须付出时间代<br>价（检错重发）</li></ul></li><li>没有拥塞控制和流量控制，应用能够按照设定的速度发送数据 <ul><li>而在TCP上面的应用，应用发送数据的速度和主机向网络发送的实际速度是不一致的，因为有流量控制和拥塞控制</li></ul></li></ul><p><strong>Internet应用及其应用层协议和传输协议</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221117829.png" alt="image-20221022111719774" style="zoom:50%;" /><p><strong>安全TCP</strong><br>TCP &amp; UDP </p><ul><li>都没有加密</li><li>明文通过互联网传输，甚至密码<br>SSL</li><li>在TCP上面实现，提供加密的TCP连接</li><li>私密性</li><li>数据完整性</li><li>端到端的鉴</li></ul><p>SSL在应用层</p><ul><li>应用采用SSL库，SSL库使用TCP通信<br>SSL socket API</li><li>应用通过API将明文交给socket，SSL将其加密在互联网上传输</li></ul><h3 id="Web-与-HTTP"><a href="#Web-与-HTTP" class="headerlink" title="Web 与 HTTP"></a>Web 与 HTTP</h3><p>术语</p><ul><li>Web页：由一些对象组成</li><li>对象可以是HTML文件、JPEG图像、Java小程序、声音剪辑文件等</li><li>Web页含有一个基本的HTML文件，该基本HTML文件又包含若干对象的引用（链接）</li><li>通过URL对每个对象进行引用 <ul><li>访问协议，用户</li></ul></li></ul><p>URL格式:</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221125044.png" alt="image-20221022112518993" style="zoom:50%;" /><p><strong>响应时间模型</strong></p><p>往返时间RTT（round-trip time）：一个小的分组从客户端到服务器，在回到客户端的时间（传输时间忽略）<br>响应时间：</p><ul><li>一个RTT用来发起TCP连接</li><li>一个 RTT用来HTTP请求并等待HTTP响应</li><li>文件传输时间<br>共：2RTT+传输时间</li></ul><p>基础：(<a href="https://dreamin.space/2022/09/12/Http/">Http基础 | Drzone (dreamin.space)</a>)</p><p><strong>用户-服务器状态：cookies</strong></p><p>大多数主要的门户网站使用 cookies<br>4个组成部分：</p><ol><li>在HTTP响应报文中有一个cookie的首部行</li><li>在HTTP请求报文含有一个cookie的首部行</li><li>在用户端系统中保留有一个cookie文件，由用户的浏览器管理</li><li>在Web站点有一个后端数据库</li></ol><p><strong>Cookies：维护状态</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221211939.png" alt="image-20221022121158868" style="zoom:50%;" /><p>Cookies能带来什么：</p><ul><li><p>用户验证</p></li><li><p>购物车</p></li><li><p>推荐</p></li><li><p>用户状态 (Web e-mail)</p></li></ul><p>Cookies与隐私：</p><ul><li><p>Cookies允许站点知道许多关于用户的信息</p></li><li><p>可能将它知道的东西卖给第三方</p></li><li><p>使用重定向和cookie的搜索引擎还能知道用户更多的信息</p></li><li><p>如通过某个用户在大量站点上的行为，了解其个人浏览方式的大致模式</p></li><li><p>广告公司从站点获得信息</p></li></ul><p><em>如何维持状态：</em></p><ul><li><p>协议端节点：在多个事务上，发送端和接收端维持状态</p></li><li><p>cookies: http报文携带状态信息</p></li></ul><p><strong>Web缓存 (代理服务器)</strong></p><p>目标：不访问原始服务器，就满足客户的请求。</p><ul><li><p>用户设置浏览器： 通过缓存访问Web</p></li><li><p>浏览器将所有的HTTP请求发给缓存 </p><ul><li>在缓存中的对象：缓存直接返回对象 </li><li>如对象不在缓存，缓存请求原始服务器，然后再将对象返回给客户端</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221610265.png" alt="image-20221022161046155" style="zoom: 33%;" /><ul><li>缓存既是客户端又是服务器</li><li>通常缓存是由ISP安装 (大学、公司、居民区ISP)</li></ul><blockquote><p>为什么要使用Web缓存</p></blockquote><ul><li>降低客户端的请求响应时间</li><li>可以大大减少一个机构内部网络与Internet接入链路上的流量</li><li>互联网大量采用了缓存：<br>可以使较弱的ICP也能够有效提供内容</li></ul><blockquote><p> Ps. 百分之八十的人访问了百分之二十的互联网内容，提高运输层带宽的成本远远高于部署Web本地缓存服务器</p></blockquote><p><strong>条件GET方法</strong></p><p>①目标：如果缓存器中的对象拷贝是最新的，就不要发送对象<br>②缓存器: 在HTTP请求中指定缓存拷贝的日期<br>If-modified-since:<br><date><br>③服务器: 如果缓存拷贝陈旧，则响应报文没包含对象:<br>HTTP&#x2F;1.0 304 Not<br>Modified</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221618319.png" alt="image-20221022161851247" style="zoom:33%;" /><h3 id="FTP与Email"><a href="#FTP与Email" class="headerlink" title="FTP与Email"></a><strong>FTP与Email</strong></h3><p><strong>FTP: 文件传输协议</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221632734.png" alt="image-20221022163203692" style="zoom:50%;" /><ul><li>向远程主机上传输文件或从远程主机接收文件</li><li>客户&#x2F;服务器模式 <ul><li>客户端：发起传输的一方</li><li>服务器：远程主机</li></ul></li><li>ftp: RFC 959</li><li>ftp服务器：端口号为21</li></ul><p><strong>FTP: 控制连接与数据连接分开</strong></p><ul><li>FTP客户端与FTP服务器通过端口21联系，并使用TCP为传输协议</li><li>客户端通过控制连接获得身份确认</li><li>客户端通过控制连接发送命令浏览远程目录</li><li>收到一个文件传输命令时，服务器打开一个到客户端的数据连接</li><li>一个文件传输完成后，服务器关闭连接</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221634235.png" alt="image-20221022163410194" style="zoom: 50%;" /><ul><li>服务器打开第二个TCP数据连接用来传输另一个文件</li><li>控制连接： 带外（ “out of band” ）传送</li><li>FTP服务器维护用户的状态信息：当前路径、用户帐户与控制连接对应</li></ul><p><strong>FTP命令、响应</strong></p><p><em>命令样例：</em></p><ul><li>在控制连接上以ASCII文本方式传送</li><li>USER username </li><li>PASS password</li><li>LIST：请服务器返回远程主机当前目录的文件列表</li><li>RETR filename：从远程主机的当前目录检索文件<br>(gets)</li><li>STOR filename：向远程主机的当前目录存放文件<br>(puts)</li></ul><p><em>返回码样例：</em></p><ul><li>状态码和状态信息 (同HTTP)</li><li>331 Username OK, password required</li><li>125 data connection already open; transfer starting</li><li>425 Can’t open data connection</li><li>452 Error writing file</li></ul><p><strong>电子邮件（Email）</strong></p><p>邮件服务器</p><ul><li>邮箱中管理和维护发送给用户的邮件</li><li>输出报文队列保持待发送邮件报文</li><li>邮件服务器之间的SMTP协议：发送email报文<ul><li>客户：发送方邮件服务器 </li><li>服务器：接收端邮件服务器</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210270959381.png" alt="image-20221027095903421" style="zoom:50%;" /><p><strong>SMTP</strong></p><ul><li>使用TCP在客户端和服务器之间传送报文，端口号为25</li><li>直接传输：从发送方服务器到接收方服务器</li><li>传输的3个阶段<ul><li>握手</li><li>传输报文</li><li>关闭</li></ul></li><li>命令&#x2F;响应交互<ul><li>命令：ASCII文本</li><li>响应：状态码和状态信息</li></ul></li><li>报文必须为7位ASCII</li></ul><blockquote><p>特点</p></blockquote><ul><li>SMTP使用持久连接</li><li>SMTP要求报文（首部和主体）为7位ASCII编码</li><li>SMTP服务器使用CRLF.CRLF决定报文的尾部</li></ul><p>与HTTP比较：</p><ul><li>HTTP：拉（pull）</li><li>SMTP：推（push）</li><li>二者都是ASCII形式的命令&#x2F;响应交互、状态码</li><li>HTTP：每个对象封装在各自的响应报文中</li><li>SMTP：多个对象包含在一个报文中</li></ul><p><strong>邮件报文格式</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271010009.png" alt="image-20221027101028919" style="zoom: 50%;" /><p>多媒体拓展</p><ul><li>MIME：多媒体邮件扩展（multimedia mail extension）, RFC 2045, 2056</li><li>在报文首部用额外的行申明MIME内容类</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271014185.png" alt="image-20221027101405139" style="zoom: 50%;" /><p><strong>POP3协议</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271017668.png" alt="image-20221027101712614" style="zoom:50%;" /><p><strong>POP3与IMAP</strong></p><p>POP3</p><p>(本地管理文件夹)</p><ul><li>先前的例子使用 “下载并删除”模式。<ul><li>如果改变客户机，Bob不能阅读邮件</li></ul></li><li>“下载并保留”：不同客户机上为报文的拷贝</li><li>POP3在会话中是无状态的</li></ul><p>IMAP</p><p>(远程管理文件夹)</p><ul><li>IMAP服务器将每个报文与一个文件夹联系起来</li><li>允许用户用目录来组织报文</li><li>允许用户读取报文组件</li><li>IMAP在会话过程中保留<br>  用户状态： <ul><li>目录名、报文ID与目录名之间映射</li></ul></li></ul><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p><strong>DNS（Domain Name System）的必要性</strong></p><ul><li>IP地址标识主机、路由器</li><li>但IP地址不好记忆，不便人类使用(没有意义)</li><li>人类一般倾向于使用一些有意义的字符串来标识Internet上的设备<br>例如：<a href="mailto:&#x71;&#122;&#x68;&#101;&#x6e;&#x67;&#x40;&#x75;&#x73;&#116;&#x63;&#46;&#x65;&#x64;&#117;&#46;&#x63;&#110;">&#x71;&#122;&#x68;&#101;&#x6e;&#x67;&#x40;&#x75;&#x73;&#116;&#x63;&#46;&#x65;&#x64;&#117;&#46;&#x63;&#110;</a> 所在的邮件服务器<br><a href="http://www.ustc.edu.cn/">www.ustc.edu.cn</a> 所在的web服务器</li><li>存在着“字符串”—IP地址的转换的必要性</li><li>人类用户提供要访问机器的“字符串”名称</li><li>由DNS负责转换成为二进制的网络地址</li></ul><blockquote><p>DNS系统需要解决的问题</p></blockquote><ul><li>问题1：如何命名设备<ul><li>用有意义的字符串：好记，便于人类用使用</li><li>解决一个平面命名的重名问题：层次化命名</li></ul></li><li>问题2：如何完成名字到IP地址的转换<ul><li>分布式的数据库维护和响应名字查询</li></ul></li><li>问题3：如何维护：增加或者删除一个域，需要在域名系统中做哪些工作</li></ul><p><strong>DNS(Domain Name System)的历史</strong></p><ul><li>ARPANET的名字解析解决方案<ul><li>主机名：没有层次的一个字符串（一个平面）</li><li>存在着一个（集中）维护站：维护着一张 主机名-IP地址的映射文件：Hosts.txt</li><li>每台主机定时从维护站取文件</li></ul></li><li>ARPANET解决方案的问题</li><li>当网络中主机数量很大时</li><li>没有层次的主机名称很难分配</li><li>文件的管理、发布、查找都很麻烦</li></ul><p><strong>DNS(Domain Name System)总体思路和目标</strong></p><ul><li>DNS的主要思路<ul><li>分层的、基于域的命名机制</li><li>若干分布式的数据库完成名字到IP地址的转换</li><li>运行在UDP之上端口号为53的应用服务</li><li>核心的Internet功能，但以应用层协议实现  在网络边缘处理复杂性</li></ul></li><li>DNS主要目的：<ul><li>实现主机名-IP地址的转换(name&#x2F;IP translate)</li><li>其它目的<ul><li>主机别名到规范名字的转换：Host aliasing</li><li>邮件服务器别名到邮件服务器的正规名字的转换：Mail server aliasing</li><li>负载均衡：Load Distribution</li></ul></li></ul></li></ul><p><strong>DNS名字空间(The DNS Name Space)</strong></p><p>DNS域名结构</p><ul><li>一个层面命名设备会有很多重名</li><li>NDS采用层次树状结构的 命名方法</li><li>Internet 根被划为几百个顶级域(top lever domains)<ul><li>通用的(generic)<br>.com; .edu ; .gov ; .int ; .mil ; .net ; .org ; .firm ; .hsop ; .web ; .arts ; .rec ;<br>+国家的(countries)<br>.cn ; .us ; .nl ; .jp</li></ul></li><li>每个(子)域下面可划分为若干子域(subdomains)</li><li>树叶是主</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271055314.png" alt="image-20221027105515254" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271100862.png" alt="image-20221027110023799" style="zoom:50%;" /><ul><li><p>域名的管理</p><ul><li>一个域管理其下的子域<br> .jp 被划分为 ac.jp co.jp</li></ul><p> .cn 被划分为 edu.cn com.cn</p><ul><li>创建一个新的域，必须征得它所属域的同意</li></ul></li><li><p>域与物理网络无关</p><ul><li>域遵从组织界限，而不是物理网络<ul><li>一个域的主机可以不在一个网络 </li><li>一个网络的主机不一定在一个域</li></ul></li><li>域的划分是逻辑的，而不是物理</li></ul></li></ul><p><strong>名字服务器(Name Server)</strong></p><ul><li>一个名字服务器的问题<ul><li>可靠性问题：单点故障</li><li>扩展性问题：通信容量</li><li>维护问题：远距离的集中式数据库</li></ul></li><li>区域(zone)<ul><li>区域的划分有区域管理者自己决定</li><li>将DNS名字空间划分为互不相交的区域，每个区域都是树的一部分</li><li>名字服务器： <ul><li>每个区域都有一个名字服务器：维护着它所管辖区域的权威信息(authoritative record)</li><li>名字服务器允许被放置在区域之外，以保障可靠</li></ul></li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271107892.png" alt="image-20221027110737818" style="zoom:50%;" /><p>权威DNS服务器：组织机构的DNS服务器，提供组织机构服务器（如Web和mail）可访问的主机和IP之间的映射，组织机构可以选择实现自己维护或由某个服务提供商来维护</p><p><strong>TLD服务器</strong></p><ul><li>顶级域(TLD)服务器：负责顶级域名（如com, org, net, edu和gov）和所有国家级的顶级域名（如cn, uk, fr, ca, jp ）<ul><li>Network solutions 公司维护com TLD服务器</li><li>Educause公司维护edu TLD服务器</li></ul></li></ul><p><strong>区域名字服务器维护资源记录</strong></p><ul><li>资源记录(resource records)<ul><li>作用：维护 域名-IP地址(其它)的映射关系</li><li>位置：Name Server的分布式数据库中</li></ul></li><li>RR格式: (domain_name, ttl, type,class,Value)<ul><li>Domain_name: 域名</li><li>Ttl: time to live : 生存时间(权威，缓冲记录)</li><li>Class 类别 ：对于Internet，值为IN</li><li>Value 值：可以是数字，域名或ASCII串</li><li>Type 类别：资源记录的类型—见下页</li></ul></li></ul><p><strong>DNS记录</strong></p><p>DNS ：保存资源记录(RR)的分布式数据库</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271115926.png" alt="image-20221027111542866" style="zoom:50%;" /><p><strong>资源记录</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271132989.png" alt="image-20221027113224909" style="zoom:50%;" /><p>DNS大致工作过程</p><ul><li>应用调用 解析器(resolver)</li><li>解析器作为客户 向Name Server发出查询报文（封装在UDP段中）</li><li>Name Server返回响应报文(name&#x2F;ip)</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271139873.png" alt="image-20221027113954828" style="zoom:50%;" /><p><strong>本地名字服务器（Local Name Server）</strong></p><ul><li>并不严格属于层次结构</li><li>每个ISP (居民区的ISP、公司、大学）都有一个本地DNS服务器<ul><li>也称为“默认名字服务器”</li></ul></li><li>当一个主机发起一个DNS查询时，查询被送到其本地DNS服务器<ul><li>起着代理的作用，将查询转发到层次结构中</li></ul></li></ul><p><strong>名字服务器(Name Server)</strong></p><ul><li>名字解析过程<ul><li>目标名字在Local Name Server中<ul><li>情况1：查询的名字在该区域内部</li><li>情况2：缓存(cashing)</li></ul></li></ul></li></ul><p>当与本地名字服务器不能解析名字时，联系根名字服务器顺着根-TLD一直找到权威名字服务器。</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271142467.png" alt="image-20221027114248425" style="zoom: 50%;" /><p><strong>递归查询</strong></p><ul><li>名字解析负担都放在当前联络的名字服务器上</li><li>问题：根服务器的负担太重</li><li>解决： 迭代查询(iterated queries)</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271147623.png" alt="image-20221027114731574" style="zoom: 50%;" /><p><strong>迭代查询</strong></p><ul><li>主机cis.poly.edu 想知道主机 gaia.cs.umass.edu的IP地址<ul><li><p>根（及各级域名）服务器返回的不是查询结果，而是下一个NS的地址</p></li><li><p>后由权威名字服务器给出解析结果</p></li><li><p>当前联络的服务器给出可以联系的服务器的名字</p><p>“我不知道这个名字，但可以向这个服务器请求”</p></li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271156706.png" alt="image-20221027115618660" style="zoom: 50%;" /><p><em>DNS协议：查询和响应报文的报文格式相同</em></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271159768.png" alt="image-20221027115915717" style="zoom: 50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210271159759.png" alt="image-20221027115951702" style="zoom:50%;" /><p><strong>提高性能：缓存</strong></p><ul><li>一旦名字服务器学到了一个映射，就将该映射缓存起来</li><li>根服务器通常都在本地服务器中缓存着<ul><li>根服务器不用经常被访问</li></ul></li><li>目的：提高效率</li><li>可能存在的问题：如果情况变化，缓存结果和权威资源记录不一致</li><li>解决方案：TTL（默认2天）</li></ul><p><strong>维护问题：新增一个域</strong></p><ul><li>在上级域的名字服务器中增加两条记录，指向这个新增的子域的域名和域名服务器的地址</li><li>在新增子域 的名字服务器上运行名字服务器，负责本域的名字解析： 名字-&gt;IP地址<br>例子：在com域中建立一个“Network Utopia”</li><li>到注册登记机构注册域名networkutopia.com<ul><li>需要向该机构提供权威DNS服务器（基本的、和辅助的）的名字和IP地址</li><li>登记机构在com TLD服务器中插入两条RR记录: (networkutopia.com,dns1.networkutopia.com, NS)<br>(dns1.networkutopia.com, 212.212.212.1, A)</li></ul></li><li>在networkutopia.com的权威服务器中确保有<ul><li>用于Web服务器的 <a href="http://www.networkuptopia.com/">www.networkuptopia.com</a> 的类型为A的记录</li><li>用于邮件服务器mail.networkutopia.com的类型为MX的记</li></ul></li></ul><p><strong>攻击DNS</strong></p><p>DDoS 攻击</p><ul><li>对根服务器进行流量轰炸攻击：发送大量ping<ul><li>没有成功</li><li>原因１：根目录服务器配置了流量过滤器，防火墙</li><li>原因２：Local DNS 服务器缓存了TLD服务器的IP地址, 因此无需查询根服务器</li></ul></li><li>向TLD服务器流量轰炸攻击：发送大量查询<ul><li>可能更危险</li><li>效果一般，大部分DNS缓存了TLD</li></ul></li></ul><p>重定向攻击</p><ul><li>中间人攻击<ul><li>截获查询，伪造回答，从而攻击某个（DNS回答指定的IP）站点</li></ul></li><li>DNS中毒<ul><li>发送伪造的应答给DNS服务器，希望它能够缓存这个虚假的结果</li></ul></li><li>技术上较困难：分布式截获和伪造利用DNS基础设施进行DDoS</li><li>伪造某个IP进行查询， 攻击这个目标IP</li><li>查询放大，响应报文比查询报文大</li><li>效果有限</li></ul><h3 id="P2P应用"><a href="#P2P应用" class="headerlink" title="P2P应用"></a>P2P应用</h3><p><strong>纯P2P架构</strong></p><ul><li>没有（或极少）一直运行的服务器</li><li>任意端系统都可以直接通信</li><li>利用peer的服务能力</li><li>Peer节点间歇上网，每次IP地址都有可能变化</li></ul><p>例子:</p><ul><li>文件分发 (BitTorrent)</li><li>流媒体(KanKan)</li><li>VoIP (Skype)</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210290949818.png" alt="image-20221029094951733" style="zoom:50%;" /><p><em>文件分发: C&#x2F;S vs P2P</em></p><blockquote><p>从一台服务器分发文件（大小F）到N个peer需要多少时间？</p></blockquote><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291014883.png" alt="image-20221029101421842" style="zoom: 67%;" /><p><strong>文件分发时间: C&#x2F;S模式</strong></p><p>服务器传输： 都是由服务器发送给peer，服务器必须顺序传输（上载）N个文件拷贝:</p><ul><li>发送一个copy: F&#x2F;Us</li><li>发送N个copy： NF&#x2F;Us</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291011901.png" alt="image-20221029101124855" style="zoom: 50%;" /><ul><li>客户端: 每个客户端必须下载一个文件拷贝</li><li>d(min) &#x3D; 客户端最小的下载速率</li><li>下载带宽最小的客户端下载的时间：F&#x2F;d(min)</li></ul><p>文件下载耗时（随着N线性增长）<br>Dc-s &gt; max{NF&#x2F;us,,F&#x2F;dmin</p><p><strong>文件分发时间: P2P模式</strong></p><ul><li>服务器传输：最少需要上载一份拷贝<ul><li>发送一个拷贝的时间：F&#x2F;us</li></ul></li><li>客户端: 每个客户端必须下载一个拷贝<ul><li>最小下载带宽客户单耗时：: F&#x2F;dmin</li></ul></li><li>客户端: 所有客户端总体下载量NF<ul><li>最大上载带宽是：us+Sui</li><li>除了服务器可以上载，其他所有的peer节点都可以上载</li></ul></li></ul><p>文件下载耗时（分子随着N线性变化，每个节点需要下载，整体下载量随着N增大，分母也是如此,随着peer节点的增多 每个peer也带了服务能力）<br>DP2P &gt; max{F&#x2F;us,,F&#x2F;dmin,,NF&#x2F;(us + Sui)}</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291048048.png" alt="image-20221029104814996" style="zoom:50%;" /><p><strong>P2P文件分发： BitTorrent</strong></p><ul><li>文件被分为一个个块256KB</li><li>网络中的这些peers发送接收文件块，相互服务</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291059943.png" alt="image-20221029105916875" style="zoom:50%;" /><ul><li>Peer加入torrent: <ul><li>一开始没有块，但是将会通过其他节点处累积文件块</li><li>向跟踪服务器注册，获得peer节点列表，和部分peer节点构成邻居关系 (“连接”)</li></ul></li><li>当peer下载时，该peer可以同时向其他节点提供上载服务</li><li>Peer可能会变换用于交换块的peer节点</li><li>扰动churn: peer节点可能会上线或者下线</li><li>一旦一个peer拥有整个文件，它会（自私的）离开或者保留（利他主义）在torrent中</li></ul><p><strong>BitTorrent: 请求，发送文件块</strong></p><p>请求块：</p><ul><li>在任何给定时间，不同peer节点拥有一个文件块的子集</li><li>周期性的，Alice节点向邻居询问他们拥有哪些块的信息</li><li>Alice向peer节点请求它希望的块，稀缺的块</li></ul><p>发送块：一报还一报 tit-for-tat</p><ul><li>Alice向4个peer发送块，这些块向它自己提供最大带宽的服务<ul><li>其他peer被Alice阻塞 (将不会从Alice处获得服务)</li><li>每10秒重新评估一次：前4位</li></ul></li><li>每个30秒：随机选择其他peer节点，向这个节点发送块<ul><li>“优化疏通” 这个节点</li><li>新选择的节点可以加入这个top</li></ul></li></ul><blockquote><p>BitTorrent: tit-for-tat</p></blockquote><p>(1) Alice “优化疏通” Bob<br>(2) Alice 变成了Bob的前4位提供者; Bob答谢Alice<br>(3) Bob 变成了Alice的前4提供者</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291104005.png" alt="image-20221029110439941" style="zoom:50%;" /><blockquote><p>两大问题：</p></blockquote><ul><li>如何定位所需资源</li><li>如何处理对等方的加入与离开</li></ul><blockquote><p>可能的方案</p></blockquote><ul><li>集中</li><li>分散</li><li>半分散</li></ul><p><strong>P2P：集中式目录</strong><br>最初的“Napster”设计</p><ol><li>当对等方连接时，它告知中心服务器：</li></ol><ul><li>IP地址</li><li>内容</li></ul><ol start="2"><li>Alice查询 “双截棍.MP3”</li><li>Alice从Bob处请求文件</li></ol><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291107182.png" alt="image-20221029110754130" style="zoom:50%;" /><blockquote><p>存在的问题：文件传输是分散的，而定位内容则是高度集中的</p></blockquote><ul><li>单点故障</li><li>性能瓶颈</li><li>侵犯版权</li></ul><p><strong>查询洪泛：Gnutella</strong></p><ul><li>全分布式<ul><li>没有中心服务器</li></ul></li><li>开放文件共享协议</li><li>许多Gnutella客户端实现了Gnutella协议<ul><li>类似HTTP有许多的浏览器</li></ul></li></ul><p>覆盖网络：图</p><ul><li>如果X和Y之间有一个TCP连接，则二者之间存在一条边</li><li>所有活动的对等方和边就是覆盖网络</li><li>边并不是物理链路</li><li>给定一个对等方，通常所连接的节点少于10个</li></ul><p><strong>Gnutella：协议</strong></p><ul><li>在已有的TCP连接上发送查询报文</li><li>对等方转发查询报文</li><li>以反方向返回查询命中报文</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291114139.png" alt="image-20221029111411086" style="zoom:50%;" /><p>可扩展性：限制范围的洪泛查询</p><p><strong>Gnutella：对等方加入</strong></p><p>   1.对等方X必须首先发现某些已经在覆盖网络中的其他对等方：使用可用对等方列表</p><ul><li>自己维持一张对等方列表（经常开机的对等方的IP）联系维持列表的Gnutella站点</li></ul><ol start="2"><li>X接着试图与该列表上的对等方建立TCP连接，直到与某个对等方Y建立连接</li><li>X向Y发送一个Ping报文，Y转发该Ping报文</li><li>所有收到Ping报文的对等方以Pong报文响应IP地址、共享文件的数量及总字节数</li><li>X收到许多Pong报文，然后它能建立其他TCP连接</li></ol><p><strong>利用不匀称性：KaZaA</strong></p><ul><li>每个对等方要么是一个组长，要么隶属于一个组长<ul><li>对等方与其组长之间有TCP连接</li><li>组长对之间有TCP连接</li></ul></li><li>组长跟踪其所有的孩子的内容</li><li>组长与其他组长联系<ul><li>转发查询到其他组长</li><li>获得其他组长的数据拷贝</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291134187.png" alt="image-20221029113407144" style="zoom:50%;" /><p><strong>KaZaA：查询</strong></p><ul><li>每个文件有一个散列标识码和一个描述符</li><li>客户端向其组长发送关键字查询</li><li>组长用匹配进行响应：<ul><li>对每个匹配：元数据、散列标识码和IP地址</li></ul></li><li>如果组长将查询转发给其他组长，其他组长也可以匹配进行响应</li><li>客户端选择要下载的文件<ul><li>向拥有文件的对等方发送一个带散列标识码的HTTP请求</li></ul></li></ul><p><strong>Kazaa小技巧</strong></p><ul><li>请求排队<ul><li>限制并行上载的数量</li><li>确保每个被传输的文件从上载节点接收一定量的带宽</li></ul></li><li>激励优先权<ul><li>鼓励用户上载文件</li><li>加强系统的扩展性</li></ul></li><li>并行下载<ul><li>从多个对等方下载同一个文件的不同部分<ul><li>HTTP的字节范围首部</li><li>更快地检索</li></ul></li></ul></li></ul><blockquote><p>Distributed Hash Table (DHT)</p></blockquote><ul><li>哈希表</li><li>DHT方案</li><li>环形DHT以及覆盖网络</li><li>Peer波</li></ul><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p><strong>存储视频的流化服务</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291556188.png" alt="image-20221029155627137" style="zoom:50%;" /><p><strong>多媒体流化服务：DASH</strong></p><ul><li><p>DASH: Dynamic, Adaptive Streaming over HTTP</p></li><li><p>服务器:</p><ul><li>将视频文件分割成多个块</li><li>每个块独立存储，编码于不同码率（8-10种）</li><li>告示文件（manifest file）: 提供不同块的URL</li></ul></li><li><p>客户端:</p><ul><li>先获取告示文件</li><li>周期性地测量服务器到客户端的带宽</li><li>查询告示文件,在一个时刻请求一个块，HTTP头部指定字节范围<ul><li>如果带宽足够，选择最大码率的视频块</li><li>会话中的不同时刻，可以切换请求不同的编码块 (取决于当时的可用带宽)</li></ul></li></ul></li><li><p>“智能”客户端: 客户端自适应决定</p><ul><li>什么时候去请求块 (不至于缓存挨饿，或者溢出)</li><li>请求什么编码速率的视频块 (当带宽够用时，请求高质量的视频块)</li><li>哪里去请求块 (可以向离自己近的服务器发送URL，或者向高可用带宽的服务器请求)</li></ul></li></ul><p><strong>Content Distribution Networks</strong></p><blockquote><p>服务器如何通过网络向上百万用户同时流化视频内容?</p></blockquote><p>1.单个的、大的超级服务中心“mega-server”</p><ul><li>服务器到客户端路径上跳数较多，瓶颈链路的带宽小导致停顿</li><li>“二八规律”决定了网络同时充斥着同一个视频的多个拷贝，效率低（付费高、带宽浪费、效果差）</li><li>单点故障点，性能瓶颈</li><li>周边网络的拥塞</li></ul><p>评述：相当简单，但是这个方法不可扩展</p><p>2.通过CDN，全网部署缓存节点，存储服务内容，就近为用户提供服务，提高用户体验</p><ul><li><p>enter deep: 将CDN服务器深入到许多接入网</p><ul><li>更接近用户，数量多，离用户近，管理困难</li><li>Akamai, 1700个位置</li></ul></li><li><p>bring home: 部署在少数(10个左右)关键位置，如将服务器簇安装于POP附近（离若干1stISP POP较近）</p><ul><li>采用租用线路将服务器簇连接起来</li><li>Limelight</li></ul></li><li><p>CDN: 在CDN节点中存储内容的多个拷贝<br>• e.g. Netflix stores copies of MadMen</p></li><li><p>用户从CDN中请求内容<br>• 重定向到最近的拷贝，请求内容<br>• 如果网络路径拥塞，可能选择不同的拷贝</p></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291608197.png" alt="image-20221029160806137" style="zoom:67%;" /><p>OTT 挑战: 在拥塞的互联网上复制内容</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291609698.png" alt="image-20221029160951642" style="zoom: 50%;" /><ul><li>从哪个CDN节点中获取内容？–最近的</li><li>用户在网络拥塞时的行为？</li><li>在哪些CDN节点中存储什么内容？</li></ul><p>案例   1.<img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291720097.png" alt="image-20221029172037028" style="zoom:50%;" /></p><p>案例   2.<img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291721404.png" alt="image-20221029172146337" style="zoom: 50%;" /></p><h3 id="套接字编程"><a href="#套接字编程" class="headerlink" title="套接字编程"></a>套接字编程</h3><p><strong>Socket编程</strong></p><p>应用进程使用传输层提供的服务才能够交换报文，实现应用协议，实现应用</p><ul><li>TCP&#x2F;IP：应用进程使用Socket API访问传输服务</li><li>地点：界面上的SAP(Socket） 方式：Socket API</li><li>目标: 学习如何构建能借助sockets进行通信的C&#x2F;S应用程序</li><li>socket: 分布式应用进程之间的门，传输层协议提供的端到端服务接口</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291729027.png" alt="image-20221029172912971" style="zoom:50%;" /><p>2种传输层服务的socket类型:</p><ul><li>TCP: 可靠的、字节流的服务</li><li>UDP: 不可靠（数据UDP数据报）服务</li></ul><h4 id="TCP套接字"><a href="#TCP套接字" class="headerlink" title="TCP套接字"></a>TCP套接字</h4><p>套接字：应用进程与端到端传输协议（TCP或UDP）之间的门户<br>TCP服务：从一个进程向另一个进程可靠地传输字节流</p><p>服务器首先运行，等待连接建立</p><p>1：服务器进程必须先处于运行状态</p><ul><li>创建欢迎socket</li><li>和本地端口捆绑</li><li>在欢迎socket上阻塞式等待接收用户的连接</li></ul><p>客户端主动和服务器建立连接：</p><p>2：创建客户端本地套接字（隐式捆绑到本地port）</p><ul><li>指定服务器进程的IP地址和端口号，与服务器进程连接</li></ul><p>3 ：当与客户端连接请求到来时</p><ul><li>服务器接受来自用户端的请求，解除阻塞式等待，返回一个新的socket（与欢迎socket不一样），与客户端通信<ul><li>允许服务器与多个客户端通信</li><li>使用源IP和源端口来区分不同的客户端</li></ul></li></ul><p>4：连接API调用有效时，客户端P与服务器建立了TCP连接</p><p>从应用程序的角度<br>TCP在客户端和服务器进程之间提供了可靠的、字节流（管道）服务</p><p>C&#x2F;S模式的应用样例:</p><ol><li>客户端从标准输入装置读取一行字符，发送给服务器</li><li>服务器从socket读取字符</li><li>服务器将字符转换成大写，然后返回给客户端</li><li>客户端从socket中读取一行字符，然后打印出来</li></ol><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210291741987.png" alt="image-20221029174116934" style="zoom: 50%;" /><p><strong>TCP Socket交互</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210292017493.png" alt="image-20221029201725425" style="zoom:50%;" /><h4 id="UDP套接字"><a href="#UDP套接字" class="headerlink" title="UDP套接字"></a>UDP套接字</h4><p>UDP: 在客户端和服务器之间没有连接</p><p>• 没有握手<br>• 发送端在每一个报文中明确地指定目标的IP地址和端口号<br>• 服务器必须从收到的分组中提取出发送端的IP地址和端口号</p><p>UDP: 传送的数据可能乱序，也可能丢失</p><p>进程视角看UDP服务<br>UDP 为客户端和服务器提供不可靠的字节组的传送服务</p><p><strong>UDP Socket交互</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210292018020.png" alt="image-20221029201810960" style="zoom:50%;" /><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><h3 id="传输服务和协议"><a href="#传输服务和协议" class="headerlink" title="传输服务和协议"></a>传输服务和协议</h3><ul><li>为运行在不同主机上的应用进程提供逻辑通信</li><li>传输协议运行在端系统<ul><li>发送方：将应用层的报文分成报文段，然后传递给网络层</li><li>接收方：将报文段重组成报文，然后传递给应用层</li></ul></li><li>有多个传输层协议可供应用选择<ul><li>Internet: TCP和UDP</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210310937690.png" alt="image-20221031093703610" style="zoom:50%;" /><p><strong>传输层 vs. 网络层</strong></p><ul><li>网络层服务：主机之间的逻辑通信</li><li>传输层服务：进程间的逻辑通信</li><li>依赖于网络层的服务<ul><li>延时、带宽</li></ul></li><li>并对网络层的服务进行增强<ul><li>数据丢失、顺序混乱、加密</li></ul></li></ul><p>有些服务是可以加强的：不可靠 -&gt; 可靠；安全 但有些服务是不可以被加强的：带宽，延迟</p><p><strong>Internet传输层协议</strong></p><ul><li>可靠的、保序的传输： TCP <ul><li>多路复用、解复用</li><li>拥塞控制</li><li>流量控制</li><li>建立连接</li></ul></li><li>不可靠、不保序的传输：UDP <ul><li>多路复用、解复用</li><li>没有为尽力而为的IP服务添加更多的其它额外服务</li></ul></li><li>都不提供的服务： <ul><li>延时保证</li><li>带宽保证</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210310947300.png" alt="image-20221031094738240" style="zoom:50%;" /><h3 id="多路复用-x2F-解复用"><a href="#多路复用-x2F-解复用" class="headerlink" title="多路复用&#x2F;解复用"></a>多路复用&#x2F;解复用</h3><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210310950989.png" alt="image-20221031095058919" style="zoom:50%;" /><p><strong>多路解复用工作原理</strong></p><ul><li>解复用作用：TCP或者UDP实体采用哪些信息，将报文段的数据部分交给正确的socket，而交给正确的进程</li><li>主机收到IP数据报<ul><li>每个数据报有源IP地址和目标地址</li><li>每个数据报承载一个传输层报文段</li><li>每个报文段有一个源端口号和目标端口号(特定应用有著名的端口号)</li></ul></li><li>主机联合使用IP地址和端口号将报文段发送给合适的套接字</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210310955625.png" alt="image-20221031095552570" style="zoom:50%;" /><p><strong>无连接(UDP)多路解复用</strong></p><ul><li><p>创建套接字：<br>服务器端：<br>serverSocket&#x3D;socket(PF_INET, SOCK_DGRAM,0);<br>bind(serverSocket, &amp;sad, sizeof(sad));<br>serverSocket和Sad指定的端口号捆绑</p><p>客户端：<br>ClientSocket&#x3D;socket(PF_INET, SOCK_DGRAM,0);<br>没有Bind,ClientSocket和OS为之分配的某个端口号捆绑（客户端使用什么端口号无所谓，客户端主动找服务器）</p></li><li><p>在接收端，UDP套接字用二元组标识 (目标IP地址、目标端口号)</p></li><li><p>当主机收到UDP报文段：</p><ul><li>检查报文段的目标端口号</li><li>用该端口号将报文段定位给套接字</li></ul></li><li><p>如果两个不同源IP地址&#x2F;源端口号的数据报，但是有相同的目标IP地址和端口号，则被定位到相同的套接字</p></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311021870.png" alt="image-20221031102117822" style="zoom:50%;" /><p><strong>无连接的多路解复用</strong></p><ul><li>当主机接收到UDP段时：<ul><li>检查UDP段中的目标端口号</li><li>将UDP段交给具备那个端口号的套接字</li></ul></li></ul><p>→ 具备相同目标IP地址和目标端口号，即使是源IP地址 或&#x2F;且源端口号的IP数据报，将会被传到相同的目标UDP套接字上</p><p><strong>无连接多路复用:例子</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311026377.png" alt="image-20221031102603306" style="zoom: 33%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311026146.png" alt="image-20221031102648079" style="zoom: 33%;" /><p><strong>面向连接(TCP)的多路复用</strong></p><ul><li><p>TCP套接字:四元组本地标识：</p><ul><li>源IP地址</li><li>源端口号</li><li>目的IP地址</li><li>目的端口号</li></ul></li><li><p>解复用：接收主机用这四个值来将数据报定位到合适的套接字</p></li><li><p>服务器能够在一个TCP端口上同时支持多个TCP套接字：</p><ul><li>每个套接字由其四元组标识（有不同的源IP和源PORT）</li></ul></li><li><p>Web服务器对每个连接客户端有不同的套接字</p><ul><li>非持久对每个请求有不同的套接字</li></ul></li></ul><p>例子</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311234702.png" alt="image-20221031123410630" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311235443.png" alt="image-20221031123514382" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311236021.png" alt="image-20221031123613959" style="zoom:50%;" /><p><strong>面向连接的多路复用：多线程Web Server</strong></p><ul><li>一个进程下面可能有多个线程：由多个线程分别为客户提供服务</li><li>在这个场景下，还是根据4元组决定将报文段内容同一个进程下的不同线程</li><li>解复用到不同线</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210311237135.png" alt="image-20221031123759084" style="zoom:50%;" /><h3 id="无连接传输：UDP"><a href="#无连接传输：UDP" class="headerlink" title="无连接传输：UDP"></a>无连接传输：UDP</h3><p><strong>UDP: User Datagram Protocol</strong></p><ul><li><p>“no frills,” “bare bones”Internet传输协议</p></li><li><p>“尽力而为”的服务，报文段可能</p><ul><li>丢失</li><li>送到应用进程的报文段乱序</li></ul></li><li><p>无连接：</p><ul><li>UDP发送端和接收端之间没有握手</li><li>每个UDP报文段都被独立地处理</li></ul></li><li><p>UDP 被用于:</p><ul><li>流媒体（丢失不敏感，速率敏感、应用可控制传输速率</li><li>DNS</li><li>SNMP</li></ul></li><li><p>在UDP上可行可靠传输: </p><ul><li>在应用层增加可靠性</li><li>应用特定的差错恢复</li></ul></li></ul><p><strong>UDP：用户数据报协议</strong></p><p>为什么要有UDP?</p><ul><li>不建立连接 （会增加延时）</li><li>简单：在发送端和接收端没有连接状态</li><li>报文段的头部很小(开销小)</li><li>无拥塞控制和流量控制：<br>UDP可以尽可能快的发送报文段<ul><li>应用-&gt;传输的速率&#x3D; 主机-&gt;网络的速率</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211020921235.png" alt="image-20221102092138167" style="zoom:50%;" /><p><strong>UDP校验和</strong><br>目标： 检测在被传输报文段中的差错 (如比特反转)</p><p>发送方：</p><ul><li>将报文段的内容视为16比特的整数</li><li>校验和：报文段的加法和 （1的补运算）</li><li>发送方将校验和放在UDP的校验和字段</li></ul><p>接收方：</p><ul><li>计算接收到的报文段的校验和</li><li>检查计算出的校验和与校验和字段的内容是否相等：<ul><li>不相等––检测到差错</li><li>相等––没有检测到差错，但也许还是有差错<ul><li>残存错误</li></ul></li></ul></li></ul><p><strong>Internet校验和的例子</strong></p><ul><li>注意：当数字相加时，在最高位的进位要回卷，再加到结果上<br>例子：两个16比特的整数相加</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211020924702.png" alt="image-20221102092426653" style="zoom:50%;" /><ul><li>目标端：校验范围+校验和&#x3D;1111111111111111 通过校验<ul><li>否则没有通过校验<br>注：求和时，必须将进位回卷到结果上</li></ul></li></ul><h3 id="可靠数据传输（rdt）的原理"><a href="#可靠数据传输（rdt）的原理" class="headerlink" title="可靠数据传输（rdt）的原理"></a>可靠数据传输（rdt）的原理</h3><ul><li>rdt在应用层、传输层和数据链路层都很重要</li><li>是网络Top 10问题之一</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211020928265.png" alt="image-20221102092819204" style="zoom:50%;" /><ul><li>信道的不可靠特点决定了可靠数据传输协议（ rdt ）的复杂性</li></ul><p><strong>可靠数据传输：问题描述</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211020928381.png" alt="image-20221102092857315" style="zoom:50%;" /><p>我们将：</p><ul><li>渐增式地开发可靠数据传输协议（ rdt ）的发送方和接收方</li><li>只考虑单向数据传输<ul><li>但控制信息是双向流动的！</li></ul></li><li>双向的数据传输问题实际上是2个单向数据传输问题的综合</li><li>使用有限状态机 (FSM) 来描述发送方和接收方</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021633795.png" alt="image-20221102163330725" style="zoom: 50%;" /><p><strong>Rdt1.0： 在可靠信道上的可靠数据传输</strong></p><ul><li>下层的信道是完全可靠的<ul><li>没有比特出错</li><li>没有分组丢失</li></ul></li><li>发送方和接收方的FSM<ul><li>发送方将数据发送到下层信道</li><li>接收方从下层信道接收数据</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021636939.png" alt="image-20221102163626882" style="zoom:50%;" /><p><strong>Rdt2.0：具有比特差错的信道</strong></p><ul><li>下层信道可能会出错：将分组中的比特翻转<ul><li>用校验和来检测比特差错</li></ul></li><li>问题：怎样从差错中恢复：<ul><li>确认(ACK)：接收方显式地告诉发送方分组已被正确接收</li><li>否定确认( NAK): 接收方显式地告诉发送方分组发生了差错<ul><li>发送方收到NAK后，发送方重传分组</li></ul></li></ul></li><li>rdt2.0中的新机制：采用差错控制编码进行差错检测<ul><li>发送方差错控制编码、缓存</li><li>接收方使用编码检错</li><li>接收方的反馈：控制报文（ACK，NAK）：接收方-&gt;发送方</li><li>发送方收到反馈相应的动作</li></ul></li></ul><p><strong>rdt2.0：FSM描述</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021643144.png" alt="image-20221102164349084" style="zoom: 50%;" /><p><strong>rdt2.0：没有差错时的操作</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021644882.png" alt="image-20221102164436821" style="zoom:50%;" /><p><strong>rdt2.0：有差错时</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021646390.png" alt="image-20221102164643326" style="zoom:50%;" /><p><strong>rdt2.0的致命缺陷！-&gt; rdt2.1</strong></p><p>如果ACK&#x2F;NAK出错？</p><ul><li>发送方不知道接收方发生了什么事情！</li><li>发送方如何做？<ul><li>重传？可能重复</li><li>不重传？可能死锁(或出错)</li></ul></li><li>需要引入新的机制<ul><li>序号</li></ul></li></ul><p>处理重复：</p><ul><li>发送方在每个分组中加入序号</li><li>如果ACK&#x2F;NAK出错，发送方重传当前分组</li><li>接收方丢弃（不发给上层）重复分组</li></ul><blockquote><p>发送方发送一个分组，然后等待接收方的应答</p></blockquote><p><strong>rdt2.1：发送方处理出错的ACK&#x2F;NAK</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021650282.png" alt="image-20221102165023222" style="zoom:50%;" /><p><strong>rdt2.1：接收方处理出错的ACK&#x2F;NAK</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021652810.png" alt="image-20221102165230749" style="zoom:50%;" /><p><strong>rdt2.1：讨论</strong></p><p>发送方：</p><ul><li>在分组中加入序列号</li><li>两个序列号（0，1）就足够了<ul><li>一次只发送一个未经确认的分组</li></ul></li><li>必须检测ACK&#x2F;NAK是否出错（需要EDC ）</li><li>状态数变成了两倍<ul><li>必须记住当前分组的序列号为0还是1</li></ul></li></ul><p>接收方：</p><ul><li>必须检测接收到的分组是否是重复的<ul><li>状态会指示希望接收到的分组的序号为0还是1</li></ul></li><li>注意：接收方并不知道发送方是否正确收到了其ACK&#x2F;NAK<ul><li>没有安排确认的确认</li><li>具体解释见下页</li></ul></li></ul><p><strong>rdt2.1的运行</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021656390.png" alt="image-20221102165625325" style="zoom:50%;" /><p>接收方不知道它最后发送的ACK&#x2F;NAK是否被正确地收到</p><ul><li>发送方不对收到的ack&#x2F;nak给确认，没有所谓的确认的确认;</li><li>接收方发送ack，如果后面接收方收到的是：<ul><li>老分组p0？则ack 错误</li><li>下一个分组？P1，ack正确</li></ul></li></ul><p><strong>rdt2.2：无NAK的协议</strong></p><ul><li>功能同rdt2.1，但只使用ACK(ack 要编号）</li><li>接收方对最后正确接收的分组发ACK，以替代NAK<ul><li>接收方必须显式地包含被正确接收分组的序号</li></ul></li><li>当收到重复的ACK（如：再次收到ack0）时，发送方与收到NAK采取相同的动作：重传当前分组</li><li>为后面的一次发送多个数据单位做一个准备<ul><li>一次能够发送多个</li><li>每一个的应答都有：ACK，NACK；麻烦</li><li>使用对前一个数据单位的ACK，代替本数据单位的nak</li><li>确认信息减少一半，协议处理简单</li></ul></li></ul><p><strong>NAK free</strong><br><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021722635.png" alt="image-20221102172247583" style="zoom: 50%;" /></p><p><strong>rat2.2的运行</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021723801.png" alt="image-20221102172335742" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021724803.png" alt="image-20221102172401750" style="zoom:50%;" /><p><strong>rdt2.2：发送方和接收方片断</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021725004.png" alt="image-20221102172508937" style="zoom:50%;" /><p><strong>rdt3.0：具有比特差错和分组丢失的信道</strong></p><p>新的假设：下层信道可能会丢失分组（数据或ACK）</p><ul><li>会死锁</li><li>机制还不够处理这种状况：<ul><li>检验和</li><li>序列</li><li>ACK</li><li>重传</li></ul></li></ul><p>方法：发送方等待ACK一段合理的时间</p><ul><li>发送端超时重传：如果到时没有收到ACK-&gt;重传</li><li>问题：如果分组（或ACK ）只是被延迟了：<ul><li>重传将会导致数据重复，但利用序列号已经可以处理这个问题</li><li>接收方必须指明被正确接收的序列号</li></ul></li><li>需要一个倒计数定时器</li></ul><p><strong>rdt3.0 发送方</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021837972.png" alt="image-20221102183736909" style="zoom:50%;" /><p><strong>rdt3.0的运行</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021838486.png" alt="image-20221102183813423" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021839516.png" alt="image-20221102183932446" style="zoom:50%;" /><ul><li>过早超时（延迟的ACK）也能够正常工作；但是效率较低，一半的分组和确认是重复的；</li><li>设置一个合理的超时时间也是比较重要的</li></ul><p><strong>rdt3.0的性能</strong></p><ul><li>rdt3.0可以工作，但链路容量比较大的情况下，性能很差<ul><li>链路容量比较大，一次发一个PDU 的不能够充分利用链路的传输能力</li></ul></li><li>例：1 Gbps的链路，15 ms端-端传播延时，分组大小为1kB</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021845822.png" alt="image-20221102184532769" style="zoom:50%;" /><ul><li>U sender：利用率 – 忙于发送的时间比例</li><li>每30ms发送1KB的分组 -&gt; 270kbps&#x3D;33.75kB&#x2F;s 的吞吐量（在1 Gbps 链路上）</li><li>瓶颈在于：网络协议限制了物理资源</li></ul><p><strong>rdt3.0：停-等操作</strong></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021853688.png" alt="image-20221102185328621"></p><p><strong>流水线：提高链路利用率</strong></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021854892.png" alt="image-20221102185401828"></p><ul><li>增加n,能提高链路利用率</li><li>但当达到某个n,其u&#x3D;100%时,无法再通过增加n，提高利用率</li><li>瓶颈转移了-&gt;链路带宽</li></ul><p><strong>流水线协议</strong><br>流水线：允许发送方在未得到对方确认的情况下一次发送多个分组</p><ul><li>必须增加序号的范围:用多个bit表示分组的序号</li><li>在发送方&#x2F;接收方要有缓冲区<ul><li>发送方缓冲：未得到确认，可能需要重传;</li><li>接收方缓存：上层用户取用数据的速率≠接收到的数据速率；接收到的数据可能乱序，排序交付（可靠）</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211021855594.png" alt="image-20221102185534537" style="zoom:50%;" /><ul><li>两种通用的流水线协议：回退</li></ul><p><strong>通用：滑动窗口(slide window)协议</strong></p><ul><li>发送缓冲区<ul><li>形式：内存中的一个区域，落入缓冲区的分组可以发送</li><li>功能：用于存放已发送，但是没有得到确认的分组</li><li>必要性：需要重发时可用</li></ul></li><li>发送缓冲区的大小：一次最多可以发送多少个未经确认的分组<ul><li>停止等待协议&#x3D;1</li><li>流水线协议&gt;1，合理的值，不能很大，链路利用率不能够超100%</li></ul></li><li>发送缓冲区中的分组<ul><li>未发送的：落入发送缓冲区的分组，可以连续发送出去;</li><li>已经发送出去的、等待对方确认的分组：发送缓冲区的分组只有得到确认才能删除</li></ul></li></ul><p><strong>发送窗口滑动过程-相对表示方法</strong></p><ul><li>采用相对移动方式表示，分组不动</li><li>可缓冲范围移动，代表一段可以发送的权力</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022153563.png" alt="image-20221102215314499" style="zoom:50%;" /><p><strong>滑动窗口(slide window)协议</strong></p><ul><li>发送窗口：发送缓冲区内容的一个范围<ul><li>那些已发送但是未经确认分组的序号构成的空间</li></ul></li><li>发送窗口的最大值&lt;&#x3D;发送缓冲区的值</li><li>一开始：没有发送任何一个分组<ul><li>后沿&#x3D;前沿</li><li>之间为发送窗口的尺寸&#x3D;0</li></ul></li><li>每发送一个分组，前沿前移一个单位</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022154459.png" alt="image-20221102215432413" style="zoom:50%;" /><p><strong>发送窗口的移动-&gt;前沿移动</strong></p><ul><li>发送窗口前沿移动的极限：不能够超过发送缓冲区</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022155232.png" alt="image-20221102215529182" style="zoom:50%;" /><ul><li>发送窗口前沿移动的极限：不能够超过发送缓冲区</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022156198.png" alt="image-20221102215602152" style="zoom: 50%;" /><p><strong>发送窗口的移动-&gt;后沿移动</strong></p><ul><li>发送窗口后沿移动<ul><li>条件：收到老分组的确认</li><li>结果：发送缓冲区罩住新的分组，来了分组可以发送</li><li>移动的极限：不能够超过前沿</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022157232.png" alt="image-20221102215715182" style="zoom:50%;" /><ul><li>发送窗口后沿移动<ul><li>条件：收到老分组(后沿)的确认</li><li>结果：发送缓冲区罩住新的分组，来了分组可以发送</li><li>移动的极限：不能超过前沿</li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022158214.png" alt="image-20221102215819158" style="zoom:50%;" /><ul><li>滑动窗口技术<ul><li>发送窗口 (sending window)</li></ul></li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022218133.png" alt="image-20221102221827058"></p><p><strong>滑动窗口(slide window)协议-接收窗口</strong></p><ul><li>接收窗口 (receiving window)&#x3D;接收缓冲区</li><li>接收窗口用于控制哪些分组可以接收；<ul><li>只有收到的分组序号落入接收窗口内才允许接收</li><li>若序号在接收窗口之外，则丢弃；</li></ul></li><li>接收窗口尺寸Wr&#x3D;1，则只能顺序接收；</li><li>接收窗口尺寸Wr&gt;1 ，则可以乱序接收<ul><li>但提交给上层的分组，要按序</li></ul></li><li>例子：Wr＝1，在0的位置；只有0号分组可以接收；向前滑动一个，罩在1的位置，如果来了第2号分组，则丢弃</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022221492.png" alt="image-20221102222119437" style="zoom:50%;" /><ul><li>接收窗口的滑动和发送确认<ul><li>滑动：<ul><li>低序号的分组到来，接收窗口移动</li><li>高序号分组乱序到，缓存但不交付（因为要实现rdt，不允许失序），不滑动</li></ul></li><li>发送确认：<ul><li>接收窗口尺寸&#x3D;1：发送连续收到的最大的分组确认（累计确认）</li><li>接收窗口尺寸&gt;1：到分组，发送那个分组的确认（非累计确认）</li></ul></li></ul></li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022225870.png" alt="image-20221102222555812" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022226669.png" alt="image-20221102222657613" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022227196.png" alt="image-20221102222736124" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022228899.png" alt="image-20221102222851814" style="zoom:50%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202211022229763.png" alt="image-20221102222935693" style="zoom:50%;" /> <p><strong>GBN协议和SR协议的异同</strong></p><ul><li>相同之处<ul><li>发送窗口&gt;1</li><li>一次能够可发送多个未经确认的分组</li></ul></li><li>不同之处<ul><li>GBN :接收窗口尺寸&#x3D;1<ul><li>接收端：只能顺序接收</li><li>发送端：从表现来看，一旦一个分组没有发成功，如：0,1,2,3,4,1未成功，234都发送出去了，要返回1再发送；GB1</li></ul></li></ul></li><li>SR: 接收窗口尺寸&gt;1<ul><li>接收端：可以乱序接收</li><li>发送端：发送0,1,2,3,4，一旦1未成功，2,3,4,已发送，无需重发，选择性发送1</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是Internet&quot;&gt;&lt;a href=&quot;#什么是Internet&quot; class=&quot;headerlink&quot; title=&quot;什么是Internet&quot;&gt;&lt;/a&gt;什么是Internet&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;网络协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;协议 (p</summary>
      
    
    
    
    <category term="Base" scheme="http://example.com/categories/Base/"/>
    
    
    <category term="code" scheme="http://example.com/tags/code/"/>
    
    <category term="computer network" scheme="http://example.com/tags/computer-network/"/>
    
  </entry>
  
  <entry>
    <title>基于Github的Typora图床</title>
    <link href="http://example.com/2022/10/07/Githubed/"/>
    <id>http://example.com/2022/10/07/Githubed/</id>
    <published>2022-10-07T15:11:10.000Z</published>
    <updated>2022-10-10T04:15:15.325Z</updated>
    
    <content type="html"><![CDATA[<p><strong>考虑到有部分人没有服务器，所以这里用免费的github作为图床</strong></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>安装好 <em>Typora</em> ： <a href="https://pan.xunlei.com/s/VNB_VLRHiLk6wUoyXr4mCWM6A1">提取码：h9bb</a>    <em>PicGo</em>  ：<a href="https://pan.xunlei.com/s/VNB_WALBOdxS0Hkp49VZlZT_A1">提取码：k77e</a></li><li><em>Gitee</em> 账户：<a href="https://github.com/">https://github.com/</a></li></ul><h2 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h2><h3 id="使用Github作为图床"><a href="#使用Github作为图床" class="headerlink" title="使用Github作为图床"></a>使用Github作为图床</h3><p><strong>1.新建一个仓库</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007215042471.png" alt="image-20221007215042471" style="zoom:50%;" /><p><strong>2.设置好仓库名 仓库为开放状态 并且添加README文件</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007215229045.png" alt="image-20221007215229045" style="zoom:50%;" /><p><strong>3.获取Token（记得备份）</strong></p><p>创建一个token，依次选择<code>Settings —&gt; Developer settings—&gt; Personal access tokens</code>，点击<code>Generate new token</code>创建token。</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007215855658.png" alt="image-20221007215855658" style="zoom:67%;" /><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221007220120150.png" alt="image-20221007220120150" style="zoom:67%;" /><h3 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h3><p><strong>1.自定义安装PicGo，首先选择“PicGo设置”，点击“设置Server”，开启Server，设置监听地址为主机127.0.0.1，端口号为36677</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/PicGo%E9%85%8D%E7%BD%AE-1.png" alt="image-20221007220311253" style="zoom:50%;" /><p><strong>2.建议将“时间戳重命名”开启（也可以将上传前重命名开启，自己命名图片名称。这里重命名优先权大于时间命名），避免上传图片重名</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210072205359.png" alt="image-20221007220545297" style="zoom:50%;" /><p><strong>3. 选择“图床设置”—&gt;“GitHub图床”，进行设置</strong></p><p>仓库名： 使用 用户名 + 仓库名</p><p>分支名： 默认为master或main（看仓库具体分支是什么）</p><p>token： 使用上述创建的token</p><p>存储路径：这里使用上述创建仓库的img目录</p><p>自定义域名：不必填，默认格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/[用户名]/[仓库名]/master</span><br></pre></td></tr></table></figure><p>但是自己平常访问Github经常404的话建议改为</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span>/<span class="regexp">/cdn.jsdelivr.net/gh</span><span class="regexp">/用户名/</span>仓库名/文件路径</span><br></pre></td></tr></table></figure><p>对于使用存储在GitHub上面的<strong>静态文件</strong>，可使用jsDelivr CDN快速访问</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210072207463.png" alt="image-20221007220730401" style="zoom:50%;" /><p><strong>测试文件保存成功</strong></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210072210888.png" alt="image-20221007221015835"></p><h3 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h3><ul><li>点击 <code>文件</code>-&gt;  <code>偏好设置</code> -&gt; <code>图像</code></li></ul><p><img src="https://dreamin-1312842512.cos.ap-guangzhou.myqcloud.com/image-20220910163202939.png" alt="image-20220910163202939"></p><ul><li>如上图配置即可使用</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://blog.csdn.net/haojie_duan/article/details/120400386">https://blog.csdn.net/haojie_duan/article/details/120400386</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1834573">https://cloud.tencent.com/developer/article/1834573</a></p></li><li><p><a href="https://juejin.cn/post/7099811254864674823">https://juejin.cn/post/7099811254864674823</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;考虑到有部分人没有服务器，所以这里用免费的github作为图床&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装好 &lt;em&gt;</summary>
      
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    
    <category term="Typora" scheme="http://example.com/tags/Typora/"/>
    
    <category term="code" scheme="http://example.com/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>基于青龙面板薅JD羊毛</title>
    <link href="http://example.com/2022/10/05/qinglong/"/>
    <id>http://example.com/2022/10/05/qinglong/</id>
    <published>2022-10-05T03:41:10.000Z</published>
    <updated>2022-10-06T06:08:01.437Z</updated>
    
    <content type="html"><![CDATA[<h2 id="术前准备"><a href="#术前准备" class="headerlink" title="术前准备"></a>术前准备</h2><ul><li><p><strong>云服务器一台</strong>（记得开放8888以及5700端口）</p></li><li><p><strong>点击<a href="https://www.bt.cn/new/download.html">安装宝塔Linux</a></strong></p></li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="1-进入宝塔面板"><a href="#1-进入宝塔面板" class="headerlink" title="1.进入宝塔面板"></a>1.进入宝塔面板</h3><p>点击<code>软件商店</code>-&gt;<code>搜索docker</code>-&gt;<code>点击安装</code></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006140520473.png" alt="image-20221006140520473"></p><h3 id="2-拉取青龙镜像"><a href="#2-拉取青龙镜像" class="headerlink" title="2.拉取青龙镜像"></a>2.拉取青龙镜像</h3><p>选完安装面板和设置IP后一路回车到底</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/shidahuilang/QL-/main/lang1.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006140528809.png" alt="image-20221006140528809"></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006140534814.png" alt="image-20221006140534814"></p><h3 id="3-添加拉库命令"><a href="#3-添加拉库命令" class="headerlink" title="3.添加拉库命令"></a>3.添加拉库命令</h3><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006140538948.png" alt="image-20221006140538948"></p><p>添加一个定时任务,定时拉库命令,就可以定时更新仓库。可设置为 <code>0 */12 * * *</code> 每天0点和12点运行一次更新。</p><p><strong>KingRan库【集合库，推荐</strong>】</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/KingRan/</span>KR.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|magic|JDJR&quot;</span></span><br></pre></td></tr></table></figure><p><strong>Faker3【集合库】</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/shufflewzc/</span>faker3.git <span class="string">&quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot;</span> <span class="string">&quot;main&quot;</span></span><br></pre></td></tr></table></figure><p><strong>yyds【集合库】</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">YYDS</span><br><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/okyyds/yy</span>ds.git <span class="string">&quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot;</span> <span class="string">&quot;master&quot;</span></span><br><span class="line"></span><br><span class="line">YYDS_Pure</span><br><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/okyyds/yy</span>dspure.git <span class="string">&quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot;</span> <span class="string">&quot;master&quot;</span></span><br><span class="line">【注意】拉库前请打开青龙面板-配置文件 第<span class="number">18</span>行 GithubProxyUrl=<span class="string">&quot;&quot;</span> 双引号中的内容删除。</span><br></pre></td></tr></table></figure><p><strong>smiek2121【开卡，建议】</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/smiek2121/</span>scripts.git <span class="string">&quot;gua_&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js|cleancart_activity.js|jdCookie.js|sendNotify.js&quot;</span></span><br></pre></td></tr></table></figure><p><strong>ccwav大佬的通知增强版和CK检测【建议】</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>不包含sendNotify:</span><br><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/ccwav/</span>QLScript2.git <span class="string">&quot;jd_&quot;</span> <span class="string">&quot;sendNotify|NoUsed&quot;</span> <span class="string">&quot;ql&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>包含sendNotify:</span><br><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/ccwav/</span>QLScript2.git <span class="string">&quot;jd_&quot;</span> <span class="string">&quot;NoUsed&quot;</span> <span class="string">&quot;ql|sendNotify&quot;</span></span><br></pre></td></tr></table></figure><p><strong>【zero205】【集合库，拉KR即可】</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https:<span class="regexp">//gi</span>thub.com<span class="regexp">/zero205/</span>JD_tencent_scf.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;backUp|icon&quot;</span> <span class="string">&quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot;</span> <span class="string">&quot;main&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-添加京东COOKIE"><a href="#4-添加京东COOKIE" class="headerlink" title="4.添加京东COOKIE"></a>4.添加京东COOKIE</h3><p>提取COOKIE软件地址：<a href="https://pan.xunlei.com/s/VNBvHoZT5uASNqnZyeN7x_fFA1">提取码7yxt</a></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221006140547643.png" alt="image-20221006140547643"></p><h2 id="添加依赖-重要"><a href="#添加依赖-重要" class="headerlink" title="添加依赖(重要)"></a>添加依赖(重要)</h2><p><strong>进入<code>依赖管理</code>-&gt;<code>新建依赖</code></strong></p><p>1.<em>NodeJs</em></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">NodeJs里面所需依赖 添加依赖---&gt;选择自动拆分，把以下内容全部复制到名称里，之后点击确定</span><br><span class="line">ts-md5</span><br><span class="line">@types/<span class="keyword">node</span></span><br><span class="line"><span class="title">prettytable</span></span><br><span class="line"><span class="keyword">node</span><span class="title">-telegram-bot-api</span></span><br><span class="line">tslib</span><br><span class="line">ql</span><br><span class="line">common</span><br><span class="line">fs</span><br><span class="line">typescript</span><br><span class="line">axios</span><br><span class="line">png-js</span><br><span class="line">axios</span><br><span class="line">ws@<span class="number">7.4</span>.<span class="number">3</span></span><br><span class="line">crypto-js</span><br><span class="line">jieba</span><br><span class="line">global-agent</span><br><span class="line">jsdom -g</span><br><span class="line">moment</span><br><span class="line">form-data</span><br><span class="line"><span class="keyword">date</span>-fns</span><br><span class="line"><span class="keyword">node</span><span class="title">-jsencrypt</span></span><br><span class="line">require</span><br><span class="line">js-base64</span><br><span class="line">tough-cookie</span><br><span class="line">json5</span><br><span class="line">jsdom</span><br><span class="line">dotenv</span><br><span class="line">qs</span><br></pre></td></tr></table></figure><p>2.<em>Python3</em></p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">P<span class="function"><span class="title">ython3</span>依赖 添加依赖---&gt;</span>选择自动拆分，把以下内容全部复制到名称里，之后点击确定</span><br><span class="line">ping3</span><br><span class="line">canvas</span><br><span class="line">requests</span><br><span class="line">jieba</span><br><span class="line">PyExecJS</span><br><span class="line">httpx</span><br></pre></td></tr></table></figure><p>3.<em>Linux</em></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Linux依赖 添加依赖---&gt;选择自动拆分，把以下内容全部复制到名称里，之后点击确定</span><br><span class="line">lxml</span><br><span class="line"><span class="keyword">bizMsg</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">bizCode</span></span><br><span class="line"><span class="keyword"></span>gcc</span><br><span class="line">python-devel</span><br><span class="line">aiohttp</span><br><span class="line">magic</span><br></pre></td></tr></table></figure><p>*ps:*一些定时规则</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * ?    <span class="comment">#每隔 5 秒执行一次</span></span><br><span class="line">0 */1 * * * ?    <span class="comment">#每隔 1 分钟执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>2<span class="number"> 1 </span>* ? *    <span class="comment">#每月 1 日的凌晨 2 点执行一次</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? *    <span class="comment">#MON-FRI 周一到周五每天上午 10：15 执行</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? 6L    <span class="comment">#2002-2006 2002 年至 2006 年的每个月的最后一个星期五上午 10:15 执行</span></span><br><span class="line">0<span class="number"> 0 </span>23 * * ?    <span class="comment">#每天 23 点执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>1 * * ?    <span class="comment">#每天凌晨 1 点执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>1<span class="number"> 1 </span>* ?     <span class="comment">#每月 1 日凌晨 1 点执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>23 L * ?    <span class="comment">#每月最后一天 23 点执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>1 ? * L    <span class="comment">#每周星期天凌晨 1 点执行一次</span></span><br><span class="line">0 26,29,33 * * * ?    <span class="comment">#在 26 分、29 分、33 分执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>0,13,18,21 * * ?    <span class="comment">#每天的 0 点、13 点、18 点、21 点都执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>10,14,16 * * ?    <span class="comment">#每天上午 10 点，下午 2 点，4 点执行一次</span></span><br><span class="line">0 0/30 9-17 * * ?    <span class="comment">#朝九晚五工作时间内每半小时执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>12 ? * WED    <span class="comment">#每个星期三中午 12 点执行一次</span></span><br><span class="line">0<span class="number"> 0 </span>12 * * ?    <span class="comment">#每天中午 12 点触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? * *    <span class="comment">#每天上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 * * ?    <span class="comment">#每天上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 * * ? *    <span class="comment">#每天上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 * * ?    <span class="comment">#2005 2005 年的每天上午 10:15 触发</span></span><br><span class="line">0 *<span class="number"> 14 </span>* * ?    <span class="comment">#每天下午 2 点到 2:59 期间的每 1 分钟触发</span></span><br><span class="line">0 0/5<span class="number"> 14 </span>* * ?    <span class="comment">#每天下午 2 点到 2:55 期间的每 5 分钟触发</span></span><br><span class="line">0 0/5 14,18 * * ?    <span class="comment">#每天下午 2 点到 2:55 期间和下午 6 点到 6:55 期间的每 5 分钟触发</span></span><br><span class="line">0 0-5<span class="number"> 14 </span>* * ?    <span class="comment">#每天下午 2 点到 2:05 期间的每 1 分钟触发</span></span><br><span class="line">0 10,44<span class="number"> 14 </span>?<span class="number"> 3 </span>WED    <span class="comment">#每年三月的星期三的下午 2:10 和 2:44 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? * MON-FRI    <span class="comment">#周一至周五的上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10<span class="number"> 15 </span>* ?    <span class="comment">#每月 15 日上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 L * ?    <span class="comment">#每月最后一日的上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? * 6L    <span class="comment">#每月的最后一个星期五上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? * 6L    <span class="comment">#2002-2005 2002 年至 2005 年的每月的最后一个星期五上午 10:15 触发</span></span><br><span class="line">0<span class="number"> 15 </span>10 ? * 6<span class="comment">#3    #每月的第三个星期五上午 10:15 触发</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;术前准备&quot;&gt;&lt;a href=&quot;#术前准备&quot; class=&quot;headerlink&quot; title=&quot;术前准备&quot;&gt;&lt;/a&gt;术前准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;云服务器一台&lt;/strong&gt;（记得开放8888以及5700端口）&lt;/p&gt;
&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="web" scheme="http://example.com/categories/web/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://example.com/2022/10/02/Linux/"/>
    <id>http://example.com/2022/10/02/Linux/</id>
    <published>2022-10-02T03:41:10.000Z</published>
    <updated>2022-10-31T01:29:27.237Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h2><p><strong>1.软件程序的运行</strong></p><p>硬件如同人的身体，软件如同人的灵魂。没有了灵魂的躯体也不过就是行尸走肉</p><p>**1.1 **机器程序与编译程序</p><p>电脑只认识0与1而已，而且电脑最重要的运算与逻辑判断是在CPU内部， 而 CPU其实是具有微指令集的。因此，我们需要CPU帮忙工作时，就得要参考微指令集的内容， 然后撰写让CPU读的懂的指令码给CPU执行，这样就能够让CPU运行了。</p><p>流程：</p><ul><li>需要了解机器语言：机器只认识0与1，因此你必须要学习直接写给机器看的语言。</li><li>需要了解所有硬件的相关功能函数：因为你的程序必须要写给机器看， 当然你就得要参考机器本身的功能，然后针对该功能去撰写程序码。</li><li>程序不具有可携性：每个CPU都有独特的微指令集，同样的，每个硬件都有其功能函数。</li><li>程序具有专一性：因为这样的程序必须要针对硬件功能函数来撰写， 如果已经开发了一支浏览器程序，想要再开发文件管理程序时，还是得从头再参考硬件的功能函数来继续撰写。</li></ul><p>所以，需要开发让人类能看得懂得程序语言。然后创造一种“编译器”让人类的写的程序语言转换为机器能看懂的机器码。常见的编译器有C,C++,Java,Fortran等等。</p><p><img src="https://dreamin-1312842512.cos.ap-guangzhou.myqcloud.com/image-20220922203728264.png" alt="image-20220922203728264"></p><h2 id="关于学习Linux"><a href="#关于学习Linux" class="headerlink" title="关于学习Linux"></a>关于学习Linux</h2><p>两个重要的因素是造成我们学习的原动力： </p><ul><li><p>创建兴趣： Linux上面可以玩的东西真的太多了，你可以选择一个有趣的课题来深入的玩 一玩！不论是Shell还是图形接口等等， 只要能够玩出兴趣，那么再怎么苦你都会不觉得喔！</p></li><li><p>成就感： 成就感是怎么来的？说实在话，就是“被认同”来的！怎么被认同呢？写心得分享啊！当你写了心得分享，并且公告在 BBS 上面，自然有朋友会到你的网页去瞧一瞧， 当大家觉得你的网页内容很棒的时候， 哈哈！你肯定会加油继续的分享下去而无法自拔。</p></li></ul><h2 id="主机规划与磁盘分区"><a href="#主机规划与磁盘分区" class="headerlink" title="主机规划与磁盘分区"></a>主机规划与磁盘分区</h2><p><strong>Linux各硬件设备在系统中为文件名</strong></p><p><img src="https://dreamin-1312842512.cos.ap-guangzhou.myqcloud.com/image-20221001164035525.png" alt="image-20221001164035525"></p><p><strong>磁盘分区</strong></p><p><strong>MBR 主要分区、延伸分区与逻辑分区的特性：</strong></p><ul><li>主要分区与延伸分区最多可以有四笔（硬盘的限制） ；</li><li>延伸分区最多只能有一个（操作系统的限制）；</li><li>逻辑分区是由延伸分区持续切割出来的分区；</li><li>能够被格式化后，作为数据存取的分区为主要分区与逻辑分区。延伸分区无法格式化； </li><li>逻辑分区的数量依操作系统而不同，在Linux系统中SATA硬盘已经可以突破63个以上的分区限制；</li></ul><p><strong>MBR分区限制：</strong></p><ul><li>操作系统无法抓取到 2.2T 以上的磁盘容量</li><li>MBR 仅有一个区块，若被破坏后，经常无法或很难救援</li><li>MBR 内的存放开机管理程序的区块仅 446Bytes，无法容纳较多的程序码</li></ul><p><strong>GUID partition table, GPT 磁盘分区表：</strong></p><ul><li>与 MBR 仅使用第一个 512Bytes 区块来纪录不同， GPT 使用了 34 个 LBA 区块来纪录分区信息</li><li>GPT 除了前面 34 个 LBA 之外，整个磁盘的最后 33 个 LBA 也拿来作为另一个备份</li></ul><p><strong>计算机开机流程：</strong></p><ol><li>BIOS：开机主动执行的固件，会认识第一个可开机的设备；</li><li>MBR：第一个可开机设备的第一个扇区内的主要开机记录区块，内含开机管理程序；</li><li>开机管理程序（boot loader）：一支可读取核心文件来执行的软件；</li><li>核心文件：开始操作系统的功能</li></ol><p><strong>BIOS与UEFI BIOS区别</strong></p><p><img src="https://dreamin-1312842512.cos.ap-guangzhou.myqcloud.com/image-20221001200526805.png" alt="image-20221001200526805"></p><p><strong>主机硬盘的规划</strong></p><p>频繁读写的目录</p><ul><li>boot</li><li>&#x2F; </li><li>&#x2F;home </li><li>&#x2F;var </li><li>Swap</li></ul><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><ul><li><p>如果磁盘容量大于 2TB 以上时，系统会自动使用 GPT 分区方式来处理磁盘分区。</p></li><li><p>GPT 分区已经没有延伸与逻辑分区的概念，可以想像成所有的分区都是主分区，某些操作系统要使用 GPT 分区时，必须要搭配 UEFI 的新型 BIOS 格式才可安装使用。</p></li><li><p>Linux操作系统的文件使用目录树系统，与磁盘的对应需要有“挂载”的动作才行；</p></li><li><p>开机的流程由：BIOS–&gt;MBR–&gt;–&gt;boot loader–&gt;核心文件</p></li></ul><h2 id="Vim程序编辑器"><a href="#Vim程序编辑器" class="headerlink" title="Vim程序编辑器"></a>Vim程序编辑器</h2><p><strong>三种模式</strong></p><ul><li>一般指令模式 （command mode）</li><li>编辑模式 （insert mode）</li><li>命令行命令模式 （command-line mode）</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210211616324.png" alt="image-20221021161616258" style="zoom:50%;" /><p><strong>常见命令</strong></p><p><em>1.输入模式 (i):</em><br>按 i 进入insert输入模式<br>HJKL代替上下左右<br>H向左 L向右 J向下 K向上<br>Ctrl + B 向上翻页<br>Ctrl + F 想下翻页<br>Ctrl + E&#x2F;Y 滚动<br>Shift + G 末尾<br>双击gg 首字符</p><p><em>2.命令模式(esc):</em><br>i 光标位置前面输入<br>a 光标位置后面输入<br>o enter到下一行输入<br>x 删除光标所在字符<br>dd 删除整个一行<br>u 撤销<br>dw 删除整个单词<br>b 跳跃单词首字母<br>e 跳跃单词尾字母<br>w 跳跃到下一个单词首字母</p><p>shift 省略多个单词直接跳<br>Shift + 6 ^ 跳跃到本行的首字母<br>Shift + 4 $ 跳跃到本行的dd尾字母<br>按 0 跳跃到本行首个字符（ 包括空格）<br>{}移动整段大括号<br>yw 表示复制一个单词<br>y$ 表示从当前开始，往后复制到行末尾<br>p 粘贴剪贴板的内容<br><em>3.可视化模式</em><br>v + hjkl 进行字符选择<br>V + hjkl 进行行选择<br>v + G 全选<br>快捷选择<br>vaw 快速选择单词<br>vab 包含括号<br>vaB 包含大括号<br>shift + &lt;&gt; 前后缩进<br>v shift + · ~ 字母大小写切换<br>v + u&#x2F;U 全部转换为小写&#x2F;大写<br>行号+g<br>g 跳跃到指定的行号<br>快速查找<br>&#x2F;查找字符 按n 进入下一个<br>快速替换<br>按行:s&#x2F;查找单词&#x2F;替换单词&#x2F;g<br>全局:%s&#x2F;查找单词&#x2F;替换单词&#x2F;g<br>指定:首，尾s&#x2F;查找&#x2F;替换&#x2F;g<br>+c 询问</p><h2 id="Bashshell"><a href="#Bashshell" class="headerlink" title="Bashshell"></a>Bashshell</h2><p><strong>硬件、核心与 Shell</strong></p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221653386.png" alt="image-20221022165342252" style="zoom:50%;" /><p>例子：用电脑播放音乐</p><ol><li>硬件：当然就是需要你的硬件有“声卡芯片”这个配备，否则怎么会有声音；</li><li>核心管理：操作系统的核心可以支持这个芯片组，当然还需要提供芯片的驱动程序；</li><li>应用程序：需要使用者输入发生声音的指令。</li></ol><p><strong>为何要学命令行的 shell？</strong></p><ul><li><p>命令行的 shell：大家都一样</p></li><li><p>远端管理：命令行就是比较快</p></li><li><p>Linux 的任督二脉： shell 是也</p></li></ul><p><strong>系统的合法 shell 与 &#x2F;etc&#x2F;shells 功能</strong></p><p>历史：由于早年的 Unix 年代，发展者众，所以由于 shell 依据发展者的不同就有许多的版本，例如常听到的 Bourne SHell （sh） 、在 Sun 里头默认的 C SHell、 商业上常用的 K SHell、, 还有 TCSH 等等，每一种 Shell 都各有其特点，Linux 使用的这一种版本就称为“ Bourne Again SHell （简称 bash） ”，这个 Shell 是 Bourne Shell 的增强版本，也是基准于 GNU 的架构下发展出来的。</p><p><em>Linux可用的shells</em></p><ul><li>&#x2F;bin&#x2F;sh （已经被 &#x2F;bin&#x2F;bash 所取代）</li><li>&#x2F;bin&#x2F;bash （就是 Linux 默认的 shell）</li><li>&#x2F;bin&#x2F;tcsh （整合 C Shell ，提供更多的功能）</li><li>&#x2F;bin&#x2F;csh （已经被 &#x2F;bin&#x2F;tcsh 所取代）</li></ul><blockquote><p>系统某些服务在运行过程中，会去检查使用者能够使用的 shells ，而这些 shell 的查询就是借由 &#x2F;etc&#x2F;shells 这个文件</p></blockquote><p><strong>Bash Shell 的功能</strong></p><ul><li>命令编修能力 （history）：</li></ul><p>只要在命令行按“上下键”就可以找到前&#x2F;后一个输入的指令，而在很多distribution 里头，默认的指令记忆功能可以到达 1000 个！也就是说，曾经下达过的指令几乎都被记录下来了。<br>这么多的指令记录在哪里呢？在你的主文件夹内的 .bash_history 不过，需要留意的是，<br>~&#x2F;.bash_history 记录的是前一次登陆以前所执行过的指令， 而至于这一次登陆所执行的指令都被暂存在内存中，当你成功的登出系统后，该指令记忆才会记录到 .bash_history 当中</p><ul><li><p>命令与文件补全功能： （[tab] 按键的好处）</p></li><li><p>命令别名设置功能： （alias）</p></li></ul><p>可以将<code>ls -al</code> 的命令通过<code>alias lm=&#39;ls -al&#39;</code>就可以将<code>lm</code>直接用来调命令了</p><ul><li><p>工作控制、前景背景控制： （job control, foreground, background）</p></li><li><p>程序化脚本： （shell scripts）</p></li><li><p>万用字符： （Wildcard）</p></li></ul><p><strong>查询指令是否为 Bash shell 的内置命令： type</strong></p><p>知道这个指令是来自于外部指令（指的是其他非 bash 所提供的指令） 或是内置在 bash 当中只要利用type 这个指令来观察即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[dmtsai@study ~]$ <span class="built_in">type</span> [-tpa] name</span><br><span class="line">选项与参数：</span><br><span class="line">：不加任何选项与参数时，<span class="built_in">type</span> 会显示出 name 是外部指令还是 bash 内置指令</span><br><span class="line">-t ：当加入 -t 参数时，<span class="built_in">type</span> 会将 name 以下面这些字眼显示出他的意义：</span><br><span class="line">file ：表示为外部指令；</span><br><span class="line"><span class="built_in">alias</span> ：表示该指令为命令别名所设置的名称；</span><br><span class="line"><span class="built_in">builtin</span> ：表示该指令为 bash 内置的指令功能；</span><br><span class="line">-p ：如果后面接的 name 为外部指令时，才会显示完整文件名；</span><br><span class="line">-a ：会由 PATH 变量定义的路径中，将所有含 name 的指令都列出来，包含 <span class="built_in">alias</span></span><br><span class="line">范例一：查询一下 <span class="built_in">ls</span> 这个指令是否为 bash 内置？</span><br><span class="line">[dmtsai@study ~]$ <span class="built_in">type</span> <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span> is aliased to `<span class="built_in">ls</span> --color=auto<span class="string">&#x27; &amp;lt;==未加任何参数，列出 ls 的最主要使用情况</span></span><br><span class="line"><span class="string">[dmtsai@study ~]$ type -t ls</span></span><br><span class="line"><span class="string">alias &amp;lt;==仅列出 ls 执行时的依据</span></span><br><span class="line"><span class="string">[dmtsai@study ~]$ type -a ls</span></span><br><span class="line"><span class="string">ls is aliased to `ls --color=auto&#x27;</span> &amp;lt;==最先使用 aliase</span><br><span class="line"><span class="built_in">ls</span> is /usr/bin/ls &amp;lt;==还有找到外部指令在 /bin/ls</span><br><span class="line">范例二：那么 <span class="built_in">cd</span> 呢？</span><br><span class="line">[dmtsai@study ~]$ <span class="built_in">type</span> <span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span> is a shell <span class="built_in">builtin</span> &amp;lt;==看到了吗？ <span class="built_in">cd</span> 是 shell 内置指令</span><br></pre></td></tr></table></figure><p><strong>指令的下达与快速编辑按钮</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">范例：如果指令串太长的话，如何使用两行来输出？</span><br><span class="line">[dmtsai@study ~]$ <span class="built_in">cp</span> /var/spool/mail/root /etc/crontab \</span><br><span class="line">&amp;gt; /etc/fstab /root</span><br></pre></td></tr></table></figure><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221744722.png" alt="image-20221022174441674" style="zoom: 80%;" /><p><strong>Shell 的变量功能</strong></p><ul><li>变量的可变性与方便性</li></ul><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221748828.png" alt="image-20221022174833790" style="zoom: 67%;" /><p>由于系统已经帮我们规划好 MAIL 这个变量，所以使用者只要知道 mail 这个指 令如何使用即可， mail 会主动的取用 MAIL 这个变量，就能够如上图所示的取得自己的邮件信箱了</p><ul><li>影响 bash 环境操作的变量</li></ul><p>例如下达 ls 这个指令时，系统就是通过 PATH 这个变量里面的内容所记录的路径顺序来搜寻指令。如果在搜寻完 PATH 变量内的路径还找不到 ls 这个指令时， 就会在屏幕上显示“ command not found ”的错误讯息了。</p><ul><li>脚本程序设计 （shell script） 的好帮手</li></ul><p>例如你要写一个大 型的 script 时，有些数据因为可能由于使用者习惯的不同而有差异，比如说路径好了，由于该路径在 script 被使用在相当多的地方，如果下次换了一部主机，都要修改 script 里面的所有路径， 这个时候如果使用变量，而将该变量的定义写在最前面，后面相关的路径名称都以变量来取代， 那么你只要修改一行就等于修改整篇 script 了。</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210221753121.png" alt="image-20221022175328075" style="zoom:67%;" /><p><strong>变量的取用与设置：echo, 变量设置规则, unset</strong></p><h2 id="Linux正则表达式"><a href="#Linux正则表达式" class="headerlink" title="Linux正则表达式"></a>Linux正则表达式</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux&quot;&gt;&lt;a href=&quot;#Linux&quot; class=&quot;headerlink&quot; title=&quot;Linux&quot;&gt;&lt;/a&gt;Linux&lt;/h1&gt;&lt;h2 id=&quot;计算机基础&quot;&gt;&lt;a href=&quot;#计算机基础&quot; class=&quot;headerlink&quot; title=&quot;计算机</summary>
      
    
    
    
    <category term="web前端" scheme="http://example.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>程序员的软件抽屉(Windows)</title>
    <link href="http://example.com/2022/09/26/softbox/"/>
    <id>http://example.com/2022/09/26/softbox/</id>
    <published>2022-09-26T03:11:10.000Z</published>
    <updated>2022-10-06T03:51:57.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工具篇-强烈推荐安装"><a href="#工具篇-强烈推荐安装" class="headerlink" title="工具篇(强烈推荐安装)"></a>工具篇(强烈推荐安装)</h2><h3 id="以打包"><a href="#以打包" class="headerlink" title="以打包"></a>以打包</h3><p>迅雷网盘<a href="https://pan.xunlei.com/s/VND5y3hj863AQVp7dM7UTo0DA1">提取码：atsp</a></p><blockquote><p> <a href="https://geekuninstaller.com/">Geek Uninstaller</a></p></blockquote><ul><li>小巧（2 MB ）、绿色（无需安装）、易用（单文件）的卸载工具。</li><li>卸载完成，Geek Uninstaller 会自动扫描残留的文件（夹）和注册表项目。</li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210331754.png" alt="image-20221005210331754"></p><blockquote><p>Gism++</p></blockquote><p>Windows 上最强大的系统工具，简洁好用。用来清理电脑垃圾再好不过</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210337740.png" alt="image-20221005210337740"></p><blockquote><p>图吧工具箱</p></blockquote><p>整合了大量硬件检测的工具，这不比那个经常抽烟的鲁大师好多了。</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210346337.png" alt="image-20221005210346337"></p><blockquote><p>Snipaste</p></blockquote><p>史上最好用的截图软件，功能丰富，用了你就知道了。</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210352208.png" alt="image-20221005210352208"></p><blockquote><p>FSCapture</p></blockquote><p>属于录屏软件的一股清流吧，大小仅为5.4M，功能却十分齐全！</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210402012.png" alt="image-20221005210402012"></p><blockquote><p>TrafficMonitor</p></blockquote><p>用来监控现在电脑的各种硬件状态，直接在任务栏显示，简洁清楚。</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210410408.png" alt="image-20221005210410408"></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210415503.png" alt="image-20221005210415503"></p><h2 id="程序员的软件抽屉（Windows）"><a href="#程序员的软件抽屉（Windows）" class="headerlink" title="程序员的软件抽屉（Windows）"></a>程序员的软件抽屉（Windows）</h2><h3 id="杀毒软件（不需要"><a href="#杀毒软件（不需要" class="headerlink" title="杀毒软件（不需要"></a>杀毒软件（不需要</h3><p>2202年，都已经Windows11了，其实不太需要杀毒软件了，自带的 Windows defender已经足矣。</p><p>如果硬要装一个，那么最推荐的应该是火绒了</p><blockquote><p><a href="https://www.huorong.cn/">火绒安全</a></p></blockquote><p>相比国内一众病毒（🐧安全管家，361安全卫视，金山中毒吧）</p><ul><li>火绒不会有广告弹窗等任何打扰用户的行为，也不会在安装包中随意捆绑其他软件。</li><li>强悍、干净、轻巧的火绒可以让你安全、安静、自由地使用电脑。</li><li>在专注的同时保留了基本的防护，家长控制，U盘保护等等，还有很多扩展工具。</li></ul><p>引用 <a href="https://www.jb51.net/softjc/802578.html">脚本之家</a> <a href="https://blog.k8s.li/fuck-chinese-software.html#Windows">木子的博客</a></p><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><p>作为一个程序员，装电脑系统对于我们来说应该是家常便饭，这里给大家推荐国产神器。</p><blockquote><p> <a href="http://www.wepe.com.cn/download.html">微PE</a></p></blockquote><ul><li><p>没有杂七杂八的功能，安装系统什么的足够使用。不会给你夹带私货什么的，比较放心食用。</p></li><li><p>不带捆绑，配合<a href="https://msdn.itellyou.cn/">MSDN我告诉你</a>直接还你一个干净的桌面</p></li><li><p>体积较小，方便安装</p></li></ul><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><p>一款浏览器好不好，首先看它的首页。国产没一个干净又卫生的，都是一堆广告捆绑，所以不推荐使用任何一款国产浏览器，包括手机上的浏览器。</p><blockquote><p><a href="https://www.google.com/chrome/">Chrome</a>(强烈推荐)</p></blockquote><ul><li>大部分浏览器（其实除了下面这款）都是基于浏览器基于Chromium，网页兼容性显而易见</li><li>没有任何广告，干净又卫生，页面简洁，业界大牛</li><li>当然缺点就是，账号同步404，你懂</li></ul><blockquote><p><a href="https://www.firefox.com.cn/">Firefox</a>(国际版)</p></blockquote><ul><li>国内版有私货，所以下载国际版，删除一些页面访问减速</li><li>为非营利性组织所维护的浏览器，不会太担心访问记录被相关机构审查</li><li>同步功能比Chrome好用</li></ul><blockquote><p>Edge(无奈之举)</p></blockquote><ul><li>比国产好用就是了</li></ul><h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><p>对于 Windows 10&#x2F;11 用户来讲，使用 Windows 默认的拼音&#x2F;五笔输入法再好不过了。少安装一些软件也就少了一些维护的成本。</p><h3 id="解压缩文件"><a href="#解压缩文件" class="headerlink" title="解压缩文件"></a>解压缩文件</h3><p>依旧不推荐国产压缩软件，广告满天飞，捆绑一堆严重拖慢电脑速度的fw</p><blockquote><p><a href="https://www.7-zip.org/">7-Zip</a></p></blockquote><ul><li>免费且开源，UI比较简陋，个人在用的一款，体积很小巧，功能很强大。</li></ul><blockquote><p> <a href="https://cn.bandisoft.com/bandizip/">Bandizip</a></p></blockquote><ul><li>轻巧、快速、免费、好看的解压缩软件。</li><li>最喜欢它的「自动解压」功能：不用再担心解压出一堆散乱文件或双层文件夹。</li></ul><h3 id="PDF阅读器"><a href="#PDF阅读器" class="headerlink" title="PDF阅读器"></a>PDF阅读器</h3><p>微软自带的edge其实已经很不错，还自带修改功能，但是这里推荐一款。</p><blockquote><p> <a href="https://www.sumatrapdfreader.org/free-pdf-reader.html">Sumatra PDF</a></p></blockquote><ul><li><p>软件小巧轻量，精简流畅，十分推荐这款 PDF 阅读软件</p></li><li><p>支持的格式也比较多 <strong>PDF, ePub, MOBI, CHM, XPS, DjVu, CBZ, CBR</strong></p></li></ul><h3 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h3><p>其实国产迅雷很不错，但无奈不开会员还给你限速，开了会员还有广告</p><blockquote><p> <a href="https://www.baiduyun.wiki/zh-cn/idm.html#%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%89%B9%E5%88%AB%E8%AE%BE%E7%BD%AE">IDM</a></p></blockquote><p>什么是多线程下载？打个比方，现在要接满 1 桶水，浏览器下载时只能开 1 个水龙头，接满 1 桶水时间为 1 小时。多线程下载器可以 32 个水龙头同时接水，接满 1 桶水时间缩短到 2 分钟，足足快了 32 倍。</p><blockquote><p> <a href="https://github.com/qbittorrent/qBittorrent">qBittorrent</a></p></blockquote><p>没有杂七杂八的幺蛾子，轻量简洁。也可以使用它的 <a href="https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases">增强版</a> 。</p><blockquote><blockquote><ol><li><a href="https://www.qbittorrent.org/download.php">qBittorrent</a> (<strong>Win</strong>&#x2F;<strong>Linux</strong>&#x2F;<strong>Mac</strong>)</li><li>推荐: <a href="https://sourceforge.net/projects/qbittorrent/files/">3.3.16</a> 及其 <a href="https://github.com/c0re100/qBittorrent-Enhanced-Edition/releases">增强版</a></li><li><a href="http://www.bittorrent.com/">BitTorrent</a> (<strong>Win</strong>&#x2F;Mac&#x2F;Android)</li><li><a href="https://deluge-torrent.org/">Deluge</a> (<strong>Linux</strong>&#x2F;<strong>Mac</strong>&#x2F;Win)</li><li><a href="https://transmissionbt.com/">Transmission</a> (<strong>Mac</strong>&#x2F;<strong>Linux</strong>&#x2F;Win)</li><li><a href="https://github.com/rakshasa/rtorrent">rtorrent</a>+<a href="https://github.com/Novik/ruTorrent">RuTorrent</a> (<strong>Linux</strong>)</li></ol></blockquote></blockquote><blockquote><h4 id="Aira2"><a href="#Aira2" class="headerlink" title="Aira2"></a>Aira2</h4></blockquote><p><a href="https://p3terx.com/archives/aria2-started-guide.html">Aria2 新手入门教程</a> </p><h3 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h3><blockquote><h4 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h4></blockquote><p>最牛逼的视频播放工具，不过需要一番调教之后才能发挥它巨大的潜力，使用默认的配置很渣。</p><ul><li>[<a href="https://vcb-s.com/archives/7228">VCB-Studio 科普教程 2.2] 基于 PotPlayer 和 madVR 的播放器教程（已更新 XySubFilter)</a></li><li>[<a href="https://vcb-s.com/archives/5610">VCB-Studio 科普教程 2.1] madVR 渲染器配置教程（2016.08.13 更新）</a></li><li>[<a href="https://vcb-s.com/archives/4567">VCB-Studio 科普教程 5] 那些播放器教程背后的知识</a></li><li><a href="https://vcb-s.com/archives/4384">VCB-Studio 科普教程 1.2 PotPlayer 播放器教程（入门篇</a></li></ul><blockquote><p>MPV</p></blockquote><p>mpv 是著名开源项目 MPlayer 的分支，因其对最新软硬件平台、视频标准以及各种高画质选项的支持而广受好评，也是目前非 Windows 平台上高画质播放器的不二选择。</p><ul><li>[<a href="https://vcb-s.com/archives/7594">VCB-Studio 科普教程 2.3] 跨平台播放器 mpv 配置入门</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;工具篇-强烈推荐安装&quot;&gt;&lt;a href=&quot;#工具篇-强烈推荐安装&quot; class=&quot;headerlink&quot; title=&quot;工具篇(强烈推荐安装)&quot;&gt;&lt;/a&gt;工具篇(强烈推荐安装)&lt;/h2&gt;&lt;h3 id=&quot;以打包&quot;&gt;&lt;a href=&quot;#以打包&quot; class=&quot;head</summary>
      
    
    
    
    <category term="windows" scheme="http://example.com/categories/windows/"/>
    
    
    <category term="toy" scheme="http://example.com/tags/toy/"/>
    
    <category term="windows" scheme="http://example.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Linux toy合集</title>
    <link href="http://example.com/2022/09/15/fucktoy/"/>
    <id>http://example.com/2022/09/15/fucktoy/</id>
    <published>2022-09-15T03:41:10.000Z</published>
    <updated>2022-10-06T03:47:13.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux命令神器-The-Fuck"><a href="#Linux命令神器-The-Fuck" class="headerlink" title="Linux命令神器 The Fuck"></a>Linux命令神器 <code>The Fuck</code></h1><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/example.gif" alt="example"></p><p><strong><code>The Fuck</code>是一款能够自动修复你的错误命令行的终端应用。</strong></p><p>相信大家每个人都有敲错过命令的时候,把<code>python</code><br>输入成 <code>puthon</code><br>.手速过快把<code>ls -alh</code><br>输入成 <code>ls a-lh</code><br>等等等,这时候是不是想拍一下键盘说一声<code>fuck</code></p><h2 id="术前要求"><a href="#术前要求" class="headerlink" title="术前要求"></a>术前要求</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Python</span> (<span class="number">2</span>.<span class="number">7</span>+ or <span class="number">3</span>.<span class="number">3</span>+)</span><br><span class="line"><span class="attribute">pip</span></span><br><span class="line"><span class="attribute">Python</span>-dev</span><br></pre></td></tr></table></figure><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p><strong>Mac 下使用 <a href="https://brew.sh/">Homebrew</a> 安装：</strong></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>thefuck</span><br></pre></td></tr></table></figure><p><strong>Ubuntu 下安装：</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">update</span></span><br><span class="line">sudo apt install <span class="keyword">python3</span>-dev <span class="keyword">python3</span>-pip</span><br><span class="line">sudo pip3 install thefuck</span><br></pre></td></tr></table></figure><p><strong>其他操作系统你可以使用 Python 的 pip 安装：</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> thefuck</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><strong>最后，不要忘记为 The Fuck 设置 alias</strong></p><p>暂时命令</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span> $(thefuck --<span class="keyword">alias</span>)</span><br></pre></td></tr></table></figure><p>在文件中永久配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑bashrc配置文件</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="comment">#在文件尾加入一行给thefuck取别名fuck</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(thefuck --alias fuck)</span>&quot;</span></span><br><span class="line"><span class="comment">#使生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>最后就可以痛快的使用啦！附上<a href="https://github.com/nvbn/thefuck"><code>TheFuck</code>官方链接</a></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>其实<code>TheFuck</code>的原理就是规则匹配（正则表达式），如果找到匹配规则的命令，则创建一个命令给用户选择或直接运行。</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat_dir - 当你尝试cat目录的时候，用<span class="keyword">ls</span>替换cat;</span><br><span class="line"><span class="keyword">cd</span>_correction – 拼写检查和纠正失败的<span class="keyword">cd</span>命令；</span><br><span class="line"><span class="keyword">cd</span>_mkdir – 在进入目录之前创建目录；</span><br><span class="line"><span class="keyword">cd</span>_parent – 更改 <span class="keyword">cd</span>.. 为<span class="keyword">cd</span> <span class="string">..</span>；</span><br><span class="line">dry – 修复类似的重复问题：git git push；</span><br><span class="line">fix_alt_space – 用空格字符代替Alt + Space；</span><br><span class="line"><span class="comment"># 还有很多可以参考https://github.com/nvbn/thefuck#how-it-works</span></span><br></pre></td></tr></table></figure><h2 id="ls的翻篇小火车sl"><a href="#ls的翻篇小火车sl" class="headerlink" title="ls的翻篇小火车sl"></a>ls的翻篇小火车<code>sl</code></h2><p><strong>敲下以下命令</strong></p><p><strong>Ubantu</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sudo</span> apt-<span class="meta">get</span> install <span class="built_in">sl</span></span><br></pre></td></tr></table></figure><p><strong>CentOs</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install sl </span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005205546460.png" alt="image-20221005205546460"></p><p>嘟嘟嘟嘟~~就会看到一个小火车，从你屏幕缓缓驰过….</p><p>还可以配合fuck使用就是</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@iZ2ze2p9tolfgje8qghiy0Z: sudo aptget install sl</span><br><span class="line">sudo: aptget: command not found</span><br><span class="line">root@iZ2ze2p9tolfgje8qghiy0Z:~<span class="comment"># fuck</span></span><br><span class="line">sudo apt-get install sl [enter/↑/↓/ctrl+c]</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading <span class="keyword">state</span> information... Done</span><br></pre></td></tr></table></figure><h2 id="反向装逼-tac"><a href="#反向装逼-tac" class="headerlink" title="反向装逼 tac"></a>反向装逼 <code>tac</code></h2><p> <strong>Ubantu</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install tac</span><br></pre></td></tr></table></figure><p><strong>CentOs</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install tac</span><br></pre></td></tr></table></figure><p><em>用cat看代码时</em></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005205556042.png" alt="image-20221005205556042"></p><p><em>tac呢</em></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005205604369.png" alt="image-20221005205604369"></p><h2 id="自己是黑客-jpg"><a href="#自己是黑客-jpg" class="headerlink" title="自己是黑客.jpg"></a>自己是黑客.jpg</h2><p> <strong>Ubantu</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install cmatrix</span><br></pre></td></tr></table></figure><p><strong>CentOs</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install cmatrix</span><br></pre></td></tr></table></figure><p>安装好后只要在命令行输入</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cmatrix</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005205611298.png" alt="image-20221005205611298"></p><p>Wow~</p><p>只要按Ctrl+C就可以退出，适合当息屏显示</p><h2 id="谨慎使用fork"><a href="#谨慎使用fork" class="headerlink" title="谨慎使用fork"></a>谨慎使用<code>fork</code></h2><p>根据你的shell，选择如下2个命令中的1个，一条命令弄死Linux：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">:() &#123; :|:&amp;</span> &#125;;:</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.() &#123; .<span class="string">|.&amp; &#125;;.</span></span><br></pre></td></tr></table></figure><p>接着就可以重启啦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux命令神器-The-Fuck&quot;&gt;&lt;a href=&quot;#Linux命令神器-The-Fuck&quot; class=&quot;headerlink&quot; title=&quot;Linux命令神器 The Fuck&quot;&gt;&lt;/a&gt;Linux命令神器 &lt;code&gt;The Fuck&lt;/code&gt;&lt;</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="toy" scheme="http://example.com/tags/toy/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>在线code安装教程</title>
    <link href="http://example.com/2022/09/12/codeinstall/"/>
    <id>http://example.com/2022/09/12/codeinstall/</id>
    <published>2022-09-12T03:11:10.000Z</published>
    <updated>2022-10-06T06:16:57.864Z</updated>
    
    <content type="html"><![CDATA[<p>##前置条件：</p><ol><li>云服务器</li><li>ssh的连接工具 如<a href="https://www.putty.org/">putty</a>，<a href="https://termius.com/">Termius</a>，mac用户可以直接用终端连接.</li></ol><h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><p>首先使用你的ssh工具连接服务器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>输入命令下载codeserver</span><br><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/coder/</span>code-server<span class="regexp">/releases/</span>download<span class="regexp">/v4.6.1/</span>code-server-<span class="number">4.6</span>.<span class="number">1</span>-linux-amd64.tar.gz</span><br><span class="line"><span class="regexp">//</span>解压</span><br><span class="line">tar -zxvf code-server-<span class="number">4.6</span>.<span class="number">1</span>-linux-amd64.tar.gz</span><br><span class="line"><span class="regexp">//</span>进入codeserver目录</span><br><span class="line">cd code-server-<span class="number">4.6</span>.<span class="number">1</span>-linux-amd64</span><br><span class="line"><span class="regexp">//</span>设置密码(密码在双引号内)</span><br><span class="line">export PASSWORD=<span class="number">123456</span></span><br><span class="line"><span class="regexp">//</span>启动codeserver</span><br><span class="line">./code-server --port <span class="number">8081</span> --host <span class="number">0.0</span>.<span class="number">0.0</span> --auth password</span><br></pre></td></tr></table></figure><p>在浏览器上方输入<code>你的服务器IP:8081</code> 即可进入登录界面</p><p>这个时候输入之前设置的密码就可以进入codeserver了</p><h2 id="配置Screen进程守护"><a href="#配置Screen进程守护" class="headerlink" title="配置Screen进程守护"></a>配置Screen进程守护</h2><p>之前的步骤有一个问题,就是当你退出ssh进程的时候,你会发现网站进不去了。</p><p>因为当ssh进程关闭的时候，会自动清除当前进程。</p><p>我们得下载Screen来给codeserver进行进程守护，防止进程自动退出。</p><h2 id="安装Screen"><a href="#安装Screen" class="headerlink" title="安装Screen"></a>安装Screen</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>复制适合自己系统的命令安装</span><br><span class="line"><span class="regexp">//</span>Centos系统</span><br><span class="line">yum install screen</span><br><span class="line"><span class="regexp">//</span>Debian/Ubuntu系统</span><br><span class="line">apt-get install screen</span><br></pre></td></tr></table></figure><h2 id="保护进程实现后台运行"><a href="#保护进程实现后台运行" class="headerlink" title="保护进程实现后台运行"></a>保护进程实现后台运行</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>以code_server为名字建立进程</span><br><span class="line">screen -S code_server</span><br><span class="line"><span class="string">//</span>再次输入以下命令</span><br><span class="line"><span class="keyword">cd</span> code-server-4.6.1-linux-amd64</span><br><span class="line">export PASSWORD=123456</span><br><span class="line"><span class="string">./code-server</span> <span class="params">--port</span> 8081 <span class="params">--host</span> 0.0.0.0 <span class="params">--auth</span> password</span><br></pre></td></tr></table></figure><p>此时关闭ssh终端,也可以照常进入网页啦！</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE-2022-09-06-215111.jpg"></p><p>微软官方<a href="https://vscode.dev/">请输入链接描述</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;##前置条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;云服务器&lt;/li&gt;
&lt;li&gt;ssh的连接工具 如&lt;a href=&quot;https://www.putty.org/&quot;&gt;putty&lt;/a&gt;，&lt;a href=&quot;https://termius.com/&quot;&gt;Termius&lt;/a&gt;，mac用户可</summary>
      
    
    
    
    <category term="toy" scheme="http://example.com/categories/toy/"/>
    
    
    <category term="toy" scheme="http://example.com/tags/toy/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Http基础</title>
    <link href="http://example.com/2022/09/12/Http/"/>
    <id>http://example.com/2022/09/12/Http/</id>
    <published>2022-09-12T03:11:10.000Z</published>
    <updated>2022-10-06T03:51:59.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h4 id="Http及Https概念"><a href="#Http及Https概念" class="headerlink" title="Http及Https概念"></a><em>Http</em>及<em>Https</em>概念</h4><p>1.超文本传输协议（<em>HyperText Transfer Protocol</em> 即<em>http</em>）是一种用于分布式、协作式和超媒体信息系统的应用层协议，所有的www文件都必须遵守这个标准和协议。</p><p>2.<em>http</em>是为了<em>Web</em>浏览器与<em>Web</em>服务器之间的通信而设计的，基于<em>TCP&#x2F;IP</em>通信协议来传递数据。</p><p>3.超文本传输安全协议（<em>HyperText Transfer Protocol Secure</em>即<em>https</em>）是一种通过计算机网络进行安全通信的传输协议。</p><p>4.<em>https</em>经由<em>http</em>进行通信，但利用<em>SS&#x2F;TLS</em>来加密数据包，所以开发的主要目的是提供对网络服务器的身份认证，保护交换资料的隐私与完整性。</p><p>5.<em>Http</em>的<em>URL</em>是由<code>http://</code>起始与默认使用端口<strong>80</strong>，<em>Https</em>的<em>URL</em>则是由<code>https://</code>起始与默认使用端口<strong>443</strong>。</p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005205712842.png" alt="image-20221005205712842"></p><h4 id="Http工作原理"><a href="#Http工作原理" class="headerlink" title="Http工作原理"></a><em>Http</em>工作原理</h4><p>1.它是工作于客户端以及服务器端的架构之上。</p><p>2.浏览器作为<em>http</em>客户端通过<em>URL</em>向<em>http</em>服务端即<em>Web</em>服务器发送所有请求。</p><p>3.服务器有：<em>Apache</em>服务器，<em>IIS</em>服务器（<em>Internet Information Services</em>）为主。</p><p>4.<em>Web</em>服务器根据接收到的请求后，想客户端发送响应信息。</p><p>5.<em>http</em>默认端口号为80,可以改为8080或者其他端口。</p><p><strong>三点注意事项</strong></p><ul><li><p><em>http</em>是无连接的：<em>无连接的含义是限制每次连接只处理一个请求，服务器处理完客户的请求，并收到客户的应答后，即断开连接，采用这种方式可以节省传输时间。</em></p></li><li><p><em>http</em>是媒体独立：<em>这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送，客户端以及服务器指定使用适合的 MIME-type 内容类型。</em></p></li><li><p><em>http</em>是无状态的：<em>HTTP 协议是无状态协议，无状态是指协议对于事务处理没有记忆能力，缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大，另一方面，在服务器不需要先前信息时它的应答就较快。</em></p></li></ul><p><strong>通信流程</strong></p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/cgiarch.gif" alt="cgiarch"></p><h4 id="Https作用"><a href="#Https作用" class="headerlink" title="Https作用"></a><em>Https</em>作用</h4><p>主要作用是在不安全的网络上建立一个安全通道，并在可使用适当的加密包和服务器证书时可被验证且可被信任时，对窃听人和中间人攻击时提供合理的防护。</p><p><em>http</em>的信任基于预先安装在操作系统中的证书颁发机构（<em>CA</em>）。</p><p>证书仅在一下情况可被信任：</p><ul><li>浏览器正确的实现了<em>https</em>且操作系统中安装了正确且受信任的证书颁发机构。</li><li>证书颁发机构进信任合法的网站。</li><li>被访问的网站提供了一个有效的证书，也就是说它是由一个操作系统信任的证书颁发机构签发的。</li><li>此证书正确验证了被访问的网站。</li><li>此协议的加密层（<em>SSL&#x2F;TLS</em>）能够有效的地提供认证和高强度的加密。</li></ul><h4 id="Http消息结构"><a href="#Http消息结构" class="headerlink" title="Http消息结构"></a><em>Http</em>消息结构</h4><p>1.<em>http</em>是基于客户端&#x2F;服务端（<em>C&#x2F;S</em>）的架构模型，通过一个可靠的链接来交换信息，是一个无转态的请求&#x2F;响应协议。</p><ul><li>“客户端”是一个应用程序（<em>Web</em>浏览器），通过连接到服务器大到向服务器发送一个或多个<em>HTTP</em>的请求的目的。</li><li>“服务端”是一个应用程序（<em>Apache Web</em>服务器或<em>IIS</em>服务器等），通过接收客户端的请求并向客户端发送<em>HTTP</em>响应数据。</li></ul><p>2.<em>Http</em>使用统一的资源标识符（<em>Uniform Resource Identifiers, URI</em>）来传输数据和建议连接。</p><p>3.一旦建立连接，数据消息就通过类似<em>Internet</em>邮件所使用的格式和多功能邮件扩展来传送。</p><h4 id="客户端请求消息"><a href="#客户端请求消息" class="headerlink" title="客户端请求消息"></a>客户端请求消息</h4><p><strong>客户端发送一个<em>http</em>请求到服务器的请求消息包括一下格式：请求行（<em>request line</em>）、请求头部（header）、空行和请求数据四个部分组成</strong></p><p><em><strong>一般格式：</strong></em></p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/2012072810301161.png" alt="img"></p><h4 id="服务端响应消息"><a href="#服务端响应消息" class="headerlink" title="服务端响应消息"></a>服务端响应消息</h4><p><strong><em>http</em>响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文</strong></p><p><img src="https://www.runoob.com/wp-content/uploads/2013/11/httpmessage.jpg" alt="img"></p><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p><em>客户端请求</em></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">GET</span> /hello.txt HTTP/<span class="number">1</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">User</span>-Agent: curl/<span class="number">7</span>.<span class="number">16</span>.<span class="number">3</span> libcurl/<span class="number">7</span>.<span class="number">16</span>.<span class="number">3</span> OpenSSL/<span class="number">0</span>.<span class="number">9</span>.<span class="number">7</span>l zlib/<span class="number">1</span>.<span class="number">2</span>.<span class="number">3</span></span><br><span class="line"><span class="attribute">Host</span>: www.example.com</span><br><span class="line"><span class="attribute">Accept</span>-Language: en, mi</span><br></pre></td></tr></table></figure><p><em>服务端响应</em></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span><span class="punctuation">: </span>Mon, 27 Jul 2009 12:28:53 GMT</span><br><span class="line"><span class="attribute">Server</span><span class="punctuation">: </span>Apache</span><br><span class="line"><span class="attribute">Last-Modified</span><span class="punctuation">: </span>Wed, 22 Jul 2009 19:15:56 GMT</span><br><span class="line"><span class="attribute">ETag</span><span class="punctuation">: </span>&quot;34aa387-d-1568eb00&quot;</span><br><span class="line"><span class="attribute">Accept-Ranges</span><span class="punctuation">: </span>bytes</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>51</span><br><span class="line"><span class="attribute">Vary</span><span class="punctuation">: </span>Accept-Encoding</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/plain</span><br></pre></td></tr></table></figure><p><em>输出结果</em></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World! My payload includes <span class="keyword">a</span> trailing <span class="literal">CRLF</span>.</span><br></pre></td></tr></table></figure><h4 id="Http请求方法"><a href="#Http请求方法" class="headerlink" title="Http请求方法"></a><em>Http</em>请求方法</h4><p><em>http1.0</em>定义了三种请求方法：<em>GET</em>，<em>POST</em>和<em>HEAD</em>方法。</p><p><em>http1.1</em>新增了六种请求方法：<em>OPTIONS</em>、<em>PUT</em>、<em>PATCH</em>、<em>DELETE</em>、<em>TRACE</em>和<em>CONNECT</em>方法。</p><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><em>GET</em></td><td>请求指定的页面信息，并返回实体主体</td></tr><tr><td>2</td><td><em>HEAD</em></td><td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td>3</td><td><em>POST</em></td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和&#x2F;或已有资源的修改。</td></tr><tr><td>4</td><td><em>PUT</em></td><td>从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td>5</td><td><em>DELETE</em></td><td>请求服务器删除指定的页面。</td></tr><tr><td>6</td><td><em>CONNECT</em></td><td><em>HTTP&#x2F;1.1</em> 协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td>7</td><td><em>OPTIONS</em></td><td>允许客户端查看服务器的性能。</td></tr><tr><td>8</td><td><em>TRACE</em></td><td>回显服务器收到的请求，主要用于测试或诊断。</td></tr><tr><td>9</td><td><em>PATCH</em></td><td>是对<em>PUT</em>方法的补充，用来对已知资源进行局部更新 。</td></tr></tbody></table><h4 id="Http响应头消息"><a href="#Http响应头消息" class="headerlink" title="Http响应头消息"></a><em>Http</em>响应头消息</h4><table><thead><tr><th align="left">应答头</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Allow</td><td align="left">服务器支持哪些请求方法（如GET、POST等）。</td></tr><tr><td align="left">Content-Encoding</td><td align="left">文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE 5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader(“Accept-Encoding”)）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面。</td></tr><tr><td align="left">Content-Length</td><td align="left">表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入 ByteArrayOutputStream，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容。</td></tr><tr><td align="left">Content-Type</td><td align="left">表示后面的文档属于什么MIME类型。Servlet默认为text&#x2F;plain，但通常需要显式地指定为text&#x2F;html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。</td></tr><tr><td align="left">Date</td><td align="left">当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。</td></tr><tr><td align="left">Expires</td><td align="left">应该在什么时候认为文档已经过期，从而不再缓存它？</td></tr><tr><td align="left">Last-Modified</td><td align="left">文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置。</td></tr><tr><td align="left">Location</td><td align="left">表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302。</td></tr><tr><td align="left">Refresh</td><td align="left">表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过setHeader(“Refresh”, “5; URL&#x3D;<a href="http://host/path&quot;)%E8%AE%A9%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%BB%E5%8F%96%E6%8C%87%E5%AE%9A%E7%9A%84%E9%A1%B5%E9%9D%A2%E3%80%82">http://host/path&quot;)让浏览器读取指定的页面。</a> 注意这种功能通常是通过设置HTML页面HEAD区的＜META HTTP-EQUIV&#x3D;”Refresh” CONTENT&#x3D;”5;URL&#x3D;<a href="http://host/path&quot;%EF%BC%9E%E5%AE%9E%E7%8E%B0%EF%BC%8C%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E6%88%96%E9%87%8D%E5%AE%9A%E5%90%91%E5%AF%B9%E4%BA%8E%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8CGI%E6%88%96Servlet%E7%9A%84HTML%E7%BC%96%E5%86%99%E8%80%85%E5%8D%81%E5%88%86%E9%87%8D%E8%A6%81%E3%80%82%E4%BD%86%E6%98%AF%EF%BC%8C%E5%AF%B9%E4%BA%8EServlet%E6%9D%A5%E8%AF%B4%EF%BC%8C%E7%9B%B4%E6%8E%A5%E8%AE%BE%E7%BD%AERefresh%E5%A4%B4%E6%9B%B4%E5%8A%A0%E6%96%B9%E4%BE%BF%E3%80%82">http://host/path&quot;＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。</a>  注意Refresh的意义是”N秒之后刷新本页面或访问指定页面”，而不是”每隔N秒刷新本页面或访问指定页面”。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是＜META HTTP-EQUIV&#x3D;”Refresh” …＞。  注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。</td></tr><tr><td align="left">Server</td><td align="left">服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。</td></tr><tr><td align="left">Set-Cookie</td><td align="left">设置和页面关联的Cookie。Servlet不应使用response.setHeader(“Set-Cookie”, …)，而是应使用HttpServletResponse提供的专用方法addCookie。参见下文有关Cookie设置的讨论。</td></tr><tr><td align="left">WWW-Authenticate</td><td align="left">客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader(“WWW-Authenticate”, “BASIC realm&#x3D;＼”executives＼””)。 注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。</td></tr></tbody></table><h4 id="Http状态码"><a href="#Http状态码" class="headerlink" title="Http状态码"></a><em>Http</em>状态码</h4><p>当浏览访问一个网页时，浏览者的浏览器会向网页所在服务器请求。当浏览器接收并显示网页前，此网页所在服务器会返回一个包含<em>HTTP</em>状态码的信息头（<em>server header</em>）用以响应浏览器的请求。</p><p>常见的<em>HTTP</em>状态码：</p><ul><li>200 - 请求成功</li><li>301 - 网页资源被永久转移到其它<em>URL</em></li><li>404 - 请求的网页资源不存在</li><li>500 - 内部服务器错误</li></ul><h5 id="Http状态码分类"><a href="#Http状态码分类" class="headerlink" title="Http状态码分类"></a><em>Http</em>状态码分类</h5><p><em>Http</em>状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型。响应分为五类：信息响应（100-199），成功响应（200-299），重定向（300-399），客户端错误（400-499）和服务器错误（500-599）。</p><p><em>Http</em>状态码列表</p><table><thead><tr><th align="left">状态码</th><th align="left">状态码英文名称</th><th align="left">中文描述</th></tr></thead><tbody><tr><td align="left">100</td><td align="left">Continue</td><td align="left">继续。客户端应继续其请求</td></tr><tr><td align="left">101</td><td align="left">Switching Protocols</td><td align="left">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">200</td><td align="left">OK</td><td align="left">请求成功。一般用于GET与POST请求</td></tr><tr><td align="left">201</td><td align="left">Created</td><td align="left">已创建。成功请求并创建了新的资源</td></tr><tr><td align="left">202</td><td align="left">Accepted</td><td align="left">已接受。已经接受请求，但未处理完成</td></tr><tr><td align="left">203</td><td align="left">Non-Authoritative Information</td><td align="left">非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td align="left">204</td><td align="left">No Content</td><td align="left">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td align="left">205</td><td align="left">Reset Content</td><td align="left">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td align="left">206</td><td align="left">Partial Content</td><td align="left">部分内容。服务器成功处理了部分GET请求</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">300</td><td align="left">Multiple Choices</td><td align="left">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td align="left">301</td><td align="left">Moved Permanently</td><td align="left">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td align="left">302</td><td align="left">Found</td><td align="left">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td align="left">303</td><td align="left">See Other</td><td align="left">查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td align="left">304</td><td align="left">Not Modified</td><td align="left">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td align="left">305</td><td align="left">Use Proxy</td><td align="left">使用代理。所请求的资源必须通过代理访问</td></tr><tr><td align="left">306</td><td align="left">Unused</td><td align="left">已经被废弃的HTTP状态码</td></tr><tr><td align="left">307</td><td align="left">Temporary Redirect</td><td align="left">临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">400</td><td align="left">Bad Request</td><td align="left">客户端请求的语法错误，服务器无法理解</td></tr><tr><td align="left">401</td><td align="left">Unauthorized</td><td align="left">请求要求用户的身份认证</td></tr><tr><td align="left">402</td><td align="left">Payment Required</td><td align="left">保留，将来使用</td></tr><tr><td align="left">403</td><td align="left">Forbidden</td><td align="left">服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td align="left">404</td><td align="left">Not Found</td><td align="left">服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td></tr><tr><td align="left">405</td><td align="left">Method Not Allowed</td><td align="left">客户端请求中的方法被禁止</td></tr><tr><td align="left">406</td><td align="left">Not Acceptable</td><td align="left">服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td align="left">407</td><td align="left">Proxy Authentication Required</td><td align="left">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td align="left">408</td><td align="left">Request Time-out</td><td align="left">服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td align="left">409</td><td align="left">Conflict</td><td align="left">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td align="left">410</td><td align="left">Gone</td><td align="left">客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td align="left">411</td><td align="left">Length Required</td><td align="left">服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td align="left">412</td><td align="left">Precondition Failed</td><td align="left">客户端请求信息的先决条件错误</td></tr><tr><td align="left">413</td><td align="left">Request Entity Too Large</td><td align="left">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td align="left">414</td><td align="left">Request-URI Too Large</td><td align="left">请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td align="left">415</td><td align="left">Unsupported Media Type</td><td align="left">服务器无法处理请求附带的媒体格式</td></tr><tr><td align="left">416</td><td align="left">Requested range not satisfiable</td><td align="left">客户端请求的范围无效</td></tr><tr><td align="left">417</td><td align="left">Expectation Failed</td><td align="left">服务器无法满足Expect的请求头信息</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">500</td><td align="left">Internal Server Error</td><td align="left">服务器内部错误，无法完成请求</td></tr><tr><td align="left">501</td><td align="left">Not Implemented</td><td align="left">服务器不支持请求的功能，无法完成请求</td></tr><tr><td align="left">502</td><td align="left">Bad Gateway</td><td align="left">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td align="left">503</td><td align="left">Service Unavailable</td><td align="left">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td align="left">504</td><td align="left">Gateway Time-out</td><td align="left">充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td align="left">505</td><td align="left">HTTP Version not supported</td><td align="left">服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table><h4 id="Http内容类型"><a href="#Http内容类型" class="headerlink" title="Http内容类型"></a><em>Http</em>内容类型</h4><p><em>Content-Type</em>（内容类型），一般是指网页中存在的<em>content-type</em>，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式，什么编码来读取这个文件，这就是经常看到的一些<em>PHP</em>网页点击的结果却是下载一个文件或一张图片的原因。</p><p>content-type标头告诉客户端实际返回的内容的内容类型。例</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-<span class="keyword">Type</span>: text/html;charset=utf-<span class="number">8</span></span><br><span class="line">Content-<span class="keyword">Type</span>: multipart/<span class="keyword">form</span>-<span class="keyword">data</span>;boundary=something</span><br></pre></td></tr></table></figure><p><img src="C:\Users\mua\AppData\Roaming\Typora\typora-user-images\image-20220909182611661.png" alt="image-20220909182611661"></p><p><strong>常用的媒体格式类型如下：</strong></p><ul><li>text&#x2F;html ： <em>HTML</em>格式</li><li>text&#x2F;plain：纯文本格式</li><li>text&#x2F;xml：<em>XML</em>格式</li><li>image&#x2F;gif：<em>gif</em>图片格式</li><li>image&#x2F;jpeg：<em>jpg</em>图片格式</li><li>image&#x2F;png：<em>png</em>图片格式</li></ul><p><strong>以<em>application</em>开头的媒体格式类型：</strong></p><ul><li>application&#x2F;xhtml+xml：<em>XHTML</em>格式</li><li>application&#x2F;xml：<em>XML</em>数据格式</li><li>application&#x2F;atom+xml：<em>Atom XML</em>聚合格式</li><li>application&#x2F;json：<em>JSON</em>数据格式</li><li>application&#x2F;msword：<em>Word</em>格式</li><li>application&#x2F;pdf ： <em>pdf</em>格式</li><li>application&#x2F;octet-stream：二进制流数据</li><li>application&#x2F;x-www-form-urlencoded：<form encType=""> 中默认的encType，form表单数据被编码为<em>key&#x2F;value</em>格式发送到服务器（表单默认的提交数据的格式）</li></ul><p><strong>一种常见的上传文件之时使用的媒体格式：</strong></p><ul><li>multipart&#x2F;form-data：需要在表单中进行文件上传时，就需要使用该格式</li></ul><h5 id="content-type对照表"><a href="#content-type对照表" class="headerlink" title="content-type对照表"></a>content-type对照表</h5><table><thead><tr><th align="left">文件扩展名</th><th align="left">Content-Type(Mime-Type)</th><th align="left">文件扩展名</th><th align="left">Content-Type(Mime-Type)</th></tr></thead><tbody><tr><td align="left">.*（ 二进制流，不知道下载文件类型）</td><td align="left">application&#x2F;octet-stream</td><td align="left">.tif</td><td align="left">image&#x2F;tiff</td></tr><tr><td align="left">.001</td><td align="left">application&#x2F;x-001</td><td align="left">.301</td><td align="left">application&#x2F;x-301</td></tr><tr><td align="left">.323</td><td align="left">text&#x2F;h323</td><td align="left">.906</td><td align="left">application&#x2F;x-906</td></tr><tr><td align="left">.907</td><td align="left">drawing&#x2F;907</td><td align="left">.a11</td><td align="left">application&#x2F;x-a11</td></tr><tr><td align="left">.acp</td><td align="left">audio&#x2F;x-mei-aac</td><td align="left">.ai</td><td align="left">application&#x2F;postscript</td></tr><tr><td align="left">.aif</td><td align="left">audio&#x2F;aiff</td><td align="left">.aifc</td><td align="left">audio&#x2F;aiff</td></tr><tr><td align="left">.aiff</td><td align="left">audio&#x2F;aiff</td><td align="left">.anv</td><td align="left">application&#x2F;x-anv</td></tr><tr><td align="left">.asa</td><td align="left">text&#x2F;asa</td><td align="left">.asf</td><td align="left">video&#x2F;x-ms-asf</td></tr><tr><td align="left">.asp</td><td align="left">text&#x2F;asp</td><td align="left">.asx</td><td align="left">video&#x2F;x-ms-asf</td></tr><tr><td align="left">.au</td><td align="left">audio&#x2F;basic</td><td align="left">.avi</td><td align="left">video&#x2F;avi</td></tr><tr><td align="left">.awf</td><td align="left">application&#x2F;vnd.adobe.workflow</td><td align="left">.biz</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.bmp</td><td align="left">application&#x2F;x-bmp</td><td align="left">.bot</td><td align="left">application&#x2F;x-bot</td></tr><tr><td align="left">.c4t</td><td align="left">application&#x2F;x-c4t</td><td align="left">.c90</td><td align="left">application&#x2F;x-c90</td></tr><tr><td align="left">.cal</td><td align="left">application&#x2F;x-cals</td><td align="left">.cat</td><td align="left">application&#x2F;vnd.ms-pki.seccat</td></tr><tr><td align="left">.cdf</td><td align="left">application&#x2F;x-netcdf</td><td align="left">.cdr</td><td align="left">application&#x2F;x-cdr</td></tr><tr><td align="left">.cel</td><td align="left">application&#x2F;x-cel</td><td align="left">.cer</td><td align="left">application&#x2F;x-x509-ca-cert</td></tr><tr><td align="left">.cg4</td><td align="left">application&#x2F;x-g4</td><td align="left">.cgm</td><td align="left">application&#x2F;x-cgm</td></tr><tr><td align="left">.cit</td><td align="left">application&#x2F;x-cit</td><td align="left">.class</td><td align="left">java&#x2F;*</td></tr><tr><td align="left">.cml</td><td align="left">text&#x2F;xml</td><td align="left">.cmp</td><td align="left">application&#x2F;x-cmp</td></tr><tr><td align="left">.cmx</td><td align="left">application&#x2F;x-cmx</td><td align="left">.cot</td><td align="left">application&#x2F;x-cot</td></tr><tr><td align="left">.crl</td><td align="left">application&#x2F;pkix-crl</td><td align="left">.crt</td><td align="left">application&#x2F;x-x509-ca-cert</td></tr><tr><td align="left">.csi</td><td align="left">application&#x2F;x-csi</td><td align="left">.css</td><td align="left">text&#x2F;css</td></tr><tr><td align="left">.cut</td><td align="left">application&#x2F;x-cut</td><td align="left">.dbf</td><td align="left">application&#x2F;x-dbf</td></tr><tr><td align="left">.dbm</td><td align="left">application&#x2F;x-dbm</td><td align="left">.dbx</td><td align="left">application&#x2F;x-dbx</td></tr><tr><td align="left">.dcd</td><td align="left">text&#x2F;xml</td><td align="left">.dcx</td><td align="left">application&#x2F;x-dcx</td></tr><tr><td align="left">.der</td><td align="left">application&#x2F;x-x509-ca-cert</td><td align="left">.dgn</td><td align="left">application&#x2F;x-dgn</td></tr><tr><td align="left">.dib</td><td align="left">application&#x2F;x-dib</td><td align="left">.dll</td><td align="left">application&#x2F;x-msdownload</td></tr><tr><td align="left">.doc</td><td align="left">application&#x2F;msword</td><td align="left">.dot</td><td align="left">application&#x2F;msword</td></tr><tr><td align="left">.drw</td><td align="left">application&#x2F;x-drw</td><td align="left">.dtd</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.dwf</td><td align="left">Model&#x2F;vnd.dwf</td><td align="left">.dwf</td><td align="left">application&#x2F;x-dwf</td></tr><tr><td align="left">.dwg</td><td align="left">application&#x2F;x-dwg</td><td align="left">.dxb</td><td align="left">application&#x2F;x-dxb</td></tr><tr><td align="left">.dxf</td><td align="left">application&#x2F;x-dxf</td><td align="left">.edn</td><td align="left">application&#x2F;vnd.adobe.edn</td></tr><tr><td align="left">.emf</td><td align="left">application&#x2F;x-emf</td><td align="left">.eml</td><td align="left">message&#x2F;rfc822</td></tr><tr><td align="left">.ent</td><td align="left">text&#x2F;xml</td><td align="left">.epi</td><td align="left">application&#x2F;x-epi</td></tr><tr><td align="left">.eps</td><td align="left">application&#x2F;x-ps</td><td align="left">.eps</td><td align="left">application&#x2F;postscript</td></tr><tr><td align="left">.etd</td><td align="left">application&#x2F;x-ebx</td><td align="left">.exe</td><td align="left">application&#x2F;x-msdownload</td></tr><tr><td align="left">.fax</td><td align="left">image&#x2F;fax</td><td align="left">.fdf</td><td align="left">application&#x2F;vnd.fdf</td></tr><tr><td align="left">.fif</td><td align="left">application&#x2F;fractals</td><td align="left">.fo</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.frm</td><td align="left">application&#x2F;x-frm</td><td align="left">.g4</td><td align="left">application&#x2F;x-g4</td></tr><tr><td align="left">.gbr</td><td align="left">application&#x2F;x-gbr</td><td align="left">.</td><td align="left">application&#x2F;x-</td></tr><tr><td align="left">.gif</td><td align="left">image&#x2F;gif</td><td align="left">.gl2</td><td align="left">application&#x2F;x-gl2</td></tr><tr><td align="left">.gp4</td><td align="left">application&#x2F;x-gp4</td><td align="left">.hgl</td><td align="left">application&#x2F;x-hgl</td></tr><tr><td align="left">.hmr</td><td align="left">application&#x2F;x-hmr</td><td align="left">.hpg</td><td align="left">application&#x2F;x-hpgl</td></tr><tr><td align="left">.hpl</td><td align="left">application&#x2F;x-hpl</td><td align="left">.hqx</td><td align="left">application&#x2F;mac-binhex40</td></tr><tr><td align="left">.hrf</td><td align="left">application&#x2F;x-hrf</td><td align="left">.hta</td><td align="left">application&#x2F;hta</td></tr><tr><td align="left">.htc</td><td align="left">text&#x2F;x-component</td><td align="left">.htm</td><td align="left">text&#x2F;html</td></tr><tr><td align="left">.html</td><td align="left">text&#x2F;html</td><td align="left">.htt</td><td align="left">text&#x2F;webviewhtml</td></tr><tr><td align="left">.htx</td><td align="left">text&#x2F;html</td><td align="left">.icb</td><td align="left">application&#x2F;x-icb</td></tr><tr><td align="left">.ico</td><td align="left">image&#x2F;x-icon</td><td align="left">.ico</td><td align="left">application&#x2F;x-ico</td></tr><tr><td align="left">.iff</td><td align="left">application&#x2F;x-iff</td><td align="left">.ig4</td><td align="left">application&#x2F;x-g4</td></tr><tr><td align="left">.igs</td><td align="left">application&#x2F;x-igs</td><td align="left">.iii</td><td align="left">application&#x2F;x-iphone</td></tr><tr><td align="left">.img</td><td align="left">application&#x2F;x-img</td><td align="left">.ins</td><td align="left">application&#x2F;x-internet-signup</td></tr><tr><td align="left">.isp</td><td align="left">application&#x2F;x-internet-signup</td><td align="left">.IVF</td><td align="left">video&#x2F;x-ivf</td></tr><tr><td align="left">.java</td><td align="left">java&#x2F;*</td><td align="left">.jfif</td><td align="left">image&#x2F;jpeg</td></tr><tr><td align="left">.jpe</td><td align="left">image&#x2F;jpeg</td><td align="left">.jpe</td><td align="left">application&#x2F;x-jpe</td></tr><tr><td align="left">.jpeg</td><td align="left">image&#x2F;jpeg</td><td align="left">.jpg</td><td align="left">image&#x2F;jpeg</td></tr><tr><td align="left">.jpg</td><td align="left">application&#x2F;x-jpg</td><td align="left">.js</td><td align="left">application&#x2F;x-javascript</td></tr><tr><td align="left">.jsp</td><td align="left">text&#x2F;html</td><td align="left">.la1</td><td align="left">audio&#x2F;x-liquid-file</td></tr><tr><td align="left">.lar</td><td align="left">application&#x2F;x-laplayer-reg</td><td align="left">.latex</td><td align="left">application&#x2F;x-latex</td></tr><tr><td align="left">.lavs</td><td align="left">audio&#x2F;x-liquid-secure</td><td align="left">.lbm</td><td align="left">application&#x2F;x-lbm</td></tr><tr><td align="left">.lmsff</td><td align="left">audio&#x2F;x-la-lms</td><td align="left">.ls</td><td align="left">application&#x2F;x-javascript</td></tr><tr><td align="left">.ltr</td><td align="left">application&#x2F;x-ltr</td><td align="left">.m1v</td><td align="left">video&#x2F;x-mpeg</td></tr><tr><td align="left">.m2v</td><td align="left">video&#x2F;x-mpeg</td><td align="left">.m3u</td><td align="left">audio&#x2F;mpegurl</td></tr><tr><td align="left">.m4e</td><td align="left">video&#x2F;mpeg4</td><td align="left">.mac</td><td align="left">application&#x2F;x-mac</td></tr><tr><td align="left">.man</td><td align="left">application&#x2F;x-troff-man</td><td align="left">.math</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.mdb</td><td align="left">application&#x2F;msaccess</td><td align="left">.mdb</td><td align="left">application&#x2F;x-mdb</td></tr><tr><td align="left">.mfp</td><td align="left">application&#x2F;x-shockwave-flash</td><td align="left">.mht</td><td align="left">message&#x2F;rfc822</td></tr><tr><td align="left">.mhtml</td><td align="left">message&#x2F;rfc822</td><td align="left">.mi</td><td align="left">application&#x2F;x-mi</td></tr><tr><td align="left">.mid</td><td align="left">audio&#x2F;mid</td><td align="left">.midi</td><td align="left">audio&#x2F;mid</td></tr><tr><td align="left">.mil</td><td align="left">application&#x2F;x-mil</td><td align="left">.mml</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.mnd</td><td align="left">audio&#x2F;x-musicnet-download</td><td align="left">.mns</td><td align="left">audio&#x2F;x-musicnet-stream</td></tr><tr><td align="left">.mocha</td><td align="left">application&#x2F;x-javascript</td><td align="left">.movie</td><td align="left">video&#x2F;x-sgi-movie</td></tr><tr><td align="left">.mp1</td><td align="left">audio&#x2F;mp1</td><td align="left">.mp2</td><td align="left">audio&#x2F;mp2</td></tr><tr><td align="left">.mp2v</td><td align="left">video&#x2F;mpeg</td><td align="left">.mp3</td><td align="left">audio&#x2F;mp3</td></tr><tr><td align="left">.mp4</td><td align="left">video&#x2F;mpeg4</td><td align="left">.mpa</td><td align="left">video&#x2F;x-mpg</td></tr><tr><td align="left">.mpd</td><td align="left">application&#x2F;vnd.ms-project</td><td align="left">.mpe</td><td align="left">video&#x2F;x-mpeg</td></tr><tr><td align="left">.mpeg</td><td align="left">video&#x2F;mpg</td><td align="left">.mpg</td><td align="left">video&#x2F;mpg</td></tr><tr><td align="left">.mpga</td><td align="left">audio&#x2F;rn-mpeg</td><td align="left">.mpp</td><td align="left">application&#x2F;vnd.ms-project</td></tr><tr><td align="left">.mps</td><td align="left">video&#x2F;x-mpeg</td><td align="left">.mpt</td><td align="left">application&#x2F;vnd.ms-project</td></tr><tr><td align="left">.mpv</td><td align="left">video&#x2F;mpg</td><td align="left">.mpv2</td><td align="left">video&#x2F;mpeg</td></tr><tr><td align="left">.mpw</td><td align="left">application&#x2F;vnd.ms-project</td><td align="left">.mpx</td><td align="left">application&#x2F;vnd.ms-project</td></tr><tr><td align="left">.mtx</td><td align="left">text&#x2F;xml</td><td align="left">.mxp</td><td align="left">application&#x2F;x-mmxp</td></tr><tr><td align="left">.net</td><td align="left">image&#x2F;pnetvue</td><td align="left">.nrf</td><td align="left">application&#x2F;x-nrf</td></tr><tr><td align="left">.nws</td><td align="left">message&#x2F;rfc822</td><td align="left">.odc</td><td align="left">text&#x2F;x-ms-odc</td></tr><tr><td align="left">.out</td><td align="left">application&#x2F;x-out</td><td align="left">.p10</td><td align="left">application&#x2F;pkcs10</td></tr><tr><td align="left">.p12</td><td align="left">application&#x2F;x-pkcs12</td><td align="left">.p7b</td><td align="left">application&#x2F;x-pkcs7-certificates</td></tr><tr><td align="left">.p7c</td><td align="left">application&#x2F;pkcs7-mime</td><td align="left">.p7m</td><td align="left">application&#x2F;pkcs7-mime</td></tr><tr><td align="left">.p7r</td><td align="left">application&#x2F;x-pkcs7-certreqresp</td><td align="left">.p7s</td><td align="left">application&#x2F;pkcs7-signature</td></tr><tr><td align="left">.pc5</td><td align="left">application&#x2F;x-pc5</td><td align="left">.pci</td><td align="left">application&#x2F;x-pci</td></tr><tr><td align="left">.pcl</td><td align="left">application&#x2F;x-pcl</td><td align="left">.pcx</td><td align="left">application&#x2F;x-pcx</td></tr><tr><td align="left">.pdf</td><td align="left">application&#x2F;pdf</td><td align="left">.pdf</td><td align="left">application&#x2F;pdf</td></tr><tr><td align="left">.pdx</td><td align="left">application&#x2F;vnd.adobe.pdx</td><td align="left">.pfx</td><td align="left">application&#x2F;x-pkcs12</td></tr><tr><td align="left">.pgl</td><td align="left">application&#x2F;x-pgl</td><td align="left">.pic</td><td align="left">application&#x2F;x-pic</td></tr><tr><td align="left">.pko</td><td align="left">application&#x2F;vnd.ms-pki.pko</td><td align="left">.pl</td><td align="left">application&#x2F;x-perl</td></tr><tr><td align="left">.plg</td><td align="left">text&#x2F;html</td><td align="left">.pls</td><td align="left">audio&#x2F;scpls</td></tr><tr><td align="left">.plt</td><td align="left">application&#x2F;x-plt</td><td align="left">.png</td><td align="left">image&#x2F;png</td></tr><tr><td align="left">.png</td><td align="left">application&#x2F;x-png</td><td align="left">.pot</td><td align="left">application&#x2F;vnd.ms-powerpoint</td></tr><tr><td align="left">.ppa</td><td align="left">application&#x2F;vnd.ms-powerpoint</td><td align="left">.ppm</td><td align="left">application&#x2F;x-ppm</td></tr><tr><td align="left">.pps</td><td align="left">application&#x2F;vnd.ms-powerpoint</td><td align="left">.ppt</td><td align="left">application&#x2F;vnd.ms-powerpoint</td></tr><tr><td align="left">.ppt</td><td align="left">application&#x2F;x-ppt</td><td align="left">.pr</td><td align="left">application&#x2F;x-pr</td></tr><tr><td align="left">.prf</td><td align="left">application&#x2F;pics-rules</td><td align="left">.prn</td><td align="left">application&#x2F;x-prn</td></tr><tr><td align="left">.prt</td><td align="left">application&#x2F;x-prt</td><td align="left">.ps</td><td align="left">application&#x2F;x-ps</td></tr><tr><td align="left">.ps</td><td align="left">application&#x2F;postscript</td><td align="left">.ptn</td><td align="left">application&#x2F;x-ptn</td></tr><tr><td align="left">.pwz</td><td align="left">application&#x2F;vnd.ms-powerpoint</td><td align="left">.r3t</td><td align="left">text&#x2F;vnd.rn-realtext3d</td></tr><tr><td align="left">.ra</td><td align="left">audio&#x2F;vnd.rn-realaudio</td><td align="left">.ram</td><td align="left">audio&#x2F;x-pn-realaudio</td></tr><tr><td align="left">.ras</td><td align="left">application&#x2F;x-ras</td><td align="left">.rat</td><td align="left">application&#x2F;rat-file</td></tr><tr><td align="left">.rdf</td><td align="left">text&#x2F;xml</td><td align="left">.rec</td><td align="left">application&#x2F;vnd.rn-recording</td></tr><tr><td align="left">.red</td><td align="left">application&#x2F;x-red</td><td align="left">.rgb</td><td align="left">application&#x2F;x-rgb</td></tr><tr><td align="left">.rjs</td><td align="left">application&#x2F;vnd.rn-realsystem-rjs</td><td align="left">.rjt</td><td align="left">application&#x2F;vnd.rn-realsystem-rjt</td></tr><tr><td align="left">.rlc</td><td align="left">application&#x2F;x-rlc</td><td align="left">.rle</td><td align="left">application&#x2F;x-rle</td></tr><tr><td align="left">.rm</td><td align="left">application&#x2F;vnd.rn-realmedia</td><td align="left">.rmf</td><td align="left">application&#x2F;vnd.adobe.rmf</td></tr><tr><td align="left">.rmi</td><td align="left">audio&#x2F;mid</td><td align="left">.rmj</td><td align="left">application&#x2F;vnd.rn-realsystem-rmj</td></tr><tr><td align="left">.rmm</td><td align="left">audio&#x2F;x-pn-realaudio</td><td align="left">.rmp</td><td align="left">application&#x2F;vnd.rn-rn_music_package</td></tr><tr><td align="left">.rms</td><td align="left">application&#x2F;vnd.rn-realmedia-secure</td><td align="left">.rmvb</td><td align="left">application&#x2F;vnd.rn-realmedia-vbr</td></tr><tr><td align="left">.rmx</td><td align="left">application&#x2F;vnd.rn-realsystem-rmx</td><td align="left">.rnx</td><td align="left">application&#x2F;vnd.rn-realplayer</td></tr><tr><td align="left">.rp</td><td align="left">image&#x2F;vnd.rn-realpix</td><td align="left">.rpm</td><td align="left">audio&#x2F;x-pn-realaudio-plugin</td></tr><tr><td align="left">.rsml</td><td align="left">application&#x2F;vnd.rn-rsml</td><td align="left">.rt</td><td align="left">text&#x2F;vnd.rn-realtext</td></tr><tr><td align="left">.rtf</td><td align="left">application&#x2F;msword</td><td align="left">.rtf</td><td align="left">application&#x2F;x-rtf</td></tr><tr><td align="left">.rv</td><td align="left">video&#x2F;vnd.rn-realvideo</td><td align="left">.sam</td><td align="left">application&#x2F;x-sam</td></tr><tr><td align="left">.sat</td><td align="left">application&#x2F;x-sat</td><td align="left">.sdp</td><td align="left">application&#x2F;sdp</td></tr><tr><td align="left">.sdw</td><td align="left">application&#x2F;x-sdw</td><td align="left">.sit</td><td align="left">application&#x2F;x-stuffit</td></tr><tr><td align="left">.slb</td><td align="left">application&#x2F;x-slb</td><td align="left">.sld</td><td align="left">application&#x2F;x-sld</td></tr><tr><td align="left">.slk</td><td align="left">drawing&#x2F;x-slk</td><td align="left">.smi</td><td align="left">application&#x2F;smil</td></tr><tr><td align="left">.smil</td><td align="left">application&#x2F;smil</td><td align="left">.smk</td><td align="left">application&#x2F;x-smk</td></tr><tr><td align="left">.snd</td><td align="left">audio&#x2F;basic</td><td align="left">.sol</td><td align="left">text&#x2F;plain</td></tr><tr><td align="left">.sor</td><td align="left">text&#x2F;plain</td><td align="left">.spc</td><td align="left">application&#x2F;x-pkcs7-certificates</td></tr><tr><td align="left">.spl</td><td align="left">application&#x2F;futuresplash</td><td align="left">.spp</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.ssm</td><td align="left">application&#x2F;streamingmedia</td><td align="left">.sst</td><td align="left">application&#x2F;vnd.ms-pki.certstore</td></tr><tr><td align="left">.stl</td><td align="left">application&#x2F;vnd.ms-pki.stl</td><td align="left">.stm</td><td align="left">text&#x2F;html</td></tr><tr><td align="left">.sty</td><td align="left">application&#x2F;x-sty</td><td align="left">.svg</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.swf</td><td align="left">application&#x2F;x-shockwave-flash</td><td align="left">.tdf</td><td align="left">application&#x2F;x-tdf</td></tr><tr><td align="left">.tg4</td><td align="left">application&#x2F;x-tg4</td><td align="left">.tga</td><td align="left">application&#x2F;x-tga</td></tr><tr><td align="left">.tif</td><td align="left">image&#x2F;tiff</td><td align="left">.tif</td><td align="left">application&#x2F;x-tif</td></tr><tr><td align="left">.tiff</td><td align="left">image&#x2F;tiff</td><td align="left">.tld</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.top</td><td align="left">drawing&#x2F;x-top</td><td align="left">.torrent</td><td align="left">application&#x2F;x-bittorrent</td></tr><tr><td align="left">.tsd</td><td align="left">text&#x2F;xml</td><td align="left">.txt</td><td align="left">text&#x2F;plain</td></tr><tr><td align="left">.uin</td><td align="left">application&#x2F;x-icq</td><td align="left">.uls</td><td align="left">text&#x2F;iuls</td></tr><tr><td align="left">.vcf</td><td align="left">text&#x2F;x-vcard</td><td align="left">.vda</td><td align="left">application&#x2F;x-vda</td></tr><tr><td align="left">.vdx</td><td align="left">application&#x2F;vnd.visio</td><td align="left">.vml</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.vpg</td><td align="left">application&#x2F;x-vpeg005</td><td align="left">.vsd</td><td align="left">application&#x2F;vnd.visio</td></tr><tr><td align="left">.vsd</td><td align="left">application&#x2F;x-vsd</td><td align="left">.vss</td><td align="left">application&#x2F;vnd.visio</td></tr><tr><td align="left">.vst</td><td align="left">application&#x2F;vnd.visio</td><td align="left">.vst</td><td align="left">application&#x2F;x-vst</td></tr><tr><td align="left">.vsw</td><td align="left">application&#x2F;vnd.visio</td><td align="left">.vsx</td><td align="left">application&#x2F;vnd.visio</td></tr><tr><td align="left">.vtx</td><td align="left">application&#x2F;vnd.visio</td><td align="left">.vxml</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.wav</td><td align="left">audio&#x2F;wav</td><td align="left">.wax</td><td align="left">audio&#x2F;x-ms-wax</td></tr><tr><td align="left">.wb1</td><td align="left">application&#x2F;x-wb1</td><td align="left">.wb2</td><td align="left">application&#x2F;x-wb2</td></tr><tr><td align="left">.wb3</td><td align="left">application&#x2F;x-wb3</td><td align="left">.wbmp</td><td align="left">image&#x2F;vnd.wap.wbmp</td></tr><tr><td align="left">.wiz</td><td align="left">application&#x2F;msword</td><td align="left">.wk3</td><td align="left">application&#x2F;x-wk3</td></tr><tr><td align="left">.wk4</td><td align="left">application&#x2F;x-wk4</td><td align="left">.wkq</td><td align="left">application&#x2F;x-wkq</td></tr><tr><td align="left">.wks</td><td align="left">application&#x2F;x-wks</td><td align="left">.wm</td><td align="left">video&#x2F;x-ms-wm</td></tr><tr><td align="left">.wma</td><td align="left">audio&#x2F;x-ms-wma</td><td align="left">.wmd</td><td align="left">application&#x2F;x-ms-wmd</td></tr><tr><td align="left">.wmf</td><td align="left">application&#x2F;x-wmf</td><td align="left">.wml</td><td align="left">text&#x2F;vnd.wap.wml</td></tr><tr><td align="left">.wmv</td><td align="left">video&#x2F;x-ms-wmv</td><td align="left">.wmx</td><td align="left">video&#x2F;x-ms-wmx</td></tr><tr><td align="left">.wmz</td><td align="left">application&#x2F;x-ms-wmz</td><td align="left">.wp6</td><td align="left">application&#x2F;x-wp6</td></tr><tr><td align="left">.wpd</td><td align="left">application&#x2F;x-wpd</td><td align="left">.wpg</td><td align="left">application&#x2F;x-wpg</td></tr><tr><td align="left">.wpl</td><td align="left">application&#x2F;vnd.ms-wpl</td><td align="left">.wq1</td><td align="left">application&#x2F;x-wq1</td></tr><tr><td align="left">.wr1</td><td align="left">application&#x2F;x-wr1</td><td align="left">.wri</td><td align="left">application&#x2F;x-wri</td></tr><tr><td align="left">.wrk</td><td align="left">application&#x2F;x-wrk</td><td align="left">.ws</td><td align="left">application&#x2F;x-ws</td></tr><tr><td align="left">.ws2</td><td align="left">application&#x2F;x-ws</td><td align="left">.wsc</td><td align="left">text&#x2F;scriptlet</td></tr><tr><td align="left">.wsdl</td><td align="left">text&#x2F;xml</td><td align="left">.wvx</td><td align="left">video&#x2F;x-ms-wvx</td></tr><tr><td align="left">.xdp</td><td align="left">application&#x2F;vnd.adobe.xdp</td><td align="left">.xdr</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.xfd</td><td align="left">application&#x2F;vnd.adobe.xfd</td><td align="left">.xfdf</td><td align="left">application&#x2F;vnd.adobe.xfdf</td></tr><tr><td align="left">.xhtml</td><td align="left">text&#x2F;html</td><td align="left">.xls</td><td align="left">application&#x2F;vnd.ms-excel</td></tr><tr><td align="left">.xls</td><td align="left">application&#x2F;x-xls</td><td align="left">.xlw</td><td align="left">application&#x2F;x-xlw</td></tr><tr><td align="left">.xml</td><td align="left">text&#x2F;xml</td><td align="left">.xpl</td><td align="left">audio&#x2F;scpls</td></tr><tr><td align="left">.xq</td><td align="left">text&#x2F;xml</td><td align="left">.xql</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.xquery</td><td align="left">text&#x2F;xml</td><td align="left">.xsd</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.xsl</td><td align="left">text&#x2F;xml</td><td align="left">.xslt</td><td align="left">text&#x2F;xml</td></tr><tr><td align="left">.xwd</td><td align="left">application&#x2F;x-xwd</td><td align="left">.x_b</td><td align="left">application&#x2F;x-x_b</td></tr><tr><td align="left">.sis</td><td align="left">application&#x2F;vnd.symbian.install</td><td align="left">.sisx</td><td align="left">application&#x2F;vnd.symbian.install</td></tr><tr><td align="left">.x_t</td><td align="left">application&#x2F;x-x_t</td><td align="left">.ipa</td><td align="left">application&#x2F;vnd.iphone</td></tr><tr><td align="left">.apk</td><td align="left">application&#x2F;vnd.android.package-archive</td><td align="left">.xap</td><td align="left">application&#x2F;x-silverlight-app</td></tr></tbody></table><h4 id="MIME类型"><a href="#MIME类型" class="headerlink" title="MIME类型"></a><em>MIME</em>类型</h4><p><em>MIME</em>（<em>Multpurpose Internet Extension</em>）是描述消息内容类型的标准，用来表示文档、文件或字节流的性质和格式。</p><p><em>MIME</em>消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。</p><p>浏览器通常使用<em>MIME</em>类型（而不是为文件扩展名）来确定如何处理<em>URL</em>，因此<em>Web</em>服务器在响应头中添加正确的<em>MIME</em>类型非常重要。如果配置不正确，浏览器可能无法解析文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。</p><h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type/subtype</span><br></pre></td></tr></table></figure><p>MIME 的组成结构非常简单，由类型与子类型两个字符串中间用 <strong>&#x2F;</strong> 分隔而组成，不允许有空格。type 表示可以被分多个子类的独立类别，subtype 表示细分后的每个类型。</p><p>MIME类型对大小写不敏感，但是传统写法都是小写。</p><p>两种主要的 MIME 类型在默认类型中扮演了重要的角色：</p><ul><li><strong>text&#x2F;plain</strong> 表示文本文件的默认值。</li><li><strong>application&#x2F;octet-stream</strong> 表示所有其他情况的默认值。</li></ul><h5 id="常见的-MIME-类型"><a href="#常见的-MIME-类型" class="headerlink" title="常见的 MIME 类型"></a>常见的 MIME 类型</h5><ul><li>超文本标记语言文本 <strong>.html、.html</strong>：<strong>text&#x2F;html</strong></li><li>普通文本 <strong>.txt</strong>： <strong>text&#x2F;plain</strong></li><li>RTF 文本 <strong>.rtf</strong>： <strong>application&#x2F;rtf</strong></li><li>GIF 图形 <strong>.gif</strong>： <strong>image&#x2F;gif</strong></li><li>JPEG 图形 <strong>.jpeg、.jpg</strong>： <strong>image&#x2F;jpeg</strong></li><li>au 声音文件 <strong>.au</strong>： <strong>audio&#x2F;basic</strong></li><li>MIDI 音乐文件 <strong>mid、.midi</strong>： <strong>audio&#x2F;midi、audio&#x2F;x-midi</strong></li><li>RealAudio 音乐文件 <strong>.ra、.ram</strong>： <strong>audio&#x2F;x-pn-realaudio</strong></li><li>MPEG 文件 <strong>.mpg、.mpeg</strong>： <strong>video&#x2F;mpeg</strong></li><li>AVI 文件 <strong>.avi</strong>： <strong>video&#x2F;x-msvideo</strong></li><li>GZIP 文件 <strong>.gz</strong>： <strong>application&#x2F;x-gzip</strong></li><li>TAR 文件 <strong>.tar</strong>： <strong>application&#x2F;x-tar</strong></li></ul><table><thead><tr><th align="left">类型</th><th align="left">描述</th><th align="left">典型示例</th></tr></thead><tbody><tr><td align="left"><code>text</code></td><td align="left">表明文件是普通文本，理论上是人类可读</td><td align="left"><code>text/plain</code>, <code>text/html</code>, <code>text/css, text/javascript</code></td></tr><tr><td align="left"><code>image</code></td><td align="left">表明是某种图像。不包括视频，但是动态图（比如动态gif）也使用image类型</td><td align="left"><code>image/gif</code>, <code>image/png</code>, <code>image/jpeg</code>, <code>image/bmp</code>, <code>image/webp</code>, <code>image/x-icon</code>, <code>image/vnd.microsoft.icon</code></td></tr><tr><td align="left"><code>audio</code></td><td align="left">表明是某种音频文件</td><td align="left"><code>audio/midi</code>, <code>audio/mpeg, audio/webm, audio/ogg, audio/wav</code></td></tr><tr><td align="left"><code>video</code></td><td align="left">表明是某种视频文件</td><td align="left"><code>video/webm</code>, <code>video/ogg</code></td></tr><tr><td align="left"><code>application</code></td><td align="left">表明是某种二进制数据</td><td align="left"><code>application/octet-stream</code>, <code>application/pkcs12</code>, <code>application/vnd.mspowerpoint</code>, <code>application/xhtml+xml</code>, <code>application/xml</code>, <code>application/pdf</code></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP&quot;&gt;&lt;/a&gt;HTTP&lt;/h1&gt;&lt;h4 id=&quot;Http及Https概念&quot;&gt;&lt;a href=&quot;#Http及Https概念&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="http" scheme="http://example.com/categories/http/"/>
    
    
    <category term="code" scheme="http://example.com/tags/code/"/>
    
    <category term="http" scheme="http://example.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>基于腾讯云的Typora图床</title>
    <link href="http://example.com/2022/09/10/maBed/"/>
    <id>http://example.com/2022/09/10/maBed/</id>
    <published>2022-09-10T03:11:10.000Z</published>
    <updated>2022-10-06T03:46:56.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="术前准备"><a href="#术前准备" class="headerlink" title="术前准备"></a>术前准备</h2><ul><li><p>安装好 <em>Typora</em> ： <a href="https://pan.xunlei.com/s/VNB_VLRHiLk6wUoyXr4mCWM6A1">提取码：h9bb</a>    <em>PicGo</em>  ：<a href="https://pan.xunlei.com/s/VNB_WALBOdxS0Hkp49VZlZT_A1">提取码：k77e</a></p></li><li><p>环境配置 <em>nodejs</em>：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p></li><li><p><em>Gitee</em> 账户：<a href="https://gitee.com/">https://gitee.com/</a></p></li></ul><h2 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h2><h3 id="01-配置完nodejs"><a href="#01-配置完nodejs" class="headerlink" title="01.配置完nodejs"></a>01.配置完<em>nodejs</em></h3><figure class="highlight plaintext"><figcaption><span>--version</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;node --version</span><br><span class="line">v16.17.0</span><br><span class="line">C:\&gt;npm --verison</span><br><span class="line">8.15.0</span><br></pre></td></tr></table></figure><h3 id="02-配置腾讯云对象储存"><a href="#02-配置腾讯云对象储存" class="headerlink" title="02.配置腾讯云对象储存"></a>02.配置腾讯云对象储存</h3><p><strong>创建储存桶</strong></p><ul><li>点击 <code>储存桶列表</code>-&gt; <code>创建储存桶</code> -&gt; <em>进行以下配置</em></li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210751246.png" alt="image-20221005210751246"></p><ul><li>访问权限选择<strong>公有读私有写</strong>，否则图片无法读取，其他的根据自己往下填写就可以。 地域建议离你所在的位置越近越好。</li></ul><h3 id="03-获取密钥"><a href="#03-获取密钥" class="headerlink" title="03.获取密钥"></a>03.获取密钥</h3><ul><li>腾讯云头像–&gt;<a href="https://cloud.tencent.com/product/cam?from=10680">访问管理</a>–&gt; API密钥管理，创建密钥，就会生成 <strong>APPID、SecretId和SecretKey</strong></li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210756892.png" alt="image-20221005210756892"></p><h3 id="04-PicGo配置"><a href="#04-PicGo配置" class="headerlink" title="04.PicGo配置"></a>04.<em>PicGo</em>配置</h3><ul><li>点击<code>图床设置</code>-&gt; <code>腾讯云COS</code>-&gt; 填写好刚刚的密钥和存储桶的名称，记得<strong>设置COS版本为V5</strong></li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210801870.png" alt="image-20221005210801870"></p><ul><li>自定义域名和存储路径未进行CDN加速可默认为空</li></ul><p><strong>上传测试</strong></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210812201.png" alt="image-20221005210812201"></p><p><strong>查看文件是否有保存</strong></p><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210807383.png" alt="image-20221005210807383"></p><h3 id="05-Typora配置"><a href="#05-Typora配置" class="headerlink" title="05.Typora配置"></a>05.Typora配置</h3><ul><li>点击 <code>文件</code>-&gt;  <code>偏好设置</code> -&gt; <code>图像</code></li></ul><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005210821839.png" alt="image-20221005210821839"></p><ul><li>如上图配置即可使用</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://blog.csdn.net/haojie_duan/article/details/120400386">https://blog.csdn.net/haojie_duan/article/details/120400386</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1834573">https://cloud.tencent.com/developer/article/1834573</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;术前准备&quot;&gt;&lt;a href=&quot;#术前准备&quot; class=&quot;headerlink&quot; title=&quot;术前准备&quot;&gt;&lt;/a&gt;术前准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装好 &lt;em&gt;Typora&lt;/em&gt; ： &lt;a href=&quot;https://pan.xunlei.com</summary>
      
    
    
    
    <category term="code" scheme="http://example.com/categories/code/"/>
    
    
    <category term="Typora" scheme="http://example.com/tags/Typora/"/>
    
    <category term="code" scheme="http://example.com/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>Mysql基础</title>
    <link href="http://example.com/2022/09/09/MySQL/"/>
    <id>http://example.com/2022/09/09/MySQL/</id>
    <published>2022-09-09T03:11:10.000Z</published>
    <updated>2022-10-20T16:00:37.827Z</updated>
    
    <content type="html"><![CDATA[<p>1.数据库：为了增删改查数据。（文件保存数据很蠢很蠢）<br>2.C R U D：增删改查的专业术语。<br>3.层次、网状、关系型模型数据库</p><h2 id="数据库开始"><a href="#数据库开始" class="headerlink" title="数据库开始"></a><strong>数据库开始</strong></h2><p>show databases;</p><p>imformation_schema：信息数据库，其中保存着关于 MySQL 服务器所维护的所有其他数据库的信息，如数据库名，数据库的表，表栏的数据类型与访问权限等</p><p>mysql：保存了用户信息。</p><p>performance_schema：监控 MySQL 运行过程的资源消耗情况。</p><p>sys： 通过过视图的形式把 information_schema 和 performance_schema 结合起来，查询出更加令人容易理解的数据。</p><h2 id="数据库基本操作"><a href="#数据库基本操作" class="headerlink" title="数据库基本操作"></a><strong>数据库基本操作</strong></h2><p>创建数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> student;</span><br><span class="line"></span><br><span class="line">判断创建语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> student;</span><br><span class="line"></span><br><span class="line">关键字变量名语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="symbol">`database`</span>;</span><br></pre></td></tr></table></figure><p>删除数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> student;</span><br><span class="line"></span><br><span class="line">判断删除语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">exists</span> student;</span><br><span class="line"></span><br><span class="line">关键字变量名语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="symbol">`database`</span>;</span><br></pre></td></tr></table></figure><p>查看创建数据库的 SQL：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> student;</span><br></pre></td></tr></table></figure><p>回退的语句：</p><p>Ctrl + C（^C）</p><p>创建数据库设置指定的字符编码</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> teacher charset=gbk;</span><br></pre></td></tr></table></figure><p>修改数据库字符编码</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter database student charset<span class="operator">=</span>gbk<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a><strong>表操作</strong></h3><p>进入库:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use fuck_school<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>展示表：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><p>制作表：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"></span><br><span class="line">Id <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line"><span class="type">name</span> <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line"></span><br><span class="line">age <span class="type">int</span>);</span><br></pre></td></tr></table></figure><p>有 B 格的写法：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> teacher(</span><br><span class="line"></span><br><span class="line">Id <span class="type">int</span> auto_increment <span class="keyword">primary key</span> <span class="keyword">comment</span> <span class="string">&#x27;主键 Id&#x27;</span>, </span><br><span class="line"></span><br><span class="line"><span class="type">name</span> <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">comment</span> <span class="string">&#x27;名字&#x27;</span>,</span><br><span class="line"></span><br><span class="line">phone <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">&#x27;暂时未知&#x27;</span> <span class="keyword">comment</span> <span class="string">&#x27;电话&#x27;</span>, </span><br><span class="line"></span><br><span class="line">adress <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">default</span> <span class="string">&#x27;暂时未知&#x27;</span> <span class="keyword">comment</span> <span class="string">&#x27;家庭住址&#x27;</span></span><br><span class="line"></span><br><span class="line">)engine = innodb;</span><br></pre></td></tr></table></figure><p>auto_increment 自动增长 用于类似于 ID 的数据（有规律性）</p><p>primary key 主键 最主要的 靠它来区分表 </p><p>comment 注释</p><p>not null 不能为空</p><p>default 默认值</p><p>engine &#x3D; innodb 数据库引擎类型</p><p>展示表结构</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc teacher<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> frank,fuck;</span><br></pre></td></tr></table></figure><p>修改表：</p><p>添加元素</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> address <span class="type">varchar</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p>按位元素</p><p>之后</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">after</span> Id；</span><br></pre></td></tr></table></figure><p>位数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> address <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">first</span>; </span><br></pre></td></tr></table></figure><p>删除元素</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> address;</span><br></pre></td></tr></table></figure><p>修改元素</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student change address `<span class="keyword">Add</span>` <span class="type">varchar</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p>修改类型</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student modify Id <span class="type">varchar</span>(<span class="number">11</span>);</span><br></pre></td></tr></table></figure><p>修改表名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">rename</span> <span class="keyword">to</span> students;</span><br></pre></td></tr></table></figure><p>清空表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> teacher;</span><br></pre></td></tr></table></figure><h3 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a><strong>数据操作</strong></h3><p>插入数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> teacher (Id, <span class="type">name</span>, phone, adress) <span class="keyword">values</span> (<span class="number">1</span>, <span class="string">&#x27;Fuck&#x27;</span>, <span class="string">&#x27;128989&#x27;</span>, <span class="string">&#x27;GuangZhou&#x27;</span>);</span><br></pre></td></tr></table></figure><p>查看数据</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> teacher;</span><br></pre></td></tr></table></figure><p>一次插入多条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> teacher <span class="keyword">values</span> (<span class="keyword">Null</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="keyword">Null</span>, <span class="keyword">default</span>), (<span class="keyword">Null</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="keyword">Null</span>, <span class="keyword">default</span>);</span><br></pre></td></tr></table></figure><p>删除数据( 注意 where 后面记得带上数据，否则可能误删多条数据！)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> teacher <span class="keyword">where</span> <span class="type">name</span> = <span class="string">&#x27;Tom&#x27;</span>;</span><br></pre></td></tr></table></figure><p>清空表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> teacher;</span><br></pre></td></tr></table></figure><p>小细节</p><p>delete 与 truncate 清表时，delete 会继续接下来的的顺序编号。</p><p>更新数据( 同删除数据一样必须带上 where 不然可能带来灾难性的后果）</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> teacher <span class="keyword">set</span> <span class="type">name</span> = <span class="string">&#x27;Frank&#x27;</span> <span class="keyword">where</span> <span class="type">name</span> = <span class="string">&#x27;Fuck&#x27;</span>(Id = <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>查询部分数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Id, <span class="type">name</span> <span class="keyword">from</span> teacher;</span><br></pre></td></tr></table></figure><p>理论部分</p><p>DDL data definition language 数据库定义语言 create alter drop show</p><p>DML data manipution language 数据库操纵语言 insert update delete select</p><p>DCL data control language 数据库控制语言 </p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a><strong>数据类型</strong></h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line"></span><br><span class="line">  -&gt; id <span class="type">smallint</span> unsigned auto_increment <span class="keyword">primary key</span> <span class="keyword">comment</span> <span class="string">&#x27;id&#x27;</span>, </span><br><span class="line"></span><br><span class="line">  -&gt; age tinyint unsigned <span class="keyword">comment</span> <span class="string">&#x27;年龄&#x27;</span>, </span><br><span class="line"></span><br><span class="line">  -&gt; fuck <span class="type">int</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">  -&gt; );</span><br></pre></td></tr></table></figure><p><code>unsigned </code></p><p>表示正值数据</p><p><code>double</code> 类型精度丢失问题</p><p>浮点型数据类型会有精度丢失的问题，比如小数位设置 6 位，存入 0.45，0.45 转换成二进制是个无限循环小数 0.01110011100…，无法准确表示，存储的时候会发生精度丢失。</p><p><code>Decimal</code>（定点数）</p><p>四舍五入后用字符串类型数据进行存储</p><p>VarChar 与 Char</p><p><code>VarChar</code> 为可变长字符串 节省空间 但是性能较低</p><p><code>Char</code> 为定长字符串 空间占用可能较多 但性能高</p><p>性能不同原因：VarChar 存储的不仅仅是数据内容，还有字节长度以及节点位置。</p><p>Boolean</p><p>insert into test values(true&#x2F;false&#x2F;1&#x2F;0);</p><p>enum </p><p>create table Dmeo(</p><p>gender enum(‘women’,’man’,’?’)</p><p>);</p><p>枚举类型只能用枚举列表里面的元素来赋值（也可以通过整数进行存储）</p><p>好处：存储实际上使用整数，速度比字符串快，限制数据节省空间。</p><p>set 集合</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Demo(</span><br><span class="line"></span><br><span class="line">hobby_novel <span class="keyword">set</span> (<span class="string">&#x27;secience&#x27;</span>,<span class="string">&#x27;love&#x27;</span>,<span class="string">&#x27;model&#x27;</span>)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Demo (<span class="string">&#x27;seciece&#x27;</span>,<span class="string">&#x27;model&#x27;</span>);</span><br></pre></td></tr></table></figure><p>与 enum 相比可以一次选择多个元素</p><p>时间</p><p>create table Demo(</p><p>createdTime date</p><p>);</p><p>insert into Demo values(‘2022-04-09 11:23:56’);</p><h3 id="列属性完整性"><a href="#列属性完整性" class="headerlink" title="列属性完整性"></a><strong>列属性完整性</strong></h3><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>设置主键</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo <span class="keyword">add</span> <span class="keyword">primary key</span>(id,<span class="type">name</span>);</span><br></pre></td></tr></table></figure><p>删除主键</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo <span class="keyword">drop</span> <span class="keyword">primary</span> <span class="keyword">key</span>;</span><br></pre></td></tr></table></figure><p>主键的唯一性</p><p>一个表里只能存在一个主键（复合主键也为一个主键） 并且主键每行数据都不能为空</p><h3 id="唯一键"><a href="#唯一键" class="headerlink" title="唯一键"></a>唯一键</h3><p>设置唯一键</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo <span class="keyword">add</span> <span class="keyword">unique</span> (phone);</span><br></pre></td></tr></table></figure><p>删除唯一键</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> demo <span class="keyword">drop</span> <span class="keyword">index</span> (phone);</span><br></pre></td></tr></table></figure><p>主键和唯一键的区别</p><p>1.主键不能为空，唯一键可以为空</p><p>2.主键只有一个，唯一键可以存在多个</p><p>3.主键可以在别的表里用，唯一键只在自己的表里瞎折腾</p><p>数据库完整性</p><p>1.保证字段完整 eg.保证存在主键、是设置自动增长，有唯一数据</p><p>2.保证数据类型正确</p><p>3.考虑表里的字段可能会被其他的表所用</p><p>4.自己定义约束</p><h3 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h3><p>添加外键</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table eatery(</span><br><span class="line"></span><br><span class="line">  -&gt; price int,</span><br><span class="line"></span><br><span class="line">  -&gt; stuId int(<span class="number">4</span>),</span><br><span class="line"></span><br><span class="line">  -&gt; foreign key <span class="function"><span class="params">(stuId)</span> <span class="title">references</span> <span class="title">stuId</span><span class="params">(stuId)</span> </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  -&gt;</span> );</span><br></pre></td></tr></table></figure><p>后期加入外键</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> eatery_2 <span class="keyword">add</span> <span class="keyword">foreign</span> <span class="keyword">key</span> (stuId) <span class="keyword">references</span> stuId(stuId);</span><br></pre></td></tr></table></figure><p>删除外键</p><p>先查询 <code>show create table eatery_2;</code></p><p>再删除 <code>alter table eatery_2 drop foreign key eatery_2_ ibfk_1;</code></p><p>设计时最好在定义表时就设置好外键</p><p>置空：用于删除数据</p><p>级联：用于更新数据</p><p>操作 </p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> eatery <span class="keyword">add</span> <span class="keyword">foreign</span> <span class="keyword">key</span> (stuId) <span class="keyword">references</span> stuId(stuId) <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">set</span> <span class="keyword">null</span> <span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">cascade</span>;</span><br></pre></td></tr></table></figure><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a><strong>关系型数据库</strong></h2><p>关系：两张表的共有字段去确定数据的完整性</p><p>行：一条数据 一条数据记录 实体</p><p>列：一个字段 属性</p><p>数据冗余：虽然会占用空间，但是提高了性能。</p><p>实体和实体的关系：一对一，一对多，多对多。</p><p>Code 范式</p><p>1.确保字段的原子性</p><p>2.非键字段必须依赖于键字段 说白了就是别他妈没事找事</p><p>3.消除传递依赖</p><h3 id="数据查询语句"><a href="#数据查询语句" class="headerlink" title="数据查询语句"></a><strong>数据查询语句</strong></h3><p><strong>单表查询</strong></p><p><strong>select</strong></p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;go fuck yourself&#x27;</span> <span class="keyword">as</span> qnmd<span class="punctuation">;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="number">2</span>*<span class="number">7</span> <span class="keyword">as</span> <span class="keyword">result</span><span class="punctuation">;</span></span><br></pre></td></tr></table></figure><p><strong>from</strong></p><p><strong>dual</strong></p><p>伪表：该表主要目的是为了保证在使用 SELECT 语句中的语句的完整性而提供的。</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">2</span>*<span class="number">7</span> <span class="keyword">as</span> <span class="keyword">result</span> <span class="keyword">from</span> dual<span class="punctuation">;</span></span><br></pre></td></tr></table></figure><p><strong>where</strong> </p><p>&lt; &gt; &#x3D; !&#x3D; dddd</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t3 <span class="keyword">where</span> age &gt;= <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t4 <span class="keyword">where</span> adress = <span class="string">&#x27;Beijing&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t4 <span class="keyword">where</span> adress != <span class="string">&#x27;Shanghai&#x27;</span>; </span><br></pre></td></tr></table></figure><p>&#x2F;or</p><p><strong>in</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> t4 <span class="keyword">where</span> adress <span class="keyword">not</span> <span class="title">in</span>(<span class="params"><span class="string">&#x27;Shanghai&#x27;</span></span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> t4 <span class="keyword">where</span> adress <span class="title">in</span>(<span class="params"><span class="string">&#x27;Shanghai&#x27;</span>,<span class="string">&#x27;Beijing&#x27;</span></span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>between and</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t3 <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a><strong>聚合函数</strong></h3><p>总和<code> select sum(english) from score;</code></p><p>平均 <code>select avg(english) from score;</code></p><p>最大<code> select max(english) from score;</code></p><p>最小<code>select min(english) from score;</code></p><p>次数<code> select count(id) from score; / select count(*) from score;</code></p><p><strong>like</strong></p><p>查询’张’后面带多个字符</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="type">name</span> <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>‘_’个数表示元素多少个字符</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="type">name</span> <span class="keyword">like</span> <span class="string">&#x27;张__&#x27;</span>; </span><br></pre></td></tr></table></figure><p><strong>order by</strong> </p><p>升序查询</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> score <span class="keyword">order</span> <span class="keyword">by</span> chinese <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><p>降序查询</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> score <span class="keyword">order</span> <span class="keyword">by</span> english <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p><strong>group by</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> avg(age) <span class="keyword">as</span> <span class="string">&#x27;年龄&#x27;</span> , address <span class="keyword">as</span> <span class="string">&#x27;地区&#x27;</span> <span class="keyword">from</span> <span class="keyword">info</span> <span class="keyword">group</span> <span class="keyword">by</span> address <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p><strong>group_concat()</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> group_concat(<span class="type">name</span>) , gender <span class="keyword">as</span> <span class="string">&#x27;性别&#x27;</span> <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> gender;</span><br></pre></td></tr></table></figure><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210141915708.png" alt="image-20221014191523641" style="zoom:33%;" /><p><strong>having</strong></p><p>表示对生成的表进行查询，相当于 where</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> avg(age) <span class="keyword">as</span> <span class="string">&#x27;age&#x27;</span> , address <span class="keyword">from</span> <span class="keyword">info</span> <span class="keyword">group</span> <span class="keyword">by</span> address <span class="keyword">having</span> age &gt; <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p><strong>limit</strong></p><p>limit 开始位置，结束长度；</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">info</span> <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">2</span>,<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><strong>distinct all</strong></p><p>去重</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> count(<span class="keyword">distinct</span> address) <span class="keyword">from</span> <span class="keyword">info</span>; </span><br></pre></td></tr></table></figure><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a><strong>多表查询</strong></h3><p><strong>inner join on</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="type">name</span>,chinese <span class="keyword">from</span> student <span class="keyword">inner</span> <span class="keyword">join</span> score <span class="keyword">on</span> student.id = score.id <span class="keyword">order</span> <span class="keyword">by</span> english <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p>注意事项：超过两张表时直接在后面继续续写一次语句。</p><p><strong>left&#x2F;right join on</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name,english <span class="keyword">from</span> student <span class="keyword">left</span>/<span class="keyword">right</span> <span class="keyword">join</span> score <span class="keyword">on</span> student.id = score.id <span class="keyword">order</span> <span class="keyword">by</span> english <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><p><strong>cross join</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">cross</span> <span class="keyword">join</span> t3; </span><br></pre></td></tr></table></figure><p>有笛卡尔积内味了（数学组合）</p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/image-20221005205759542.png" alt="image-20221005205759542" style="zoom: 33%;" /><p><strong>natural join</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">natural</span> (<span class="keyword">left</span><span class="operator">/</span><span class="keyword">right</span>) <span class="keyword">left</span> <span class="keyword">join</span> t3;</span><br></pre></td></tr></table></figure><p>ps.若两表之间无公共字段，则返回的依旧是笛卡尔积。</p><p><strong>using</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t1 <span class="keyword">inner</span> t3 <span class="keyword">using</span> (<span class="type">name</span>);</span><br></pre></td></tr></table></figure><p>ps.当两张表为相同字段时，要采用加上using的结构，否则可能empty set输出。</p><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a><strong>子查询</strong></h3><p><strong>基本语法</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> id <span class="title">in</span>(<span class="params"><span class="keyword">select</span> id <span class="keyword">from</span> score <span class="keyword">where</span> english &lt;= <span class="number">85</span></span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>not in</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="function"><span class="keyword">from</span> student <span class="keyword">where</span> id <span class="keyword">not</span> <span class="title">in</span>(<span class="params"><span class="keyword">select</span> id <span class="keyword">from</span> score <span class="keyword">where</span> chinese &gt;= <span class="number">85</span></span>)</span>;</span><br></pre></td></tr></table></figure><p>ps.用in或者not in主要是不止一个结果。</p><p><strong>exists &#x2F; not exists</strong></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> id <span class="keyword">from</span> score <span class="keyword">where</span> english &gt;= <span class="number">85</span>); </span><br></pre></td></tr></table></figure><p>ps.只要有存在就输出。</p><h2 id="高级部分"><a href="#高级部分" class="headerlink" title="高级部分"></a>高级部分</h2><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p> <strong>视图的创建与查询</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> stu_all <span class="keyword">as</span> <span class="keyword">select</span> <span class="type">name</span>,phone,score <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> vw_stu_all</span><br></pre></td></tr></table></figure><p><strong>修改视图</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> stu_all <span class="keyword">as</span> <span class="keyword">select</span> <span class="type">name</span>,phone <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure><p><strong>删除视图</strong></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">drop</span> <span class="built_in">view</span> vw_stu_all</span><br></pre></td></tr></table></figure><p><strong>视图算法</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> algorithm=<span class="keyword">merge</span> <span class="keyword">view</span> stu_all <span class="keyword">as</span> <span class="keyword">select</span> name,phone,score <span class="keyword">from</span> student </span><br></pre></td></tr></table></figure><blockquote><p>Merge算法</p></blockquote><p>合并算法，每当执行的时候,先将视图的sql语句与外部查询视图的sql语句,合并在一起,最终执行；这样操作对效率基本上没有什么影响</p><blockquote><p>Temptable</p></blockquote><p>临时表算法，创建一个临时表用于数据的填充以及查询，当数据量越大时，效率越低，且该视图无法进行update的操作。</p><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p><strong>开启事务</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br></pre></td></tr></table></figure><p><strong>回滚事务</strong></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rollback<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><strong>提交事务</strong></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">commit<span class="comment">;</span></span><br></pre></td></tr></table></figure><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210191611437.png" alt="image-20221019161158358" style="zoom:50%;" /><p><strong>保存回滚点</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">savapoint</span> *；</span><br></pre></td></tr></table></figure><p><strong>回到回滚点</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> *;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210191631958.png" alt="image-20221019163142908"></p><p><strong>特性：ACID（InnoDB引擎下）</strong></p><p>原子性（atomicity，或称不可分割性）、一致性（consistency）、隔离性（isolation，又称独立性）、持久性（durability）。</p><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>增删改很慢，查很快</p><p><strong>创建索引</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> money_index <span class="keyword">on</span> wallet(id);</span><br></pre></td></tr></table></figure><p><strong>添加索引</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> wallet <span class="keyword">add</span> <span class="keyword">index</span> money_index (<span class="type">money</span>);</span><br></pre></td></tr></table></figure><p><strong>删除索引</strong></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> money_index <span class="keyword">on</span> wallet;</span><br></pre></td></tr></table></figure><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p><strong>delimiter更改结束符号</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delimiter <span class="operator">/</span><span class="operator">/</span></span><br></pre></td></tr></table></figure><p><strong>procedure存储过程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create procedure proc()</span><br><span class="line">    -&gt; begin</span><br><span class="line">    -&gt; update wallet set money=money+50;</span><br><span class="line">    -&gt; insert into wallet values(5,3737);</span><br><span class="line">    -&gt; end //</span><br></pre></td></tr></table></figure><p><strong>执行存储</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">call <span class="title">proc</span>()</span>;</span><br></pre></td></tr></table></figure><img src="https://cdn.staticaly.com/gh/Dreamin121/picgohub@master/imgs/202210200006857.png" alt="image-20221020000510172" style="zoom:50%;" /><p><strong>函数</strong></p><p><em>数字</em></p><p>rand()随机数</p><p>ceil()向上取整</p><p>round()向下取整</p><p>floor()向下取整</p><p>truncate(112,2)截取数字</p><p><em>字符串</em></p><p>ucase()大写</p><p>lcase()小写</p><p>left&#x2F;right(‘fuck’,2)截取</p><p>substring(‘fuck’,1,3)截取中间</p><p>concat(‘fu’,’ck’)拼接字符串</p><p><em>时间</em></p><p>unix_timestamp()时间毫秒值</p><p>year&#x2F;month&#x2F;day(now())获取当前年&#x2F;月&#x2F;日</p><p><em>加密</em></p><p>sha(‘fuck’);</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.数据库：为了增删改查数据。（文件保存数据很蠢很蠢）&lt;br&gt;2.C R U D：增删改查的专业术语。&lt;br&gt;3.层次、网状、关系型模型数据库&lt;/p&gt;
&lt;h2 id=&quot;数据库开始&quot;&gt;&lt;a href=&quot;#数据库开始&quot; class=&quot;headerlink&quot; title=&quot;数据库</summary>
      
    
    
    
    <category term="Mysql" scheme="http://example.com/categories/Mysql/"/>
    
    
    <category term="code" scheme="http://example.com/tags/code/"/>
    
    <category term="Mysql" scheme="http://example.com/tags/Mysql/"/>
    
  </entry>
  
</feed>
